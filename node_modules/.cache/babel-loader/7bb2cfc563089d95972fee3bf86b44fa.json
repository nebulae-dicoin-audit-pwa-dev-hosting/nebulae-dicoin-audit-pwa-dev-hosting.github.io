{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/app/fuse-configs/routesConfig.js\";\nimport { Redirect } from 'react-router-dom';\nimport FuseUtils from '@fuse/utils'; // import ExampleConfig from 'app/main/example/ExampleConfig';\n\nimport TravelsConfig from 'app/main/travels/TravelsConfig';\nimport AnalysisConfig from 'app/main/analysis/AnalysisConfig';\nimport SettingConfig from 'app/main/settings/SettingConfig';\nimport FuseLoading from '@fuse/core/FuseLoading';\nimport Error404Page from 'app/main/404/Error404Page';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst routeConfigs = [TravelsConfig, AnalysisConfig, SettingConfig];\nconst routes = [// if you want to make whole app auth protected by default change defaultAuth for example:\n// ...FuseUtils.generateRoutesFromConfigs(routeConfigs, ['admin','staff','user']),\n// The individual route configs which has auth option won't be overridden.\n...FuseUtils.generateRoutesFromConfigs(routeConfigs, null), {\n  exact: true,\n  path: '/',\n  component: () => /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/travels\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 22\n  }, this)\n}, {\n  path: '/loading',\n  exact: true,\n  component: () => /*#__PURE__*/_jsxDEV(FuseLoading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 22\n  }, this)\n}, {\n  path: '/404',\n  // component: () => <Error404Page />,\n  component: () => /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/travels\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 22\n  }, this)\n}, {\n  // component: () => <Redirect to=\"/404\" />,\n  component: () => /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/travels\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 22\n  }, this)\n}];\nexport default routes;","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/app/fuse-configs/routesConfig.js"],"names":["Redirect","FuseUtils","TravelsConfig","AnalysisConfig","SettingConfig","FuseLoading","Error404Page","routeConfigs","routes","generateRoutesFromConfigs","exact","path","component"],"mappings":";AAAA,SAASA,QAAT,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;AAEA,MAAMC,YAAY,GAAG,CAACL,aAAD,EAAgBC,cAAhB,EAAgCC,aAAhC,CAArB;AAEA,MAAMI,MAAM,GAAG,CACb;AACA;AACA;AACA,GAAGP,SAAS,CAACQ,yBAAV,CAAoCF,YAApC,EAAkD,IAAlD,CAJU,EAKb;AACEG,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,IAAI,EAAE,GAFR;AAGEC,EAAAA,SAAS,EAAE,mBAAM,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHnB,CALa,EAUb;AACED,EAAAA,IAAI,EAAE,UADR;AAEED,EAAAA,KAAK,EAAE,IAFT;AAGEE,EAAAA,SAAS,EAAE,mBAAM,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAHnB,CAVa,EAeb;AACED,EAAAA,IAAI,EAAE,MADR;AAEE;AACAC,EAAAA,SAAS,EAAE,mBAAM,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHnB,CAfa,EAoBb;AACE;AACAA,EAAAA,SAAS,EAAE,mBAAM,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAFnB,CApBa,CAAf;AA0BA,eAAeJ,MAAf","sourcesContent":["import { Redirect } from 'react-router-dom';\nimport FuseUtils from '@fuse/utils';\n// import ExampleConfig from 'app/main/example/ExampleConfig';\nimport TravelsConfig from 'app/main/travels/TravelsConfig';\nimport AnalysisConfig from 'app/main/analysis/AnalysisConfig';\nimport SettingConfig from 'app/main/settings/SettingConfig';\n\nimport FuseLoading from '@fuse/core/FuseLoading';\nimport Error404Page from 'app/main/404/Error404Page';\n\nconst routeConfigs = [TravelsConfig, AnalysisConfig, SettingConfig];\n\nconst routes = [\n  // if you want to make whole app auth protected by default change defaultAuth for example:\n  // ...FuseUtils.generateRoutesFromConfigs(routeConfigs, ['admin','staff','user']),\n  // The individual route configs which has auth option won't be overridden.\n  ...FuseUtils.generateRoutesFromConfigs(routeConfigs, null),\n  {\n    exact: true,\n    path: '/',\n    component: () => <Redirect to=\"/travels\" />,\n  },\n  {\n    path: '/loading',\n    exact: true,\n    component: () => <FuseLoading />,\n  },\n  {\n    path: '/404',\n    // component: () => <Error404Page />,\n    component: () => <Redirect to=\"/travels\" />,\n  },\n  {\n    // component: () => <Redirect to=\"/404\" />,\n    component: () => <Redirect to=\"/travels\" />,\n  },\n];\n\nexport default routes;\n"]},"metadata":{},"sourceType":"module"}