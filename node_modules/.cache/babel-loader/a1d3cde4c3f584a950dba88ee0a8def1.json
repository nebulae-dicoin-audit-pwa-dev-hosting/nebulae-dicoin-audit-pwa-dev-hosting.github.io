{"ast":null,"code":"import _classCallCheck from\"/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import FuseSplashScreen from'@fuse/core/FuseSplashScreen';import auth0Service from'app/services/auth0Service';import firebaseService from'app/services/firebaseService';import jwtService from'app/services/jwtService';import{Component}from'react';import{connect}from'react-redux';import{bindActionCreators}from'@reduxjs/toolkit';import{hideMessage,showMessage}from'app/store/fuse/messageSlice';import{setUserDataFirebase,setUserDataAuth0,setUserData,logoutUser}from'./store/userSlice';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Auth=/*#__PURE__*/function(_Component){_inherits(Auth,_Component);var _super=_createSuper(Auth);function Auth(){var _this;_classCallCheck(this,Auth);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={waitAuthCheck:true};_this.jwtCheck=function(){return new Promise(function(resolve){jwtService.on('onAutoLogin',function(){_this.props.showMessage({message:'Logging in with JWT'});/**\n         * Sign in and retrieve user data from Api\n         */jwtService.signInWithToken().then(function(user){_this.props.setUserData(user);resolve();_this.props.showMessage({message:'Logged in with JWT'});}).catch(function(error){_this.props.showMessage({message:error.message});resolve();});});jwtService.on('onAutoLogout',function(message){if(message){_this.props.showMessage({message:message});}_this.props.logout();resolve();});jwtService.on('onNoAccessToken',function(){resolve();});jwtService.init();return Promise.resolve();});};_this.auth0Check=function(){return new Promise(function(resolve){auth0Service.init(function(success){if(!success){resolve();}});if(auth0Service.isAuthenticated()){_this.props.showMessage({message:'Logging in with Auth0'});/**\n         * Retrieve user data from Auth0\n         */auth0Service.getUserData().then(function(tokenData){_this.props.setUserDataAuth0(tokenData);resolve();_this.props.showMessage({message:'Logged in with Auth0'});});}else{resolve();}return Promise.resolve();});};_this.firebaseCheck=function(){return new Promise(function(resolve){firebaseService.init(function(success){if(!success){resolve();}});firebaseService.onAuthStateChanged(function(authUser){if(authUser){_this.props.showMessage({message:'Logging in with Firebase'});/**\n           * Retrieve user data from Firebase\n           */firebaseService.getUserData(authUser.uid).then(function(user){_this.props.setUserDataFirebase(user,authUser);resolve();_this.props.showMessage({message:'Logged in with Firebase'});},function(error){resolve();});}else{resolve();}});return Promise.resolve();});};return _this;}_createClass(Auth,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;return Promise.all([// Comment the lines which you do not use\n// this.firebaseCheck(),\n// this.auth0Check(),\n// this.jwtCheck(),\n]).then(function(){_this2.setState({waitAuthCheck:false});});}},{key:\"render\",value:function render(){return this.state.waitAuthCheck?/*#__PURE__*/_jsx(FuseSplashScreen,{}):/*#__PURE__*/_jsx(_Fragment,{children:this.props.children});}}]);return Auth;}(Component);function mapDispatchToProps(dispatch){return bindActionCreators({logout:logoutUser,setUserData:setUserData,setUserDataAuth0:setUserDataAuth0,setUserDataFirebase:setUserDataFirebase,showMessage:showMessage,hideMessage:hideMessage},dispatch);}export default connect(null,mapDispatchToProps)(Auth);","map":null,"metadata":{},"sourceType":"module"}