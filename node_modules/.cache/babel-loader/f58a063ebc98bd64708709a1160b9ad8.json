{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _input_wrap = require('./input_wrap');\n\nvar _input_wrap2 = _interopRequireDefault(_input_wrap);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ArrowIconSvg = function ArrowIconSvg() {\n  return _react2.default.createElement('svg', {\n    'aria-hidden': 'true',\n    focusable: 'false',\n    width: '5px',\n    height: '10px',\n    viewBox: '0 0 5 10',\n    version: '1.1',\n    xmlns: 'http://www.w3.org/2000/svg',\n    xmlnsXlink: 'http://www.w3.org/1999/xlink',\n    className: 'auth0-lock-icon-arrow'\n  }, _react2.default.createElement('g', {\n    stroke: 'none',\n    strokeWidth: '1',\n    fill: 'none',\n    fillRule: 'evenodd'\n  }, _react2.default.createElement('g', {\n    id: 'Lock',\n    transform: 'translate(-396.000000, -3521.000000)',\n    fill: '#000000',\n    opacity: '0.539999962'\n  }, _react2.default.createElement('g', {\n    id: 'SMS',\n    transform: 'translate(153.000000, 3207.000000)'\n  }, _react2.default.createElement('g', {\n    transform: 'translate(35.000000, 299.000000)'\n  }, _react2.default.createElement('g', {\n    transform: 'translate(210.000000, 20.000000) rotate(-90.000000) translate(-210.000000, -20.000000) translate(198.000000, 8.000000)'\n  }, _react2.default.createElement('path', {\n    id: 'Shape',\n    d: 'M7,10 L12,15 L17,10 L7,10 Z'\n  })))))));\n};\n\nvar SelectInput = function (_React$Component) {\n  _inherits(SelectInput, _React$Component);\n\n  function SelectInput(props) {\n    _classCallCheck(this, SelectInput);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _this.state = {};\n    return _this;\n  }\n\n  SelectInput.prototype.render = function render() {\n    var _props = this.props,\n        lockId = _props.lockId,\n        iconUrl = _props.iconUrl,\n        isValid = _props.isValid,\n        label = _props.label,\n        ariaLabel = _props.ariaLabel,\n        name = _props.name,\n        onClick = _props.onClick,\n        placeholder = _props.placeholder;\n    var icon = this.props.icon;\n    var focused = this.state.focused;\n    var limitedValue = label || placeholder;\n\n    if (limitedValue.length > 23) {\n      limitedValue = limitedValue.substr(0, 20) + '...';\n    }\n\n    if (!icon && typeof iconUrl === 'string' && iconUrl) {\n      icon = _react2.default.createElement('img', {\n        className: 'auth0-lock-custom-icon',\n        alt: ariaLabel || name,\n        src: iconUrl\n      });\n    }\n\n    var className = 'auth0-lock-input auth0-lock-input-location';\n    if (!label) className += ' auth0-lock-input-with-placeholder';\n    return _react2.default.createElement(_input_wrap2.default, {\n      focused: focused,\n      isValid: isValid,\n      name: 'location',\n      icon: icon\n    }, _react2.default.createElement('input', {\n      id: lockId + '-' + name,\n      type: 'button',\n      name: name,\n      className: className,\n      value: limitedValue,\n      onFocus: this.handleFocus.bind(this),\n      onBlur: this.handleBlur.bind(this),\n      onKeyDown: this.handleKeyDown.bind(this),\n      onClick: onClick,\n      'aria-label': ariaLabel || name,\n      'aria-invalid': !isValid\n    }), _react2.default.createElement('span', null, _react2.default.createElement(ArrowIconSvg, null)));\n  };\n\n  SelectInput.prototype.handleFocus = function handleFocus() {\n    this.setState({\n      focused: true\n    });\n  };\n\n  SelectInput.prototype.handleBlur = function handleBlur() {\n    this.setState({\n      focused: false\n    });\n  };\n\n  SelectInput.prototype.handleKeyDown = function handleKeyDown(e) {\n    if (e.key !== 'Tab') {\n      e.preventDefault();\n    }\n\n    if (e.key === 'ArrowDown') {\n      return this.props.onClick();\n    }\n\n    if (e.keyCode >= 65 && e.keyCode <= 90) {\n      return this.props.onClick(String.fromCharCode(e.keyCode).toLowerCase());\n    }\n  };\n\n  return SelectInput;\n}(_react2.default.Component); // TODO: specify propTypes\n\n\nexports.default = SelectInput;","map":null,"metadata":{},"sourceType":"script"}