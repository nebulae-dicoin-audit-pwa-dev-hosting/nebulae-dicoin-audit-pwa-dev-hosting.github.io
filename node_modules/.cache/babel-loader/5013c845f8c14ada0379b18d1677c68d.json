{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _classCallCheck from\"/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import minimongo from'minimongo';var IndexedDb=minimongo.IndexedDb;var instance=null;var MinimongoDB=function MinimongoDB(collections,onInitCallback){var _this=this;_classCallCheck(this,MinimongoDB);this.db=new IndexedDb({namespace:'GTPC'},function(){console.log(\"MiniMongo/IndexedDb connected\");if(onInitCallback)onInitCallback();return true;},function(error){console.error(\"MiniMongo/IndexedDb could not connect\");return false;});var _iterator=_createForOfIteratorHelper(collections),_step;try{var _loop=function _loop(){var collection=_step.value;_this.db.addCollection(collection,function(){console.log(\"Collection Created \".concat(collection));});};for(_iterator.s();!(_step=_iterator.n()).done;){_loop();}}catch(err){_iterator.e(err);}finally{_iterator.f();}};function singleton(){if(!instance){instance=new MinimongoDB(['Trip','Record']);}return instance;}export{/** @returns {MinimongoDB} */MinimongoDB,/** @returns {MinimongoDB} */singleton};","map":null,"metadata":{},"sourceType":"module"}