{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/@fuse/core/FuseNavigation/FuseNavBadge.js\";\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { memo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Root = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    padding: '0 7px',\n    fontSize: 11,\n    fontWeight: 600,\n    height: 20,\n    minWidth: 20,\n    borderRadius: 20,\n    display: 'flex',\n    alignItems: 'center',\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText\n  };\n});\n\nfunction FuseNavBadge(props) {\n  const {\n    className,\n    badge\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Root, {\n    className: clsx(className, 'item-badge'),\n    style: {\n      backgroundColor: badge.bg,\n      color: badge.fg\n    },\n    children: badge.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\nFuseNavBadge.propTypes = {\n  badge: PropTypes.shape({\n    title: PropTypes.node,\n    bg: PropTypes.string,\n    fg: PropTypes.string\n  })\n};\nFuseNavBadge.defaultProps = {};\nexport default /*#__PURE__*/memo(FuseNavBadge);","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/@fuse/core/FuseNavigation/FuseNavBadge.js"],"names":["styled","clsx","PropTypes","memo","Root","theme","padding","fontSize","fontWeight","height","minWidth","borderRadius","display","alignItems","backgroundColor","palette","secondary","main","color","contrastText","FuseNavBadge","props","className","badge","bg","fg","title","propTypes","shape","node","string","defaultProps"],"mappings":";AAAA,SAASA,MAAT,QAAuB,sBAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,OAArB;;AAEA,MAAMC,IAAI,GAAGJ,MAAM,CAAC,KAAD,CAAN,CAAc;AAAA,MAAC;AAAEK,IAAAA;AAAF,GAAD;AAAA,SAAgB;AACzCC,IAAAA,OAAO,EAAE,OADgC;AAEzCC,IAAAA,QAAQ,EAAE,EAF+B;AAGzCC,IAAAA,UAAU,EAAE,GAH6B;AAIzCC,IAAAA,MAAM,EAAE,EAJiC;AAKzCC,IAAAA,QAAQ,EAAE,EAL+B;AAMzCC,IAAAA,YAAY,EAAE,EAN2B;AAOzCC,IAAAA,OAAO,EAAE,MAPgC;AAQzCC,IAAAA,UAAU,EAAE,QAR6B;AASzCC,IAAAA,eAAe,EAAET,KAAK,CAACU,OAAN,CAAcC,SAAd,CAAwBC,IATA;AAUzCC,IAAAA,KAAK,EAAEb,KAAK,CAACU,OAAN,CAAcC,SAAd,CAAwBG;AAVU,GAAhB;AAAA,CAAd,CAAb;;AAaA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAuBF,KAA7B;AAEA,sBACE,QAAC,IAAD;AACE,IAAA,SAAS,EAAEpB,IAAI,CAACqB,SAAD,EAAY,YAAZ,CADjB;AAEE,IAAA,KAAK,EAAE;AACLR,MAAAA,eAAe,EAAES,KAAK,CAACC,EADlB;AAELN,MAAAA,KAAK,EAAEK,KAAK,CAACE;AAFR,KAFT;AAAA,cAOGF,KAAK,CAACG;AAPT;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;AAEDN,YAAY,CAACO,SAAb,GAAyB;AACvBJ,EAAAA,KAAK,EAAErB,SAAS,CAAC0B,KAAV,CAAgB;AACrBF,IAAAA,KAAK,EAAExB,SAAS,CAAC2B,IADI;AAErBL,IAAAA,EAAE,EAAEtB,SAAS,CAAC4B,MAFO;AAGrBL,IAAAA,EAAE,EAAEvB,SAAS,CAAC4B;AAHO,GAAhB;AADgB,CAAzB;AAOAV,YAAY,CAACW,YAAb,GAA4B,EAA5B;AAEA,4BAAe5B,IAAI,CAACiB,YAAD,CAAnB","sourcesContent":["import { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { memo } from 'react';\n\nconst Root = styled('div')(({ theme }) => ({\n  padding: '0 7px',\n  fontSize: 11,\n  fontWeight: 600,\n  height: 20,\n  minWidth: 20,\n  borderRadius: 20,\n  display: 'flex',\n  alignItems: 'center',\n  backgroundColor: theme.palette.secondary.main,\n  color: theme.palette.secondary.contrastText,\n}));\n\nfunction FuseNavBadge(props) {\n  const { className, badge } = props;\n\n  return (\n    <Root\n      className={clsx(className, 'item-badge')}\n      style={{\n        backgroundColor: badge.bg,\n        color: badge.fg,\n      }}\n    >\n      {badge.title}\n    </Root>\n  );\n}\n\nFuseNavBadge.propTypes = {\n  badge: PropTypes.shape({\n    title: PropTypes.node,\n    bg: PropTypes.string,\n    fg: PropTypes.string,\n  }),\n};\nFuseNavBadge.defaultProps = {};\n\nexport default memo(FuseNavBadge);\n"]},"metadata":{},"sourceType":"module"}