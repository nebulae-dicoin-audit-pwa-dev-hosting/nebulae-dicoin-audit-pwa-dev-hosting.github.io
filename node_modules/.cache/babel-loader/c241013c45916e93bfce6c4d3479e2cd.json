{"ast":null,"code":"/* eslint import/no-extraneous-dependencies: off */\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/database';\nimport config from './firebaseServiceConfig';\n\nclass FirebaseService {\n  constructor() {\n    this.getUserData = userId => {\n      if (!firebase.apps.length) {\n        return false;\n      }\n\n      return new Promise((resolve, reject) => {\n        this.db.ref(`users/${userId}`).once('value').then(snapshot => {\n          const user = snapshot.val();\n          resolve(user);\n        });\n      });\n    };\n\n    this.updateUserData = user => {\n      if (!firebase.apps.length) {\n        return false;\n      }\n\n      return this.db.ref(`users/${user.uid}`).set(user);\n    };\n\n    this.onAuthStateChanged = callback => {\n      if (!this.auth) {\n        return;\n      }\n\n      this.auth.onAuthStateChanged(callback);\n    };\n\n    this.signOut = () => {\n      if (!this.auth) {\n        return;\n      }\n\n      this.auth.signOut();\n    };\n  }\n\n  init(success) {\n    if (Object.entries(config).length === 0 && config.constructor === Object) {\n      if (process.env.NODE_ENV === 'development') {\n        console.warn('Missing Firebase Configuration at src/app/services/firebaseService/firebaseServiceConfig.js');\n      }\n\n      success(false);\n      return;\n    }\n\n    if (firebase.apps.length) {\n      return;\n    }\n\n    firebase.initializeApp(config);\n    this.db = firebase.database();\n    this.auth = firebase.auth();\n    success(true);\n  }\n\n}\n\nconst instance = new FirebaseService();\nexport default instance;","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/app/services/firebaseService/firebaseService.js"],"names":["firebase","config","FirebaseService","getUserData","userId","apps","length","Promise","resolve","reject","db","ref","once","then","snapshot","user","val","updateUserData","uid","set","onAuthStateChanged","callback","auth","signOut","init","success","Object","entries","constructor","process","env","NODE_ENV","console","warn","initializeApp","database","instance"],"mappings":"AAAA;AACA,OAAOA,QAAP,MAAqB,qBAArB;AACA,OAAO,sBAAP;AACA,OAAO,0BAAP;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,eAAN,CAAsB;AAAA;AAAA,SAqBpBC,WArBoB,GAqBLC,MAAD,IAAY;AACxB,UAAI,CAACJ,QAAQ,CAACK,IAAT,CAAcC,MAAnB,EAA2B;AACzB,eAAO,KAAP;AACD;;AACD,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,aAAKC,EAAL,CACGC,GADH,CACQ,SAAQP,MAAO,EADvB,EAEGQ,IAFH,CAEQ,OAFR,EAGGC,IAHH,CAGSC,QAAD,IAAc;AAClB,gBAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb;AACAR,UAAAA,OAAO,CAACO,IAAD,CAAP;AACD,SANH;AAOD,OARM,CAAP;AASD,KAlCmB;;AAAA,SAoCpBE,cApCoB,GAoCFF,IAAD,IAAU;AACzB,UAAI,CAACf,QAAQ,CAACK,IAAT,CAAcC,MAAnB,EAA2B;AACzB,eAAO,KAAP;AACD;;AACD,aAAO,KAAKI,EAAL,CAAQC,GAAR,CAAa,SAAQI,IAAI,CAACG,GAAI,EAA9B,EAAiCC,GAAjC,CAAqCJ,IAArC,CAAP;AACD,KAzCmB;;AAAA,SA2CpBK,kBA3CoB,GA2CEC,QAAD,IAAc;AACjC,UAAI,CAAC,KAAKC,IAAV,EAAgB;AACd;AACD;;AACD,WAAKA,IAAL,CAAUF,kBAAV,CAA6BC,QAA7B;AACD,KAhDmB;;AAAA,SAkDpBE,OAlDoB,GAkDV,MAAM;AACd,UAAI,CAAC,KAAKD,IAAV,EAAgB;AACd;AACD;;AACD,WAAKA,IAAL,CAAUC,OAAV;AACD,KAvDmB;AAAA;;AACpBC,EAAAA,IAAI,CAACC,OAAD,EAAU;AACZ,QAAIC,MAAM,CAACC,OAAP,CAAe1B,MAAf,EAAuBK,MAAvB,KAAkC,CAAlC,IAAuCL,MAAM,CAAC2B,WAAP,KAAuBF,MAAlE,EAA0E;AACxE,UAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CC,QAAAA,OAAO,CAACC,IAAR,CACE,6FADF;AAGD;;AACDR,MAAAA,OAAO,CAAC,KAAD,CAAP;AACA;AACD;;AAED,QAAIzB,QAAQ,CAACK,IAAT,CAAcC,MAAlB,EAA0B;AACxB;AACD;;AACDN,IAAAA,QAAQ,CAACkC,aAAT,CAAuBjC,MAAvB;AACA,SAAKS,EAAL,GAAUV,QAAQ,CAACmC,QAAT,EAAV;AACA,SAAKb,IAAL,GAAYtB,QAAQ,CAACsB,IAAT,EAAZ;AACAG,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD;;AAnBmB;;AA0DtB,MAAMW,QAAQ,GAAG,IAAIlC,eAAJ,EAAjB;AAEA,eAAekC,QAAf","sourcesContent":["/* eslint import/no-extraneous-dependencies: off */\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/database';\nimport config from './firebaseServiceConfig';\n\nclass FirebaseService {\n  init(success) {\n    if (Object.entries(config).length === 0 && config.constructor === Object) {\n      if (process.env.NODE_ENV === 'development') {\n        console.warn(\n          'Missing Firebase Configuration at src/app/services/firebaseService/firebaseServiceConfig.js'\n        );\n      }\n      success(false);\n      return;\n    }\n\n    if (firebase.apps.length) {\n      return;\n    }\n    firebase.initializeApp(config);\n    this.db = firebase.database();\n    this.auth = firebase.auth();\n    success(true);\n  }\n\n  getUserData = (userId) => {\n    if (!firebase.apps.length) {\n      return false;\n    }\n    return new Promise((resolve, reject) => {\n      this.db\n        .ref(`users/${userId}`)\n        .once('value')\n        .then((snapshot) => {\n          const user = snapshot.val();\n          resolve(user);\n        });\n    });\n  };\n\n  updateUserData = (user) => {\n    if (!firebase.apps.length) {\n      return false;\n    }\n    return this.db.ref(`users/${user.uid}`).set(user);\n  };\n\n  onAuthStateChanged = (callback) => {\n    if (!this.auth) {\n      return;\n    }\n    this.auth.onAuthStateChanged(callback);\n  };\n\n  signOut = () => {\n    if (!this.auth) {\n      return;\n    }\n    this.auth.signOut();\n  };\n}\n\nconst instance = new FirebaseService();\n\nexport default instance;\n"]},"metadata":{},"sourceType":"module"}