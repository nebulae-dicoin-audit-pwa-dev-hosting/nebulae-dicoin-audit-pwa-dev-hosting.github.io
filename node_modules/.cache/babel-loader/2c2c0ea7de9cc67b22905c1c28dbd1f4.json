{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/@fuse/core/FuseSettings/FuseSettings.js\";\nimport { useDebounce, usePrevious } from '@fuse/hooks';\nimport { styled } from '@mui/material/styles';\nimport { Controller, useForm } from 'react-hook-form';\nimport FuseLayoutConfigs from '@fuse/layouts/FuseLayoutConfigs';\nimport _ from '@lodash';\nimport TextField from '@mui/material/TextField';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormLabel from '@mui/material/FormLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport Select from '@mui/material/Select';\nimport Switch from '@mui/material/Switch';\nimport Typography from '@mui/material/Typography';\nimport { useCallback, useMemo, memo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateUserSettings } from 'app/auth/store/userSlice';\nimport { setDefaultSettings } from 'app/store/fuse/settingsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Root = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    '& .FuseSettings-formControl': {\n      margin: '6px 0',\n      width: '100%',\n      '&:last-child': {\n        marginBottom: 0\n      }\n    },\n    '& .FuseSettings-group': {},\n    '& .FuseSettings-formGroupTitle': {\n      position: 'absolute',\n      top: -10,\n      left: 8,\n      fontWeight: 600,\n      padding: '0 4px',\n      backgroundColor: theme.palette.background.paper\n    },\n    '& .FuseSettings-formGroup': {\n      position: 'relative',\n      border: `1px solid ${theme.palette.divider}`,\n      borderRadius: 2,\n      padding: '12px 12px 0 12px',\n      margin: '24px 0 16px 0',\n      '&:first-of-type': {\n        marginTop: 16\n      }\n    }\n  };\n});\n\nfunction FuseSettings(props) {\n  const dispatch = useDispatch();\n  const user = useSelector(_ref2 => {\n    let {\n      auth\n    } = _ref2;\n    return auth.user;\n  });\n  const themes = useSelector(_ref3 => {\n    let {\n      fuse\n    } = _ref3;\n    return fuse.settings.themes;\n  });\n  const settings = useSelector(_ref4 => {\n    let {\n      fuse\n    } = _ref4;\n    return fuse.settings.current;\n  });\n  const {\n    reset,\n    watch,\n    control\n  } = useForm({\n    mode: 'onChange',\n    defaultValues: settings\n  });\n  const form = watch();\n  const {\n    form: formConfigs\n  } = FuseLayoutConfigs[form.layout.style];\n  const prevForm = usePrevious(form ? _.merge({}, form) : null);\n  const prevSettings = usePrevious(settings ? _.merge({}, settings) : null);\n  const formChanged = !_.isEqual(form, prevForm);\n  const settingsChanged = !_.isEqual(settings, prevSettings);\n  const handleUpdate = useDebounce(newSettings => {\n    if (user.role === 'guest') {\n      dispatch(setDefaultSettings(newSettings));\n    } else {\n      dispatch(updateUserSettings(newSettings));\n    }\n  }, 300);\n  useEffect(() => {\n    // Skip inital changes\n    if (!prevForm && !prevSettings) {\n      return;\n    } // If theme settings changed update form data\n\n\n    if (settingsChanged) {\n      reset(settings);\n      return;\n    }\n\n    const newSettings = _.merge({}, settings, form); // No need to change\n\n\n    if (_.isEqual(newSettings, settings)) {\n      return;\n    } // If form changed update theme settings\n\n\n    if (formChanged) {\n      if (settings.layout.style !== newSettings.layout.style) {\n        var _FuseLayoutConfigs$ne, _newSettings$layout;\n\n        _.set(newSettings, 'layout.config', (_FuseLayoutConfigs$ne = FuseLayoutConfigs[newSettings === null || newSettings === void 0 ? void 0 : (_newSettings$layout = newSettings.layout) === null || _newSettings$layout === void 0 ? void 0 : _newSettings$layout.style]) === null || _FuseLayoutConfigs$ne === void 0 ? void 0 : _FuseLayoutConfigs$ne.defaults);\n      }\n\n      handleUpdate(newSettings);\n    }\n  }, [dispatch, form, formChanged, handleUpdate, prevForm, prevSettings, reset, settings, settingsChanged, user]);\n\n  const ThemeSelect = _ref5 => {\n    let {\n      value,\n      name,\n      handleThemeChange\n    } = _ref5;\n    return /*#__PURE__*/_jsxDEV(Select, {\n      className: \"w-full rounded-8 h-40 overflow-hidden my-8\",\n      value: value,\n      onChange: handleThemeChange,\n      name: name,\n      variant: \"outlined\",\n      style: {\n        backgroundColor: themes[value].palette.background.default,\n        color: themes[value].palette.mode === 'light' ? '#000000' : '#ffffff'\n      },\n      children: Object.entries(themes).filter(_ref6 => {\n        let [key, val] = _ref6;\n        return !(name === 'theme.main' && (key === 'mainThemeDark' || key === 'mainThemeLight'));\n      }).map(_ref7 => {\n        let [key, val] = _ref7;\n        return /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: key,\n          className: \"m-8 mt-0 rounded-lg\",\n          style: {\n            backgroundColor: val.palette.background.default,\n            color: val.palette.mode === 'light' ? '#000000' : '#FFFFFF',\n            border: `1px solid ${val.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.12)' : 'rgba(255, 255, 255, 0.12)'}`\n          },\n          children: [_.startCase(key), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex w-full h-8 block absolute bottom-0 left-0 right-0\",\n            style: {\n              borderTop: `1px solid ${val.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.12)' : 'rgba(255, 255, 255, 0.12)'}`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-1/4 h-8\",\n              style: {\n                backgroundColor: val.palette.primary.main ? val.palette.primary.main : val.palette.primary[500]\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-1/4 h-8\",\n              style: {\n                backgroundColor: val.palette.secondary.main ? val.palette.secondary.main : val.palette.secondary[500]\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-1/4 h-8\",\n              style: {\n                backgroundColor: val.palette.error.main ? val.palette.error.main : val.palette.error[500]\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-1/4 h-8\",\n              style: {\n                backgroundColor: val.palette.background.paper\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  };\n\n  const getForm = useCallback((_formConfigs, prefix) => Object.entries(_formConfigs).map(_ref8 => {\n    let [key, formControl] = _ref8;\n    const target = prefix ? `${prefix}.${key}` : key;\n\n    switch (formControl.type) {\n      case 'radio':\n        {\n          return /*#__PURE__*/_jsxDEV(Controller, {\n            name: target,\n            control: control,\n            render: _ref9 => {\n              let {\n                field\n              } = _ref9;\n              return /*#__PURE__*/_jsxDEV(FormControl, {\n                component: \"fieldset\",\n                className: \"FuseSettings-formControl\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  component: \"legend\",\n                  className: \"text-14\",\n                  children: formControl.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(RadioGroup, { ...field,\n                  \"aria-label\": formControl.title,\n                  className: \"FuseSettings-group\",\n                  row: formControl.options.length < 4,\n                  children: formControl.options.map(opt => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: opt.value,\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 36\n                    }, this),\n                    label: opt.name\n                  }, opt.value, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this);\n            }\n          }, target, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this);\n        }\n\n      case 'switch':\n        {\n          return /*#__PURE__*/_jsxDEV(Controller, {\n            name: target,\n            control: control,\n            render: _ref10 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                }\n              } = _ref10;\n              return /*#__PURE__*/_jsxDEV(FormControl, {\n                component: \"fieldset\",\n                className: \"FuseSettings-formControl\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  component: \"legend\",\n                  className: \"text-14\",\n                  children: formControl.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: value,\n                  onChange: ev => onChange(ev.target.checked),\n                  \"aria-label\": formControl.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this);\n            }\n          }, target, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this);\n        }\n\n      case 'number':\n        {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"FuseSettings-formControl\",\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: target,\n              control: control,\n              render: _ref11 => {\n                let {\n                  field\n                } = _ref11;\n                return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                  label: formControl.title,\n                  type: \"number\",\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this)\n          }, target, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this);\n        }\n\n      case 'group':\n        {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"FuseSettings-formGroup\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: \"FuseSettings-formGroupTitle\",\n              color: \"textSecondary\",\n              children: formControl.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), getForm(formControl.children, target)]\n          }, target, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this);\n        }\n\n      default:\n        {\n          return '';\n        }\n    }\n  }), [control]);\n  return /*#__PURE__*/_jsxDEV(Root, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FuseSettings-formGroup\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: \"FuseSettings-formGroupTitle\",\n        color: \"textSecondary\",\n        children: \"Layout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"layout.style\",\n        control: control,\n        render: _ref12 => {\n          let {\n            field\n          } = _ref12;\n          return /*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"fieldset\",\n            className: \"FuseSettings-formControl\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              className: \"text-14\",\n              children: \"Style\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, { ...field,\n              \"aria-label\": \"Layout Style\",\n              className: \"FuseSettings-group\",\n              children: Object.entries(FuseLayoutConfigs).map(_ref13 => {\n                let [key, layout] = _ref13;\n                return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: key,\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 30\n                  }, this),\n                  label: layout.title\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 19\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), useMemo(() => getForm(formConfigs, 'layout.config'), [formConfigs, getForm]), /*#__PURE__*/_jsxDEV(Typography, {\n        className: \"my-16 text-12 italic\",\n        color: \"textSecondary\",\n        children: \"*Not all option combinations are available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FuseSettings-formGroup pb-16\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: \"FuseSettings-formGroupTitle\",\n        color: \"textSecondary\",\n        children: \"Theme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"theme.main\",\n        control: control,\n        render: _ref14 => {\n          let {\n            field: {\n              onChange,\n              value\n            }\n          } = _ref14;\n          return /*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"fieldset\",\n            className: \"FuseSettings-formControl\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              className: \"text-14\",\n              children: \"Main\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ThemeSelect, {\n              value: value,\n              handleThemeChange: onChange,\n              name: \"theme.main\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"theme.navbar\",\n        control: control,\n        render: _ref15 => {\n          let {\n            field: {\n              onChange,\n              value\n            }\n          } = _ref15;\n          return /*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"fieldset\",\n            className: \"FuseSettings-formControl\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              className: \"text-14\",\n              children: \"Navbar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ThemeSelect, {\n              value: value,\n              handleThemeChange: onChange,\n              name: \"theme.navbar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"theme.toolbar\",\n        control: control,\n        render: _ref16 => {\n          let {\n            field: {\n              onChange,\n              value\n            }\n          } = _ref16;\n          return /*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"fieldset\",\n            className: \"FuseSettings-formControl\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              className: \"text-14\",\n              children: \"Toolbar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ThemeSelect, {\n              value: value,\n              handleThemeChange: onChange,\n              name: \"theme.toolbar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"theme.footer\",\n        control: control,\n        render: _ref17 => {\n          let {\n            field: {\n              onChange,\n              value\n            }\n          } = _ref17;\n          return /*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"fieldset\",\n            className: \"FuseSettings-formControl\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              className: \"text-14\",\n              children: \"Footer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ThemeSelect, {\n              value: value,\n              handleThemeChange: onChange,\n              name: \"theme.footer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      name: \"customScrollbars\",\n      control: control,\n      render: _ref18 => {\n        let {\n          field: {\n            onChange,\n            value\n          }\n        } = _ref18;\n        return /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          className: \"FuseSettings-formControl\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            className: \"text-14\",\n            children: \"Custom Scrollbars\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            checked: value,\n            onChange: ev => onChange(ev.target.checked),\n            \"aria-label\": \"Custom Scrollbars\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      name: \"direction\",\n      control: control,\n      render: _ref19 => {\n        let {\n          field\n        } = _ref19;\n        return /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          className: \"FuseSettings-formControl\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            className: \"text-14\",\n            children: \"Direction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, { ...field,\n            \"aria-label\": \"Layout Direction\",\n            className: \"FuseSettings-group\",\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"rtl\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 64\n              }, this),\n              label: \"RTL\"\n            }, \"rtl\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"ltr\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 64\n              }, this),\n              label: \"LTR\"\n            }, \"ltr\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n}\n\nexport default /*#__PURE__*/memo(FuseSettings);","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/@fuse/core/FuseSettings/FuseSettings.js"],"names":["useDebounce","usePrevious","styled","Controller","useForm","FuseLayoutConfigs","_","TextField","FormControl","FormControlLabel","FormLabel","MenuItem","Radio","RadioGroup","Select","Switch","Typography","useCallback","useMemo","memo","useEffect","useDispatch","useSelector","updateUserSettings","setDefaultSettings","Root","theme","margin","width","marginBottom","position","top","left","fontWeight","padding","backgroundColor","palette","background","paper","border","divider","borderRadius","marginTop","FuseSettings","props","dispatch","user","auth","themes","fuse","settings","current","reset","watch","control","mode","defaultValues","form","formConfigs","layout","style","prevForm","merge","prevSettings","formChanged","isEqual","settingsChanged","handleUpdate","newSettings","role","set","defaults","ThemeSelect","value","name","handleThemeChange","default","color","Object","entries","filter","key","val","map","startCase","borderTop","primary","main","secondary","error","getForm","_formConfigs","prefix","formControl","target","type","field","title","options","length","opt","onChange","ev","checked","shrink","children"],"mappings":"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","sourcesContent":["import { useDebounce, usePrevious } from '@fuse/hooks';\nimport { styled } from '@mui/material/styles';\nimport { Controller, useForm } from 'react-hook-form';\nimport FuseLayoutConfigs from '@fuse/layouts/FuseLayoutConfigs';\nimport _ from '@lodash';\nimport TextField from '@mui/material/TextField';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormLabel from '@mui/material/FormLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport Select from '@mui/material/Select';\nimport Switch from '@mui/material/Switch';\nimport Typography from '@mui/material/Typography';\nimport { useCallback, useMemo, memo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateUserSettings } from 'app/auth/store/userSlice';\nimport { setDefaultSettings } from 'app/store/fuse/settingsSlice';\n\nconst Root = styled('div')(({ theme }) => ({\n  '& .FuseSettings-formControl': {\n    margin: '6px 0',\n    width: '100%',\n    '&:last-child': {\n      marginBottom: 0,\n    },\n  },\n\n  '& .FuseSettings-group': {},\n\n  '& .FuseSettings-formGroupTitle': {\n    position: 'absolute',\n    top: -10,\n    left: 8,\n    fontWeight: 600,\n    padding: '0 4px',\n    backgroundColor: theme.palette.background.paper,\n  },\n\n  '& .FuseSettings-formGroup': {\n    position: 'relative',\n    border: `1px solid ${theme.palette.divider}`,\n    borderRadius: 2,\n    padding: '12px 12px 0 12px',\n    margin: '24px 0 16px 0',\n    '&:first-of-type': {\n      marginTop: 16,\n    },\n  },\n}));\n\nfunction FuseSettings(props) {\n  const dispatch = useDispatch();\n  const user = useSelector(({ auth }) => auth.user);\n  const themes = useSelector(({ fuse }) => fuse.settings.themes);\n  const settings = useSelector(({ fuse }) => fuse.settings.current);\n  const { reset, watch, control } = useForm({\n    mode: 'onChange',\n    defaultValues: settings,\n  });\n  const form = watch();\n  const { form: formConfigs } = FuseLayoutConfigs[form.layout.style];\n  const prevForm = usePrevious(form ? _.merge({}, form) : null);\n  const prevSettings = usePrevious(settings ? _.merge({}, settings) : null);\n  const formChanged = !_.isEqual(form, prevForm);\n  const settingsChanged = !_.isEqual(settings, prevSettings);\n\n  const handleUpdate = useDebounce((newSettings) => {\n    if (user.role === 'guest') {\n      dispatch(setDefaultSettings(newSettings));\n    } else {\n      dispatch(updateUserSettings(newSettings));\n    }\n  }, 300);\n\n  useEffect(() => {\n    // Skip inital changes\n    if (!prevForm && !prevSettings) {\n      return;\n    }\n\n    // If theme settings changed update form data\n    if (settingsChanged) {\n      reset(settings);\n      return;\n    }\n\n    const newSettings = _.merge({}, settings, form);\n\n    // No need to change\n    if (_.isEqual(newSettings, settings)) {\n      return;\n    }\n\n    // If form changed update theme settings\n    if (formChanged) {\n      if (settings.layout.style !== newSettings.layout.style) {\n        _.set(\n          newSettings,\n          'layout.config',\n          FuseLayoutConfigs[newSettings?.layout?.style]?.defaults\n        );\n      }\n      handleUpdate(newSettings);\n    }\n  }, [\n    dispatch,\n    form,\n    formChanged,\n    handleUpdate,\n    prevForm,\n    prevSettings,\n    reset,\n    settings,\n    settingsChanged,\n    user,\n  ]);\n\n  const ThemeSelect = ({ value, name, handleThemeChange }) => {\n    return (\n      <Select\n        className=\"w-full rounded-8 h-40 overflow-hidden my-8\"\n        value={value}\n        onChange={handleThemeChange}\n        name={name}\n        variant=\"outlined\"\n        style={{\n          backgroundColor: themes[value].palette.background.default,\n          color: themes[value].palette.mode === 'light' ? '#000000' : '#ffffff',\n        }}\n      >\n        {Object.entries(themes)\n          .filter(\n            ([key, val]) =>\n              !(name === 'theme.main' && (key === 'mainThemeDark' || key === 'mainThemeLight'))\n          )\n          .map(([key, val]) => (\n            <MenuItem\n              key={key}\n              value={key}\n              className=\"m-8 mt-0 rounded-lg\"\n              style={{\n                backgroundColor: val.palette.background.default,\n                color: val.palette.mode === 'light' ? '#000000' : '#FFFFFF',\n                border: `1px solid ${\n                  val.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.12)' : 'rgba(255, 255, 255, 0.12)'\n                }`,\n              }}\n            >\n              {_.startCase(key)}\n              <div\n                className=\"flex w-full h-8 block absolute bottom-0 left-0 right-0\"\n                style={{\n                  borderTop: `1px solid ${\n                    val.palette.mode === 'light'\n                      ? 'rgba(0, 0, 0, 0.12)'\n                      : 'rgba(255, 255, 255, 0.12)'\n                  }`,\n                }}\n              >\n                <div\n                  className=\"w-1/4 h-8\"\n                  style={{\n                    backgroundColor: val.palette.primary.main\n                      ? val.palette.primary.main\n                      : val.palette.primary[500],\n                  }}\n                />\n                <div\n                  className=\"w-1/4 h-8\"\n                  style={{\n                    backgroundColor: val.palette.secondary.main\n                      ? val.palette.secondary.main\n                      : val.palette.secondary[500],\n                  }}\n                />\n                <div\n                  className=\"w-1/4 h-8\"\n                  style={{\n                    backgroundColor: val.palette.error.main\n                      ? val.palette.error.main\n                      : val.palette.error[500],\n                  }}\n                />\n                <div\n                  className=\"w-1/4 h-8\"\n                  style={{ backgroundColor: val.palette.background.paper }}\n                />\n              </div>\n            </MenuItem>\n          ))}\n      </Select>\n    );\n  };\n\n  const getForm = useCallback(\n    (_formConfigs, prefix) =>\n      Object.entries(_formConfigs).map(([key, formControl]) => {\n        const target = prefix ? `${prefix}.${key}` : key;\n        switch (formControl.type) {\n          case 'radio': {\n            return (\n              <Controller\n                key={target}\n                name={target}\n                control={control}\n                render={({ field }) => (\n                  <FormControl component=\"fieldset\" className=\"FuseSettings-formControl\">\n                    <FormLabel component=\"legend\" className=\"text-14\">\n                      {formControl.title}\n                    </FormLabel>\n                    <RadioGroup\n                      {...field}\n                      aria-label={formControl.title}\n                      className=\"FuseSettings-group\"\n                      row={formControl.options.length < 4}\n                    >\n                      {formControl.options.map((opt) => (\n                        <FormControlLabel\n                          key={opt.value}\n                          value={opt.value}\n                          control={<Radio />}\n                          label={opt.name}\n                        />\n                      ))}\n                    </RadioGroup>\n                  </FormControl>\n                )}\n              />\n            );\n          }\n          case 'switch': {\n            return (\n              <Controller\n                key={target}\n                name={target}\n                control={control}\n                render={({ field: { onChange, value } }) => (\n                  <FormControl component=\"fieldset\" className=\"FuseSettings-formControl\">\n                    <FormLabel component=\"legend\" className=\"text-14\">\n                      {formControl.title}\n                    </FormLabel>\n                    <Switch\n                      checked={value}\n                      onChange={(ev) => onChange(ev.target.checked)}\n                      aria-label={formControl.title}\n                    />\n                  </FormControl>\n                )}\n              />\n            );\n          }\n          case 'number': {\n            return (\n              <div key={target} className=\"FuseSettings-formControl\">\n                <Controller\n                  name={target}\n                  control={control}\n                  render={({ field }) => (\n                    <TextField\n                      {...field}\n                      label={formControl.title}\n                      type=\"number\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      variant=\"outlined\"\n                    />\n                  )}\n                />\n              </div>\n            );\n          }\n          case 'group': {\n            return (\n              <div key={target} className=\"FuseSettings-formGroup\">\n                <Typography className=\"FuseSettings-formGroupTitle\" color=\"textSecondary\">\n                  {formControl.title}\n                </Typography>\n\n                {getForm(formControl.children, target)}\n              </div>\n            );\n          }\n          default: {\n            return '';\n          }\n        }\n      }),\n    [control]\n  );\n\n  return (\n    <Root>\n      <div className=\"FuseSettings-formGroup\">\n        <Typography className=\"FuseSettings-formGroupTitle\" color=\"textSecondary\">\n          Layout\n        </Typography>\n\n        <Controller\n          name=\"layout.style\"\n          control={control}\n          render={({ field }) => (\n            <FormControl component=\"fieldset\" className=\"FuseSettings-formControl\">\n              <FormLabel component=\"legend\" className=\"text-14\">\n                Style\n              </FormLabel>\n              <RadioGroup {...field} aria-label=\"Layout Style\" className=\"FuseSettings-group\">\n                {Object.entries(FuseLayoutConfigs).map(([key, layout]) => (\n                  <FormControlLabel\n                    key={key}\n                    value={key}\n                    control={<Radio />}\n                    label={layout.title}\n                  />\n                ))}\n              </RadioGroup>\n            </FormControl>\n          )}\n        />\n\n        {useMemo(() => getForm(formConfigs, 'layout.config'), [formConfigs, getForm])}\n\n        <Typography className=\"my-16 text-12 italic\" color=\"textSecondary\">\n          *Not all option combinations are available\n        </Typography>\n      </div>\n\n      <div className=\"FuseSettings-formGroup pb-16\">\n        <Typography className=\"FuseSettings-formGroupTitle\" color=\"textSecondary\">\n          Theme\n        </Typography>\n\n        <Controller\n          name=\"theme.main\"\n          control={control}\n          render={({ field: { onChange, value } }) => (\n            <FormControl component=\"fieldset\" className=\"FuseSettings-formControl\">\n              <FormLabel component=\"legend\" className=\"text-14\">\n                Main\n              </FormLabel>\n              <ThemeSelect value={value} handleThemeChange={onChange} name=\"theme.main\" />\n            </FormControl>\n          )}\n        />\n\n        <Controller\n          name=\"theme.navbar\"\n          control={control}\n          render={({ field: { onChange, value } }) => (\n            <FormControl component=\"fieldset\" className=\"FuseSettings-formControl\">\n              <FormLabel component=\"legend\" className=\"text-14\">\n                Navbar\n              </FormLabel>\n\n              <ThemeSelect value={value} handleThemeChange={onChange} name=\"theme.navbar\" />\n            </FormControl>\n          )}\n        />\n\n        <Controller\n          name=\"theme.toolbar\"\n          control={control}\n          render={({ field: { onChange, value } }) => (\n            <FormControl component=\"fieldset\" className=\"FuseSettings-formControl\">\n              <FormLabel component=\"legend\" className=\"text-14\">\n                Toolbar\n              </FormLabel>\n\n              <ThemeSelect value={value} handleThemeChange={onChange} name=\"theme.toolbar\" />\n            </FormControl>\n          )}\n        />\n\n        <Controller\n          name=\"theme.footer\"\n          control={control}\n          render={({ field: { onChange, value } }) => (\n            <FormControl component=\"fieldset\" className=\"FuseSettings-formControl\">\n              <FormLabel component=\"legend\" className=\"text-14\">\n                Footer\n              </FormLabel>\n              <ThemeSelect value={value} handleThemeChange={onChange} name=\"theme.footer\" />\n            </FormControl>\n          )}\n        />\n      </div>\n\n      <Controller\n        name=\"customScrollbars\"\n        control={control}\n        render={({ field: { onChange, value } }) => (\n          <FormControl component=\"fieldset\" className=\"FuseSettings-formControl\">\n            <FormLabel component=\"legend\" className=\"text-14\">\n              Custom Scrollbars\n            </FormLabel>\n            <Switch\n              checked={value}\n              onChange={(ev) => onChange(ev.target.checked)}\n              aria-label=\"Custom Scrollbars\"\n            />\n          </FormControl>\n        )}\n      />\n\n      <Controller\n        name=\"direction\"\n        control={control}\n        render={({ field }) => (\n          <FormControl component=\"fieldset\" className=\"FuseSettings-formControl\">\n            <FormLabel component=\"legend\" className=\"text-14\">\n              Direction\n            </FormLabel>\n            <RadioGroup {...field} aria-label=\"Layout Direction\" className=\"FuseSettings-group\" row>\n              <FormControlLabel key=\"rtl\" value=\"rtl\" control={<Radio />} label=\"RTL\" />\n              <FormControlLabel key=\"ltr\" value=\"ltr\" control={<Radio />} label=\"LTR\" />\n            </RadioGroup>\n          </FormControl>\n        )}\n      />\n    </Root>\n  );\n}\n\nexport default memo(FuseSettings);\n"]},"metadata":{},"sourceType":"module"}