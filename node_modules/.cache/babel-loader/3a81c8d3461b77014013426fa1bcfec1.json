{"ast":null,"code":"// eslint-disable-next-line max-classes-per-file\nimport _ from '@lodash';\nimport * as colors from '@mui/material/colors';\n\nclass EventEmitter {\n  constructor() {\n    this.events = {};\n  }\n\n  _getEventListByName(eventName) {\n    if (typeof this.events[eventName] === 'undefined') {\n      this.events[eventName] = new Set();\n    }\n\n    return this.events[eventName];\n  }\n\n  on(eventName, fn) {\n    this._getEventListByName(eventName).add(fn);\n  }\n\n  once(eventName, fn) {\n    const self = this;\n\n    const onceFn = function () {\n      self.removeListener(eventName, onceFn);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      fn.apply(self, args);\n    };\n\n    this.on(eventName, onceFn);\n  }\n\n  emit(eventName) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    this._getEventListByName(eventName).forEach( // eslint-disable-next-line func-names\n    function (fn) {\n      fn.apply(this, args);\n    }.bind(this));\n  }\n\n  removeListener(eventName, fn) {\n    this._getEventListByName(eventName).delete(fn);\n  }\n\n}\n\nclass FuseUtils {\n  static filterArrayByString(mainArr, searchText) {\n    if (searchText === '') {\n      return mainArr;\n    }\n\n    searchText = searchText.toLowerCase();\n    return mainArr.filter(itemObj => this.searchInObj(itemObj, searchText));\n  }\n\n  static searchInObj(itemObj, searchText) {\n    if (!itemObj) {\n      return false;\n    }\n\n    const propArray = Object.keys(itemObj);\n\n    for (let i = 0; i < propArray.length; i += 1) {\n      const prop = propArray[i];\n      const value = itemObj[prop];\n\n      if (typeof value === 'string') {\n        if (this.searchInString(value, searchText)) {\n          return true;\n        }\n      } else if (Array.isArray(value)) {\n        if (this.searchInArray(value, searchText)) {\n          return true;\n        }\n      }\n\n      if (typeof value === 'object') {\n        if (this.searchInObj(value, searchText)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  static searchInArray(arr, searchText) {\n    arr.forEach(value => {\n      if (typeof value === 'string') {\n        if (this.searchInString(value, searchText)) {\n          return true;\n        }\n      }\n\n      if (typeof value === 'object') {\n        if (this.searchInObj(value, searchText)) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n    return false;\n  }\n\n  static searchInString(value, searchText) {\n    return value.toLowerCase().includes(searchText);\n  }\n\n  static generateGUID() {\n    function S4() {\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    }\n\n    return S4() + S4();\n  }\n\n  static toggleInArray(item, array) {\n    if (array.indexOf(item) === -1) {\n      array.push(item);\n    } else {\n      array.splice(array.indexOf(item), 1);\n    }\n  }\n\n  static handleize(text) {\n    return text.toString().toLowerCase().replace(/\\s+/g, '-') // Replace spaces with -\n    .replace(/\\W+/g, '') // Remove all non-word chars\n    .replace(/--+/g, '-') // Replace multiple - with single -\n    .replace(/^-+/, '') // Trim - from start of text\n    .replace(/-+$/, ''); // Trim - from end of text\n  }\n\n  static setRoutes(config, defaultAuth) {\n    let routes = [...config.routes];\n    routes = routes.map(route => {\n      let auth = config.auth || config.auth === null ? config.auth : defaultAuth || null;\n      auth = route.auth || route.auth === null ? route.auth : auth;\n\n      const settings = _.merge({}, config.settings, route.settings);\n\n      return { ...route,\n        settings,\n        auth\n      };\n    });\n    return [...routes];\n  }\n\n  static generateRoutesFromConfigs(configs, defaultAuth) {\n    let allRoutes = [];\n    configs.forEach(config => {\n      allRoutes = [...allRoutes, ...this.setRoutes(config, defaultAuth)];\n    });\n    return allRoutes;\n  }\n\n  static findById(obj, id) {\n    let i;\n    let childObj;\n    let result;\n\n    if (id === obj.id) {\n      return obj;\n    }\n\n    for (i = 0; i < Object.keys(obj).length; i += 1) {\n      childObj = obj[Object.keys(obj)[i]];\n\n      if (typeof childObj === 'object') {\n        result = this.findById(childObj, id);\n\n        if (result) {\n          return result;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  static getFlatNavigation(navigationItems) {\n    let flatNavigation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    for (let i = 0; i < navigationItems.length; i += 1) {\n      const navItem = navigationItems[i];\n\n      if (navItem.type === 'item') {\n        flatNavigation.push({\n          id: navItem.id,\n          title: navItem.title,\n          type: navItem.type,\n          icon: navItem.icon || false,\n          url: navItem.url,\n          auth: navItem.auth || null\n        });\n      }\n\n      if (navItem.type === 'collapse' || navItem.type === 'group') {\n        if (navItem.children) {\n          this.getFlatNavigation(navItem.children, flatNavigation);\n        }\n      }\n    }\n\n    return flatNavigation;\n  }\n\n  static randomMatColor(hue) {\n    hue = hue || '400';\n    const mainColors = ['red', 'pink', 'purple', 'deepPurple', 'indigo', 'blue', 'lightBlue', 'cyan', 'teal', 'green', 'lightGreen', 'lime', 'yellow', 'amber', 'orange', 'deepOrange'];\n    const randomColor = mainColors[Math.floor(Math.random() * mainColors.length)];\n    return colors[randomColor][hue];\n  }\n\n  static difference(object, base) {\n    function changes(_object, _base) {\n      return _.transform(_object, (result, value, key) => {\n        if (!_.isEqual(value, _base[key])) {\n          result[key] = _.isObject(value) && _.isObject(_base[key]) ? changes(value, _base[key]) : value;\n        }\n      });\n    }\n\n    return changes(object, base);\n  }\n\n  static updateNavItem(nav, id, item) {\n    return nav.map(_item => {\n      if (_item.id === id) {\n        return _.merge({}, _item, item);\n      }\n\n      if (_item.children) {\n        return _.merge({}, _item, {\n          children: this.updateNavItem(_item.children, id, item)\n        });\n      }\n\n      return _.merge({}, _item);\n    });\n  }\n\n  static removeNavItem(nav, id) {\n    return nav.map(_item => {\n      if (_item.id === id) {\n        return null;\n      }\n\n      if (_item.children) {\n        return _.merge({}, _.omit(_item, ['children']), {\n          children: this.removeNavItem(_item.children, id)\n        });\n      }\n\n      return _.merge({}, _item);\n    }).filter(s => s);\n  }\n\n  static prependNavItem(nav, item, parentId) {\n    if (!parentId) {\n      return [item, ...nav];\n    }\n\n    return nav.map(_item => {\n      if (_item.id === parentId && _item.children) {\n        return {\n          _item,\n          children: [item, ..._item.children]\n        };\n      }\n\n      if (_item.children) {\n        return _.merge({}, _item, {\n          children: this.prependNavItem(_item.children, item, parentId)\n        });\n      }\n\n      return _.merge({}, _item);\n    });\n  }\n\n  static appendNavItem(nav, item, parentId) {\n    if (!parentId) {\n      return [...nav, item];\n    }\n\n    return nav.map(_item => {\n      if (_item.id === parentId && _item.children) {\n        return { ..._item,\n          children: [..._item.children, item]\n        };\n      }\n\n      if (_item.children) {\n        return _.merge({}, _item, {\n          children: this.appendNavItem(_item.children, item, parentId)\n        });\n      }\n\n      return _.merge({}, _item);\n    });\n  }\n\n  static hasPermission(authArr, userRole) {\n    /**\n     * If auth array is not defined\n     * Pass and allow\n     */\n    if (authArr === null || authArr === undefined) {\n      // console.info(\"auth is null || undefined:\", authArr);\n      return true;\n    }\n\n    if (authArr.length === 0) {\n      /**\n       * if auth array is empty means,\n       * allow only user role is guest (null or empty[])\n       */\n      // console.info(\"auth is empty[]:\", authArr);\n      return !userRole || userRole.length === 0;\n    }\n    /**\n     * Check if user has grants\n     */\n    // console.info(\"auth arr:\", authArr);\n\n    /*\n            Check if user role is array,\n            */\n\n\n    if (userRole && Array.isArray(userRole)) {\n      return authArr.some(r => userRole.indexOf(r) >= 0);\n    }\n    /*\n            Check if user role is string,\n            */\n\n\n    return authArr.includes(userRole);\n  }\n\n  static filterRecursive(data, predicate) {\n    // if no data is sent in, return null, otherwise transform the data\n    return !data ? null : data.reduce((list, entry) => {\n      let clone = null;\n\n      if (predicate(entry)) {\n        // if the object matches the filter, clone it as it is\n        clone = { ...entry\n        };\n      }\n\n      if (entry.children != null) {\n        // if the object has childrens, filter the list of children\n        const children = this.filterRecursive(entry.children, predicate);\n\n        if (children.length > 0) {\n          // if any of the children matches, clone the parent object, overwrite\n          // the children list with the filtered list\n          clone = { ...entry,\n            children\n          };\n        }\n      } // if there's a cloned object, push it to the output list\n\n\n      if (clone) {\n        list.push(clone);\n      }\n\n      return list;\n    }, []);\n  }\n\n}\n\nFuseUtils.EventEmitter = EventEmitter;\nexport default FuseUtils;","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/@fuse/utils/FuseUtils.js"],"names":["_","colors","EventEmitter","constructor","events","_getEventListByName","eventName","Set","on","fn","add","once","self","onceFn","removeListener","args","apply","emit","forEach","bind","delete","FuseUtils","filterArrayByString","mainArr","searchText","toLowerCase","filter","itemObj","searchInObj","propArray","Object","keys","i","length","prop","value","searchInString","Array","isArray","searchInArray","arr","includes","generateGUID","S4","Math","floor","random","toString","substring","toggleInArray","item","array","indexOf","push","splice","handleize","text","replace","setRoutes","config","defaultAuth","routes","map","route","auth","settings","merge","generateRoutesFromConfigs","configs","allRoutes","findById","obj","id","childObj","result","getFlatNavigation","navigationItems","flatNavigation","navItem","type","title","icon","url","children","randomMatColor","hue","mainColors","randomColor","difference","object","base","changes","_object","_base","transform","key","isEqual","isObject","updateNavItem","nav","_item","removeNavItem","omit","s","prependNavItem","parentId","appendNavItem","hasPermission","authArr","userRole","undefined","some","r","filterRecursive","data","predicate","reduce","list","entry","clone"],"mappings":"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","sourcesContent":["// eslint-disable-next-line max-classes-per-file\nimport _ from '@lodash';\nimport * as colors from '@mui/material/colors';\n\nclass EventEmitter {\n  constructor() {\n    this.events = {};\n  }\n\n  _getEventListByName(eventName) {\n    if (typeof this.events[eventName] === 'undefined') {\n      this.events[eventName] = new Set();\n    }\n    return this.events[eventName];\n  }\n\n  on(eventName, fn) {\n    this._getEventListByName(eventName).add(fn);\n  }\n\n  once(eventName, fn) {\n    const self = this;\n\n    const onceFn = (...args) => {\n      self.removeListener(eventName, onceFn);\n      fn.apply(self, args);\n    };\n    this.on(eventName, onceFn);\n  }\n\n  emit(eventName, ...args) {\n    this._getEventListByName(eventName).forEach(\n      // eslint-disable-next-line func-names\n      function (fn) {\n        fn.apply(this, args);\n      }.bind(this)\n    );\n  }\n\n  removeListener(eventName, fn) {\n    this._getEventListByName(eventName).delete(fn);\n  }\n}\n\nclass FuseUtils {\n  static filterArrayByString(mainArr, searchText) {\n    if (searchText === '') {\n      return mainArr;\n    }\n\n    searchText = searchText.toLowerCase();\n\n    return mainArr.filter((itemObj) => this.searchInObj(itemObj, searchText));\n  }\n\n  static searchInObj(itemObj, searchText) {\n    if (!itemObj) {\n      return false;\n    }\n\n    const propArray = Object.keys(itemObj);\n\n    for (let i = 0; i < propArray.length; i += 1) {\n      const prop = propArray[i];\n      const value = itemObj[prop];\n\n      if (typeof value === 'string') {\n        if (this.searchInString(value, searchText)) {\n          return true;\n        }\n      } else if (Array.isArray(value)) {\n        if (this.searchInArray(value, searchText)) {\n          return true;\n        }\n      }\n\n      if (typeof value === 'object') {\n        if (this.searchInObj(value, searchText)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  static searchInArray(arr, searchText) {\n    arr.forEach((value) => {\n      if (typeof value === 'string') {\n        if (this.searchInString(value, searchText)) {\n          return true;\n        }\n      }\n\n      if (typeof value === 'object') {\n        if (this.searchInObj(value, searchText)) {\n          return true;\n        }\n      }\n      return false;\n    });\n    return false;\n  }\n\n  static searchInString(value, searchText) {\n    return value.toLowerCase().includes(searchText);\n  }\n\n  static generateGUID() {\n    function S4() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n\n    return S4() + S4();\n  }\n\n  static toggleInArray(item, array) {\n    if (array.indexOf(item) === -1) {\n      array.push(item);\n    } else {\n      array.splice(array.indexOf(item), 1);\n    }\n  }\n\n  static handleize(text) {\n    return text\n      .toString()\n      .toLowerCase()\n      .replace(/\\s+/g, '-') // Replace spaces with -\n      .replace(/\\W+/g, '') // Remove all non-word chars\n      .replace(/--+/g, '-') // Replace multiple - with single -\n      .replace(/^-+/, '') // Trim - from start of text\n      .replace(/-+$/, ''); // Trim - from end of text\n  }\n\n  static setRoutes(config, defaultAuth) {\n    let routes = [...config.routes];\n\n    routes = routes.map((route) => {\n      let auth = config.auth || config.auth === null ? config.auth : defaultAuth || null;\n      auth = route.auth || route.auth === null ? route.auth : auth;\n      const settings = _.merge({}, config.settings, route.settings);\n\n      return {\n        ...route,\n        settings,\n        auth,\n      };\n    });\n\n    return [...routes];\n  }\n\n  static generateRoutesFromConfigs(configs, defaultAuth) {\n    let allRoutes = [];\n    configs.forEach((config) => {\n      allRoutes = [...allRoutes, ...this.setRoutes(config, defaultAuth)];\n    });\n    return allRoutes;\n  }\n\n  static findById(obj, id) {\n    let i;\n    let childObj;\n    let result;\n\n    if (id === obj.id) {\n      return obj;\n    }\n\n    for (i = 0; i < Object.keys(obj).length; i += 1) {\n      childObj = obj[Object.keys(obj)[i]];\n\n      if (typeof childObj === 'object') {\n        result = this.findById(childObj, id);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return false;\n  }\n\n  static getFlatNavigation(navigationItems, flatNavigation = []) {\n    for (let i = 0; i < navigationItems.length; i += 1) {\n      const navItem = navigationItems[i];\n\n      if (navItem.type === 'item') {\n        flatNavigation.push({\n          id: navItem.id,\n          title: navItem.title,\n          type: navItem.type,\n          icon: navItem.icon || false,\n          url: navItem.url,\n          auth: navItem.auth || null,\n        });\n      }\n\n      if (navItem.type === 'collapse' || navItem.type === 'group') {\n        if (navItem.children) {\n          this.getFlatNavigation(navItem.children, flatNavigation);\n        }\n      }\n    }\n    return flatNavigation;\n  }\n\n  static randomMatColor(hue) {\n    hue = hue || '400';\n    const mainColors = [\n      'red',\n      'pink',\n      'purple',\n      'deepPurple',\n      'indigo',\n      'blue',\n      'lightBlue',\n      'cyan',\n      'teal',\n      'green',\n      'lightGreen',\n      'lime',\n      'yellow',\n      'amber',\n      'orange',\n      'deepOrange',\n    ];\n    const randomColor = mainColors[Math.floor(Math.random() * mainColors.length)];\n    return colors[randomColor][hue];\n  }\n\n  static difference(object, base) {\n    function changes(_object, _base) {\n      return _.transform(_object, (result, value, key) => {\n        if (!_.isEqual(value, _base[key])) {\n          result[key] =\n            _.isObject(value) && _.isObject(_base[key]) ? changes(value, _base[key]) : value;\n        }\n      });\n    }\n\n    return changes(object, base);\n  }\n\n  static EventEmitter = EventEmitter;\n\n  static updateNavItem(nav, id, item) {\n    return nav.map((_item) => {\n      if (_item.id === id) {\n        return _.merge({}, _item, item);\n      }\n\n      if (_item.children) {\n        return _.merge({}, _item, {\n          children: this.updateNavItem(_item.children, id, item),\n        });\n      }\n\n      return _.merge({}, _item);\n    });\n  }\n\n  static removeNavItem(nav, id) {\n    return nav\n      .map((_item) => {\n        if (_item.id === id) {\n          return null;\n        }\n\n        if (_item.children) {\n          return _.merge({}, _.omit(_item, ['children']), {\n            children: this.removeNavItem(_item.children, id),\n          });\n        }\n\n        return _.merge({}, _item);\n      })\n      .filter((s) => s);\n  }\n\n  static prependNavItem(nav, item, parentId) {\n    if (!parentId) {\n      return [item, ...nav];\n    }\n\n    return nav.map((_item) => {\n      if (_item.id === parentId && _item.children) {\n        return {\n          _item,\n          children: [item, ..._item.children],\n        };\n      }\n\n      if (_item.children) {\n        return _.merge({}, _item, {\n          children: this.prependNavItem(_item.children, item, parentId),\n        });\n      }\n\n      return _.merge({}, _item);\n    });\n  }\n\n  static appendNavItem(nav, item, parentId) {\n    if (!parentId) {\n      return [...nav, item];\n    }\n\n    return nav.map((_item) => {\n      if (_item.id === parentId && _item.children) {\n        return {\n          ..._item,\n          children: [..._item.children, item],\n        };\n      }\n\n      if (_item.children) {\n        return _.merge({}, _item, {\n          children: this.appendNavItem(_item.children, item, parentId),\n        });\n      }\n\n      return _.merge({}, _item);\n    });\n  }\n\n  static hasPermission(authArr, userRole) {\n    /**\n     * If auth array is not defined\n     * Pass and allow\n     */\n    if (authArr === null || authArr === undefined) {\n      // console.info(\"auth is null || undefined:\", authArr);\n      return true;\n    }\n    if (authArr.length === 0) {\n      /**\n       * if auth array is empty means,\n       * allow only user role is guest (null or empty[])\n       */\n      // console.info(\"auth is empty[]:\", authArr);\n      return !userRole || userRole.length === 0;\n    }\n    /**\n     * Check if user has grants\n     */\n    // console.info(\"auth arr:\", authArr);\n    /*\n            Check if user role is array,\n            */\n    if (userRole && Array.isArray(userRole)) {\n      return authArr.some((r) => userRole.indexOf(r) >= 0);\n    }\n\n    /*\n            Check if user role is string,\n            */\n    return authArr.includes(userRole);\n  }\n\n  static filterRecursive(data, predicate) {\n    // if no data is sent in, return null, otherwise transform the data\n    return !data\n      ? null\n      : data.reduce((list, entry) => {\n          let clone = null;\n          if (predicate(entry)) {\n            // if the object matches the filter, clone it as it is\n            clone = { ...entry };\n          }\n          if (entry.children != null) {\n            // if the object has childrens, filter the list of children\n            const children = this.filterRecursive(entry.children, predicate);\n            if (children.length > 0) {\n              // if any of the children matches, clone the parent object, overwrite\n              // the children list with the filtered list\n              clone = { ...entry, children };\n            }\n          }\n\n          // if there's a cloned object, push it to the output list\n          if (clone) {\n            list.push(clone);\n          }\n          return list;\n        }, []);\n  }\n}\n\nexport default FuseUtils;\n"]},"metadata":{},"sourceType":"module"}