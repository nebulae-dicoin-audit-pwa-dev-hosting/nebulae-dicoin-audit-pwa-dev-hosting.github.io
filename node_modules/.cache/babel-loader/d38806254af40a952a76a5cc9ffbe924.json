{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.validateEmail = validateEmail;\nexports.isEmail = isEmail;\nexports.setEmail = setEmail;\nexports.emailDomain = emailDomain;\nexports.emailLocalPart = emailLocalPart;\n\nvar _trim = require('trim');\n\nvar _trim2 = _interopRequireDefault(_trim);\n\nvar _isEmail2 = require('validator/lib/isEmail');\n\nvar _isEmail3 = _interopRequireDefault(_isEmail2);\n\nvar _index = require('./index');\n\nvar _enterprise = require('../connection/enterprise');\n\nvar _i18n = require('../i18n');\n\nvar i18n = _interopRequireWildcard(_i18n);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction validateEmail(str) {\n  var strictValidation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return isEmail(str, strictValidation);\n}\n\nfunction isEmail(str) {\n  var strictValidation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (typeof str !== 'string') {\n    return false;\n  }\n\n  var trimmed = (0, _trim2.default)(str);\n  return strictValidation ? (0, _isEmail3.default)(str) : trimmed.indexOf('@') >= 0 && trimmed.indexOf('.') >= 0 && trimmed.indexOf(' ') === -1;\n}\n\nfunction setEmail(m, str) {\n  var strictValidation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return (0, _index.setField)(m, 'email', str, function (str) {\n    var validHRDEMail = (0, _enterprise.isHRDEmailValid)(m, str);\n    return {\n      valid: validateEmail(str, strictValidation) && validHRDEMail,\n      hint: !validHRDEMail ? i18n.html(m, ['error', 'login', 'hrd.not_matching_email']) : undefined\n    };\n  });\n}\n\nfunction emailDomain(str) {\n  if (!isEmail(str)) {\n    return '';\n  }\n\n  return str.split('@')[1].toLowerCase();\n}\n\nfunction emailLocalPart(str) {\n  var domain = emailDomain(str);\n  return domain ? str.slice(0, -1 - domain.length) : str;\n}","map":null,"metadata":{},"sourceType":"script"}