{"ast":null,"code":"import { useRef, useEffect } from 'react';\nimport deepEqual from 'lodash/isEqual';\n/**\n * https://github.com/kentcdodds/use-deep-compare-effect\n */\n\nfunction checkDeps(deps) {\n  if (!deps || !deps.length) {\n    throw new Error('useDeepCompareEffect should not be used with no dependencies. Use React.useEffect instead.');\n  }\n\n  if (deps.every(isPrimitive)) {\n    throw new Error('useDeepCompareEffect should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n  }\n}\n\nfunction isPrimitive(val) {\n  return val == null || /^[sbn]/.test(typeof val);\n}\n\nfunction useDeepCompareMemoize(value) {\n  const ref = useRef();\n\n  if (!deepEqual(value, ref.current)) {\n    ref.current = value;\n  }\n\n  return ref.current;\n}\n\nfunction useDeepCompareEffect(callback, dependencies) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkDeps(dependencies);\n  } // eslint-disable-next-line\n\n\n  useEffect(callback, useDeepCompareMemoize(dependencies));\n}\n\nexport function useDeepCompareEffectNoCheck(callback, dependencies) {\n  // eslint-disable-next-line\n  useEffect(callback, useDeepCompareMemoize(dependencies));\n}\nexport default useDeepCompareEffect;","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/@fuse/hooks/useDeepCompareEffect.js"],"names":["useRef","useEffect","deepEqual","checkDeps","deps","length","Error","every","isPrimitive","val","test","useDeepCompareMemoize","value","ref","current","useDeepCompareEffect","callback","dependencies","process","env","NODE_ENV","useDeepCompareEffectNoCheck"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA;AACA;AACA;;AACA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,MAAI,CAACA,IAAD,IAAS,CAACA,IAAI,CAACC,MAAnB,EAA2B;AACzB,UAAM,IAAIC,KAAJ,CACJ,4FADI,CAAN;AAGD;;AACD,MAAIF,IAAI,CAACG,KAAL,CAAWC,WAAX,CAAJ,EAA6B;AAC3B,UAAM,IAAIF,KAAJ,CACJ,uHADI,CAAN;AAGD;AACF;;AAED,SAASE,WAAT,CAAqBC,GAArB,EAA0B;AACxB,SAAOA,GAAG,IAAI,IAAP,IAAe,SAASC,IAAT,CAAc,OAAOD,GAArB,CAAtB;AACD;;AAED,SAASE,qBAAT,CAA+BC,KAA/B,EAAsC;AACpC,QAAMC,GAAG,GAAGb,MAAM,EAAlB;;AAEA,MAAI,CAACE,SAAS,CAACU,KAAD,EAAQC,GAAG,CAACC,OAAZ,CAAd,EAAoC;AAClCD,IAAAA,GAAG,CAACC,OAAJ,GAAcF,KAAd;AACD;;AAED,SAAOC,GAAG,CAACC,OAAX;AACD;;AAED,SAASC,oBAAT,CAA8BC,QAA9B,EAAwCC,YAAxC,EAAsD;AACpD,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCjB,IAAAA,SAAS,CAACc,YAAD,CAAT;AACD,GAHmD,CAIpD;;;AACDhB,EAAAA,SAAS,CAACe,QAAD,EAAWL,qBAAqB,CAACM,YAAD,CAAhC,CAAT;AACA;;AAED,OAAO,SAASI,2BAAT,CAAqCL,QAArC,EAA+CC,YAA/C,EAA6D;AAClE;AACDhB,EAAAA,SAAS,CAACe,QAAD,EAAWL,qBAAqB,CAACM,YAAD,CAAhC,CAAT;AACA;AAED,eAAeF,oBAAf","sourcesContent":["import { useRef, useEffect } from 'react';\nimport deepEqual from 'lodash/isEqual';\n\n/**\n * https://github.com/kentcdodds/use-deep-compare-effect\n */\nfunction checkDeps(deps) {\n  if (!deps || !deps.length) {\n    throw new Error(\n      'useDeepCompareEffect should not be used with no dependencies. Use React.useEffect instead.'\n    );\n  }\n  if (deps.every(isPrimitive)) {\n    throw new Error(\n      'useDeepCompareEffect should not be used with dependencies that are all primitive values. Use React.useEffect instead.'\n    );\n  }\n}\n\nfunction isPrimitive(val) {\n  return val == null || /^[sbn]/.test(typeof val);\n}\n\nfunction useDeepCompareMemoize(value) {\n  const ref = useRef();\n\n  if (!deepEqual(value, ref.current)) {\n    ref.current = value;\n  }\n\n  return ref.current;\n}\n\nfunction useDeepCompareEffect(callback, dependencies) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkDeps(dependencies);\n  }\n  // eslint-disable-next-line\n\tuseEffect(callback, useDeepCompareMemoize(dependencies));\n}\n\nexport function useDeepCompareEffectNoCheck(callback, dependencies) {\n  // eslint-disable-next-line\n\tuseEffect(callback, useDeepCompareMemoize(dependencies));\n}\n\nexport default useDeepCompareEffect;\n"]},"metadata":{},"sourceType":"module"}