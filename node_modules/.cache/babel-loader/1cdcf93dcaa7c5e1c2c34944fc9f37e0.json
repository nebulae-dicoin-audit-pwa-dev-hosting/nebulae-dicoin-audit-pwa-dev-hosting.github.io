{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/app/main/travels/dialogs/DialogCreateExecution.js\";\nimport { useTranslation } from 'react-i18next';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField, FormControlLabel, Switch } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({});\nexport default function DialogCreateExecution(props) {\n  const {\n    open,\n    handleClose,\n    dataDialogNewExecution,\n    setDataDialogNewExecution,\n    handleDialogNewExecution\n  } = props;\n  const {\n    t\n  } = useTranslation('travelsPage');\n  const classes = useStyles();\n\n  function handleOnChange(field, evt) {\n    evt.preventDefault();\n    const data = field === 'onLine' ? evt.target.checked : evt.target.value;\n\n    if (dataDialogNewExecution.routeCode === 'NA' || data === 'NA' && field === 'routeCode') {\n      setDataDialogNewExecution({ ...dataDialogNewExecution,\n        [field]: data,\n        onLine: false,\n        route: 'NA'\n      });\n    } else {\n      setDataDialogNewExecution({ ...dataDialogNewExecution,\n        [field]: data\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"alert-dialog-title\",\n      children: t('TRAVEL_DIALOG_RUN_NEW_TITLE')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"routeCode\",\n        label: t('TRAVEL_DIALOG_RUN_NEW_ROUTE_CODE'),\n        variant: \"standard\",\n        autoComplete: \"off\",\n        value: dataDialogNewExecution.routeCode,\n        onChange: evt => handleOnChange('routeCode', evt),\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"routeCode\",\n        label: t('TRAVEL_DIALOG_RUN_NEW_ROUTE'),\n        variant: \"standard\",\n        autoComplete: \"off\",\n        value: dataDialogNewExecution.route,\n        onChange: evt => handleOnChange('route', evt),\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"plate\",\n        label: t('TRAVEL_DIALOG_RUN_NEW_PLATE'),\n        variant: \"standard\",\n        className: \"mt-5\",\n        autoComplete: \"off\",\n        value: dataDialogNewExecution.plate,\n        onChange: evt => handleOnChange('plate', evt),\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"driverLicense\",\n        label: t('TRAVEL_DIALOG_RUN_NEW_DRIVER_LICENSE'),\n        variant: \"standard\",\n        className: \"mt-5\",\n        autoComplete: \"off\",\n        value: dataDialogNewExecution.driverLicense,\n        onChange: evt => handleOnChange('driverLicense', evt),\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"nitCompany\",\n        label: t('TRAVEL_DIALOG_RUN_NEW_NIT_COMPANY'),\n        variant: \"standard\",\n        className: \"mt-5\",\n        autoComplete: \"off\",\n        value: dataDialogNewExecution.nitCompany,\n        onChange: evt => handleOnChange('nitCompany', evt),\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Switch, {\n          size: \"small\",\n          value: dataDialogNewExecution.onLine,\n          checked: dataDialogNewExecution.onLine,\n          onChange: evt => handleOnChange('onLine', evt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this),\n        label: !dataDialogNewExecution.onLine ? t('TRAVEL_DIALOG_RUN_NEW_BATCH') : t('TRAVEL_DIALOG_RUN_NEW_ONLINE'),\n        className: \"mt-10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: evt => {\n          evt.stopPropagation();\n          handleDialogNewExecution(dataDialogNewExecution);\n        },\n        autoFocus: true,\n        variant: \"contained\",\n        color: \"secondary\",\n        disabled: !dataDialogNewExecution.routeCode || !dataDialogNewExecution.route || !dataDialogNewExecution.plate || !dataDialogNewExecution.driverLicense || !dataDialogNewExecution.nitCompany,\n        children: t('TRAVEL_HEADER_START')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        variant: \"contained\",\n        color: \"error\",\n        children: t('TRAVEL_DIALOG_RUN_NEW_CANCEL')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/app/main/travels/dialogs/DialogCreateExecution.js"],"names":["useTranslation","Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","FormControlLabel","Switch","makeStyles","useStyles","DialogCreateExecution","props","open","handleClose","dataDialogNewExecution","setDataDialogNewExecution","handleDialogNewExecution","t","classes","handleOnChange","field","evt","preventDefault","data","target","checked","value","routeCode","onLine","route","plate","driverLicense","nitCompany","stopPropagation"],"mappings":"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","sourcesContent":["import { useTranslation } from 'react-i18next';\n\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  FormControlLabel,\n  Switch,\n} from '@mui/material';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles({});\n\nexport default function DialogCreateExecution(props) {\n  const {\n    open,\n    handleClose,\n    dataDialogNewExecution,\n    setDataDialogNewExecution,\n    handleDialogNewExecution,\n  } = props;\n  const { t } = useTranslation('travelsPage');\n  const classes = useStyles();\n\n  function handleOnChange(field, evt) {\n    evt.preventDefault();\n    const data = field === 'onLine' ? evt.target.checked : evt.target.value;\n\n    if (dataDialogNewExecution.routeCode === 'NA' || (data === 'NA' && field === 'routeCode')) {\n      setDataDialogNewExecution({\n        ...dataDialogNewExecution,\n        [field]: data,\n        onLine: false,\n        route: 'NA',\n      });\n    } else {\n      setDataDialogNewExecution({ ...dataDialogNewExecution, [field]: data });\n    }\n  }\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{t('TRAVEL_DIALOG_RUN_NEW_TITLE')}</DialogTitle>\n      <DialogContent dividers>\n        <TextField\n          id=\"routeCode\"\n          label={t('TRAVEL_DIALOG_RUN_NEW_ROUTE_CODE')}\n          variant=\"standard\"\n          autoComplete=\"off\"\n          value={dataDialogNewExecution.routeCode}\n          onChange={(evt) => handleOnChange('routeCode', evt)}\n          fullWidth\n        />\n        <TextField\n          id=\"routeCode\"\n          label={t('TRAVEL_DIALOG_RUN_NEW_ROUTE')}\n          variant=\"standard\"\n          autoComplete=\"off\"\n          value={dataDialogNewExecution.route}\n          onChange={(evt) => handleOnChange('route', evt)}\n          fullWidth\n        />\n        <TextField\n          id=\"plate\"\n          label={t('TRAVEL_DIALOG_RUN_NEW_PLATE')}\n          variant=\"standard\"\n          className=\"mt-5\"\n          autoComplete=\"off\"\n          value={dataDialogNewExecution.plate}\n          onChange={(evt) => handleOnChange('plate', evt)}\n          fullWidth\n        />\n        <TextField\n          id=\"driverLicense\"\n          label={t('TRAVEL_DIALOG_RUN_NEW_DRIVER_LICENSE')}\n          variant=\"standard\"\n          className=\"mt-5\"\n          autoComplete=\"off\"\n          value={dataDialogNewExecution.driverLicense}\n          onChange={(evt) => handleOnChange('driverLicense', evt)}\n          fullWidth\n        />\n        <TextField\n          id=\"nitCompany\"\n          label={t('TRAVEL_DIALOG_RUN_NEW_NIT_COMPANY')}\n          variant=\"standard\"\n          className=\"mt-5\"\n          autoComplete=\"off\"\n          value={dataDialogNewExecution.nitCompany}\n          onChange={(evt) => handleOnChange('nitCompany', evt)}\n          fullWidth\n        />\n\n        <FormControlLabel\n          control={\n            <Switch\n              size=\"small\"\n              value={dataDialogNewExecution.onLine}\n              checked={dataDialogNewExecution.onLine}\n              onChange={(evt) => handleOnChange('onLine', evt)}\n            />\n          }\n          label={\n            !dataDialogNewExecution.onLine\n              ? t('TRAVEL_DIALOG_RUN_NEW_BATCH')\n              : t('TRAVEL_DIALOG_RUN_NEW_ONLINE')\n          }\n          className=\"mt-10\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={(evt) => {\n            evt.stopPropagation();\n            handleDialogNewExecution(dataDialogNewExecution);\n          }}\n          autoFocus\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={\n            !dataDialogNewExecution.routeCode ||\n            !dataDialogNewExecution.route ||\n            !dataDialogNewExecution.plate ||\n            !dataDialogNewExecution.driverLicense ||\n            !dataDialogNewExecution.nitCompany\n          }\n        >\n          {t('TRAVEL_HEADER_START')}\n        </Button>\n        <Button onClick={handleClose} variant=\"contained\" color=\"error\">\n          {t('TRAVEL_DIALOG_RUN_NEW_CANCEL')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}