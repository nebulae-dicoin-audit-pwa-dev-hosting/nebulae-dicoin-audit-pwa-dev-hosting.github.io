{"ast":null,"code":"import Auth0Lock from 'auth0-lock';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport AUTH_CONFIG from './auth0ServiceConfig';\n\nclass Auth0Service {\n  constructor() {\n    this.sdk = {\n      auth0Manage: null\n    };\n\n    this.login = () => {\n      if (!this.lock) {\n        console.warn(\"Auth0 Service didn't initialize, check your configuration\");\n        return false;\n      } // Call the show method to display the widget.\n\n\n      return this.lock.show();\n    };\n\n    this.register = () => {\n      if (!this.lock) {\n        console.warn(\"Auth0 Service didn't initialize, check your configuration\");\n        return false;\n      }\n\n      return this.lock.show({\n        initialScreen: 'signUp'\n      });\n    };\n\n    this.handleAuthentication = () => {\n      if (!this.lock) {\n        return false;\n      } // Add a callback for Lock's `authenticated` event\n\n\n      this.lock.on('authenticated', this.setSession); // Add a callback for Lock's `authorization_error` event\n\n      this.lock.on('authorization_error', err => {\n        console.warn(`Error: ${err.error}. Check the console for further details.`);\n      });\n      return true;\n    };\n\n    this.onAuthenticated = callback => {\n      if (!this.lock) {\n        return false;\n      }\n\n      return this.lock.on('authenticated', callback);\n    };\n\n    this.setSession = authResult => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        // Set the time that the access token will expire at\n        const expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n        localStorage.setItem('access_token', authResult.accessToken);\n        localStorage.setItem('id_token', authResult.idToken);\n        localStorage.setItem('expires_at', expiresAt);\n      }\n    };\n\n    this.logout = () => {\n      // Clear access token and ID token from local storage\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('id_token');\n      localStorage.removeItem('expires_at');\n      localStorage.removeItem('auth0.ssodata');\n    };\n\n    this.isAuthenticated = () => {\n      if (!this.lock) {\n        return false;\n      } // Check whether the current time is past the\n      // access token's expiry time\n\n\n      const expiresAt = JSON.parse(localStorage.getItem('expires_at'));\n      const isNotExpired = new Date().getTime() < expiresAt;\n\n      if (isNotExpired) {\n        return true;\n      }\n\n      this.logout();\n      return false;\n    };\n\n    this.getUserData = () => {\n      return new Promise((resolve, reject) => {\n        const tokenData = this.getTokenData();\n        const {\n          sub: userId\n        } = tokenData;\n        const auth0UserUrl = `https://${AUTH_CONFIG.domain}/api/v2/users/${userId}`;\n        axios.get(auth0UserUrl, {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${this.getAccessToken()}`\n          }\n        }).then(response => {\n          resolve(response.data);\n        }).catch(error => {\n          // handle error\n          console.warn('Cannot retrieve user data', error);\n          reject(error);\n        });\n      });\n    };\n\n    this.updateUserData = userMetadata => {\n      const tokenData = this.getTokenData();\n      const {\n        sub: userId\n      } = tokenData;\n      const auth0UserUrl = `https://${AUTH_CONFIG.domain}/api/v2/users/${userId}`;\n      const dataObj = JSON.stringify({\n        user_metadata: userMetadata\n      });\n      return axios.patch(auth0UserUrl, dataObj, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this.getAccessToken()}`\n        }\n      });\n    };\n\n    this.getAccessToken = () => {\n      return localStorage.getItem('access_token');\n    };\n\n    this.getIdToken = () => {\n      return window.localStorage.getItem('id_token');\n    };\n\n    this.getTokenData = () => {\n      const token = this.getIdToken();\n      const decoded = jwtDecode(token);\n\n      if (!decoded) {\n        return null;\n      }\n\n      return decoded;\n    };\n  }\n\n  init(success) {\n    if (Object.entries(AUTH_CONFIG).length === 0 && AUTH_CONFIG.constructor === Object) {\n      if (process.env.NODE_ENV === 'development') {\n        console.warn('Missing Auth0 configuration at src/app/services/auth0Service/auth0ServiceConfig.js');\n      }\n\n      success(false);\n      return;\n    }\n\n    this.lock = new Auth0Lock(AUTH_CONFIG.clientId, AUTH_CONFIG.domain, {\n      autoclose: true,\n      socialButtonStyle: 'big',\n      auth: {\n        // redirect: false,\n        redirectUrl: AUTH_CONFIG.callbackUrl,\n        responseType: 'token id_token',\n        audience: `https://${AUTH_CONFIG.domain}/api/v2/`,\n        params: {\n          scope: 'openid profile email user_metadata app_metadata picture update:current_user_metadata create:current_user_metadata read:current_user'\n        }\n      }\n    });\n    this.handleAuthentication();\n    success(true);\n  }\n\n}\n\nconst instance = new Auth0Service();\nexport default instance;","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/app/services/auth0Service/auth0Service.js"],"names":["Auth0Lock","axios","jwtDecode","AUTH_CONFIG","Auth0Service","sdk","auth0Manage","login","lock","console","warn","show","register","initialScreen","handleAuthentication","on","setSession","err","error","onAuthenticated","callback","authResult","accessToken","idToken","expiresAt","JSON","stringify","expiresIn","Date","getTime","localStorage","setItem","logout","removeItem","isAuthenticated","parse","getItem","isNotExpired","getUserData","Promise","resolve","reject","tokenData","getTokenData","sub","userId","auth0UserUrl","domain","get","headers","Authorization","getAccessToken","then","response","data","catch","updateUserData","userMetadata","dataObj","user_metadata","patch","getIdToken","window","token","decoded","init","success","Object","entries","length","constructor","process","env","NODE_ENV","clientId","autoclose","socialButtonStyle","auth","redirectUrl","callbackUrl","responseType","audience","params","scope","instance"],"mappings":"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","sourcesContent":["import Auth0Lock from 'auth0-lock';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport AUTH_CONFIG from './auth0ServiceConfig';\n\nclass Auth0Service {\n  sdk = { auth0Manage: null };\n\n  init(success) {\n    if (Object.entries(AUTH_CONFIG).length === 0 && AUTH_CONFIG.constructor === Object) {\n      if (process.env.NODE_ENV === 'development') {\n        console.warn(\n          'Missing Auth0 configuration at src/app/services/auth0Service/auth0ServiceConfig.js'\n        );\n      }\n      success(false);\n      return;\n    }\n\n    this.lock = new Auth0Lock(AUTH_CONFIG.clientId, AUTH_CONFIG.domain, {\n      autoclose: true,\n      socialButtonStyle: 'big',\n      auth: {\n        // redirect: false,\n        redirectUrl: AUTH_CONFIG.callbackUrl,\n        responseType: 'token id_token',\n        audience: `https://${AUTH_CONFIG.domain}/api/v2/`,\n        params: {\n          scope:\n            'openid profile email user_metadata app_metadata picture update:current_user_metadata create:current_user_metadata read:current_user',\n        },\n      },\n    });\n    this.handleAuthentication();\n    success(true);\n  }\n\n  login = () => {\n    if (!this.lock) {\n      console.warn(\"Auth0 Service didn't initialize, check your configuration\");\n\n      return false;\n    }\n    // Call the show method to display the widget.\n    return this.lock.show();\n  };\n\n  register = () => {\n    if (!this.lock) {\n      console.warn(\"Auth0 Service didn't initialize, check your configuration\");\n\n      return false;\n    }\n\n    return this.lock.show({\n      initialScreen: 'signUp',\n    });\n  };\n\n  handleAuthentication = () => {\n    if (!this.lock) {\n      return false;\n    }\n\n    // Add a callback for Lock's `authenticated` event\n    this.lock.on('authenticated', this.setSession);\n    // Add a callback for Lock's `authorization_error` event\n    this.lock.on('authorization_error', (err) => {\n      console.warn(`Error: ${err.error}. Check the console for further details.`);\n    });\n\n    return true;\n  };\n\n  onAuthenticated = (callback) => {\n    if (!this.lock) {\n      return false;\n    }\n    return this.lock.on('authenticated', callback);\n  };\n\n  setSession = (authResult) => {\n    if (authResult && authResult.accessToken && authResult.idToken) {\n      // Set the time that the access token will expire at\n      const expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n      localStorage.setItem('access_token', authResult.accessToken);\n      localStorage.setItem('id_token', authResult.idToken);\n      localStorage.setItem('expires_at', expiresAt);\n    }\n  };\n\n  logout = () => {\n    // Clear access token and ID token from local storage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('expires_at');\n    localStorage.removeItem('auth0.ssodata');\n  };\n\n  isAuthenticated = () => {\n    if (!this.lock) {\n      return false;\n    }\n    // Check whether the current time is past the\n    // access token's expiry time\n    const expiresAt = JSON.parse(localStorage.getItem('expires_at'));\n    const isNotExpired = new Date().getTime() < expiresAt;\n    if (isNotExpired) {\n      return true;\n    }\n\n    this.logout();\n    return false;\n  };\n\n  getUserData = () => {\n    return new Promise((resolve, reject) => {\n      const tokenData = this.getTokenData();\n      const { sub: userId } = tokenData;\n\n      const auth0UserUrl = `https://${AUTH_CONFIG.domain}/api/v2/users/${userId}`;\n\n      axios\n        .get(auth0UserUrl, {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${this.getAccessToken()}`,\n          },\n        })\n        .then((response) => {\n          resolve(response.data);\n        })\n        .catch((error) => {\n          // handle error\n          console.warn('Cannot retrieve user data', error);\n          reject(error);\n        });\n    });\n  };\n\n  updateUserData = (userMetadata) => {\n    const tokenData = this.getTokenData();\n    const { sub: userId } = tokenData;\n\n    const auth0UserUrl = `https://${AUTH_CONFIG.domain}/api/v2/users/${userId}`;\n    const dataObj = JSON.stringify({ user_metadata: userMetadata });\n\n    return axios.patch(auth0UserUrl, dataObj, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${this.getAccessToken()}`,\n      },\n    });\n  };\n\n  getAccessToken = () => {\n    return localStorage.getItem('access_token');\n  };\n\n  getIdToken = () => {\n    return window.localStorage.getItem('id_token');\n  };\n\n  getTokenData = () => {\n    const token = this.getIdToken();\n    const decoded = jwtDecode(token);\n    if (!decoded) {\n      return null;\n    }\n    return decoded;\n  };\n}\n\nconst instance = new Auth0Service();\n\nexport default instance;\n"]},"metadata":{},"sourceType":"module"}