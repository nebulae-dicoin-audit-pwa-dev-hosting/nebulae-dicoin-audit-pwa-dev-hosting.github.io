{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/app/main/travels/dialogs/DialogAddNote.js\";\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({});\nexport default function DialogAddNote(props) {\n  const {\n    open,\n    handleClose,\n    handleAddNote\n  } = props;\n  const {\n    t\n  } = useTranslation('travelsPage');\n  const classes = useStyles();\n  const [note, setNote] = useState();\n\n  function handleNote(evt) {\n    setNote(evt.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"alert-dialog-title\",\n      children: t('TRAVEL_DIALOG_ADD_NOTE_TITLE')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"note\",\n        label: t('TRAVEL_DIALOG_ADD_NOTE_NOTE'),\n        variant: \"standard\",\n        autoComplete: \"off\",\n        value: note,\n        onChange: evt => handleNote(evt),\n        fullWidth: true,\n        multiline: true,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: evt => {\n          evt.stopPropagation();\n          handleAddNote(note);\n        },\n        autoFocus: true,\n        variant: \"contained\",\n        color: \"secondary\",\n        children: t('TRAVEL_DIALOG_ADD_NOTE_ACCEPT')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        variant: \"contained\",\n        color: \"error\",\n        children: t('TRAVEL_DIALOG_RUN_NEW_CANCEL')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/app/main/travels/dialogs/DialogAddNote.js"],"names":["useState","useTranslation","Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","makeStyles","useStyles","DialogAddNote","props","open","handleClose","handleAddNote","t","classes","note","setNote","handleNote","evt","target","value","stopPropagation"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,cAAT,QAA+B,eAA/B;AAEA,SACEC,MADF,EAEEC,MAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,WALF,EAMEC,SANF,QAOO,eAPP;AAQA,SAASC,UAAT,QAA2B,aAA3B;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAC,EAAD,CAA5B;AAEA,eAAe,SAASE,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA;AAArB,MAAuCH,KAA7C;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAQd,cAAc,CAAC,aAAD,CAA5B;AACA,QAAMe,OAAO,GAAGP,SAAS,EAAzB;AAEA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,EAAhC;;AACA,WAASmB,UAAT,CAAoBC,GAApB,EAAyB;AACvBF,IAAAA,OAAO,CAACE,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAP;AACD;;AAED,sBACE,QAAC,MAAD;AACE,IAAA,IAAI,EAAEV,IADR;AAEE,IAAA,OAAO,EAAEC,WAFX;AAGE,uBAAgB,oBAHlB;AAIE,wBAAiB,0BAJnB;AAAA,4BAME,QAAC,WAAD;AAAa,MAAA,EAAE,EAAC,oBAAhB;AAAA,gBAAsCE,CAAC,CAAC,8BAAD;AAAvC;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,aAAD;AAAe,MAAA,QAAQ,MAAvB;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,KAAK,EAAEA,CAAC,CAAC,6BAAD,CAFV;AAGE,QAAA,OAAO,EAAC,UAHV;AAIE,QAAA,YAAY,EAAC,KAJf;AAKE,QAAA,KAAK,EAAEE,IALT;AAME,QAAA,QAAQ,EAAGG,GAAD,IAASD,UAAU,CAACC,GAAD,CAN/B;AAOE,QAAA,SAAS,MAPX;AAQE,QAAA,SAAS,MARX;AASE,QAAA,IAAI,EAAE;AATR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAoBE,QAAC,aAAD;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAGA,GAAD,IAAS;AAChBA,UAAAA,GAAG,CAACG,eAAJ;AACAT,UAAAA,aAAa,CAACG,IAAD,CAAb;AACD,SAJH;AAKE,QAAA,SAAS,MALX;AAME,QAAA,OAAO,EAAC,WANV;AAOE,QAAA,KAAK,EAAC,WAPR;AAAA,kBASGF,CAAC,CAAC,+BAAD;AATJ;AAAA;AAAA;AAAA;AAAA,cADF,eAYE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEF,WAAjB;AAA8B,QAAA,OAAO,EAAC,WAAtC;AAAkD,QAAA,KAAK,EAAC,OAAxD;AAAA,kBACGE,CAAC,CAAC,8BAAD;AADJ;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD","sourcesContent":["import { useState } from 'react';\n\nimport { useTranslation } from 'react-i18next';\n\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from '@mui/material';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles({});\n\nexport default function DialogAddNote(props) {\n  const { open, handleClose, handleAddNote } = props;\n  const { t } = useTranslation('travelsPage');\n  const classes = useStyles();\n\n  const [note, setNote] = useState();\n  function handleNote(evt) {\n    setNote(evt.target.value);\n  }\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{t('TRAVEL_DIALOG_ADD_NOTE_TITLE')}</DialogTitle>\n      <DialogContent dividers>\n        <TextField\n          id=\"note\"\n          label={t('TRAVEL_DIALOG_ADD_NOTE_NOTE')}\n          variant=\"standard\"\n          autoComplete=\"off\"\n          value={note}\n          onChange={(evt) => handleNote(evt)}\n          fullWidth\n          multiline\n          rows={4}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={(evt) => {\n            evt.stopPropagation();\n            handleAddNote(note);\n          }}\n          autoFocus\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          {t('TRAVEL_DIALOG_ADD_NOTE_ACCEPT')}\n        </Button>\n        <Button onClick={handleClose} variant=\"contained\" color=\"error\">\n          {t('TRAVEL_DIALOG_RUN_NEW_CANCEL')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}