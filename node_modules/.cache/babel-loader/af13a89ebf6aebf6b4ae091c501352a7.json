{"ast":null,"code":"/*!\n  * Bowser - a browser detector\n  * https://github.com/ded/bowser\n  * MIT License | (c) Dustin Diaz 2014\n  */\n!function (name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports['browser'] = definition();else if (typeof define == 'function' && define.amd) define(definition);else this[name] = definition();\n}('bowser', function () {\n  /**\n    * See useragents.js for examples of navigator.userAgent\n    */\n  var t = true;\n\n  function detect(ua) {\n    function getFirstMatch(regex) {\n      var match = ua.match(regex);\n      return match && match.length > 1 && match[1] || '';\n    }\n\n    function getSecondMatch(regex) {\n      var match = ua.match(regex);\n      return match && match.length > 1 && match[2] || '';\n    }\n\n    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase(),\n        likeAndroid = /like android/i.test(ua),\n        android = !likeAndroid && /android/i.test(ua),\n        edgeVersion = getFirstMatch(/edge\\/(\\d+(\\.\\d+)?)/i),\n        versionIdentifier = getFirstMatch(/version\\/(\\d+(\\.\\d+)?)/i),\n        tablet = /tablet/i.test(ua),\n        mobile = !tablet && /[^-]mobi/i.test(ua),\n        result;\n\n    if (/opera|opr/i.test(ua)) {\n      result = {\n        name: 'Opera',\n        opera: t,\n        version: versionIdentifier || getFirstMatch(/(?:opera|opr)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/windows phone/i.test(ua)) {\n      result = {\n        name: 'Windows Phone',\n        windowsphone: t\n      };\n\n      if (edgeVersion) {\n        result.msedge = t;\n        result.version = edgeVersion;\n      } else {\n        result.msie = t;\n        result.version = getFirstMatch(/iemobile\\/(\\d+(\\.\\d+)?)/i);\n      }\n    } else if (/msie|trident/i.test(ua)) {\n      result = {\n        name: 'Internet Explorer',\n        msie: t,\n        version: getFirstMatch(/(?:msie |rv:)(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/chrome.+? edge/i.test(ua)) {\n      result = {\n        name: 'Microsoft Edge',\n        msedge: t,\n        version: edgeVersion\n      };\n    } else if (/chrome|crios|crmo/i.test(ua)) {\n      result = {\n        name: 'Chrome',\n        chrome: t,\n        version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (iosdevice) {\n      result = {\n        name: iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'\n      }; // WTF: version is not part of user agent in web apps\n\n      if (versionIdentifier) {\n        result.version = versionIdentifier;\n      }\n    } else if (/sailfish/i.test(ua)) {\n      result = {\n        name: 'Sailfish',\n        sailfish: t,\n        version: getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/seamonkey\\//i.test(ua)) {\n      result = {\n        name: 'SeaMonkey',\n        seamonkey: t,\n        version: getFirstMatch(/seamonkey\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/firefox|iceweasel/i.test(ua)) {\n      result = {\n        name: 'Firefox',\n        firefox: t,\n        version: getFirstMatch(/(?:firefox|iceweasel)[ \\/](\\d+(\\.\\d+)?)/i)\n      };\n\n      if (/\\((mobile|tablet);[^\\)]*rv:[\\d\\.]+\\)/i.test(ua)) {\n        result.firefoxos = t;\n      }\n    } else if (/silk/i.test(ua)) {\n      result = {\n        name: 'Amazon Silk',\n        silk: t,\n        version: getFirstMatch(/silk\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (android) {\n      result = {\n        name: 'Android',\n        version: versionIdentifier\n      };\n    } else if (/phantom/i.test(ua)) {\n      result = {\n        name: 'PhantomJS',\n        phantom: t,\n        version: getFirstMatch(/phantomjs\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/blackberry|\\bbb\\d+/i.test(ua) || /rim\\stablet/i.test(ua)) {\n      result = {\n        name: 'BlackBerry',\n        blackberry: t,\n        version: versionIdentifier || getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/(web|hpw)os/i.test(ua)) {\n      result = {\n        name: 'WebOS',\n        webos: t,\n        version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\\/(\\d+(\\.\\d+)?)/i)\n      };\n      /touchpad\\//i.test(ua) && (result.touchpad = t);\n    } else if (/bada/i.test(ua)) {\n      result = {\n        name: 'Bada',\n        bada: t,\n        version: getFirstMatch(/dolfin\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/tizen/i.test(ua)) {\n      result = {\n        name: 'Tizen',\n        tizen: t,\n        version: getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      };\n    } else if (/safari/i.test(ua)) {\n      result = {\n        name: 'Safari',\n        safari: t,\n        version: versionIdentifier\n      };\n    } else {\n      result = {\n        name: getFirstMatch(/^(.*)\\/(.*) /),\n        version: getSecondMatch(/^(.*)\\/(.*) /)\n      };\n    } // set webkit or gecko flag for browsers based on these engines\n\n\n    if (!result.msedge && /(apple)?webkit/i.test(ua)) {\n      result.name = result.name || \"Webkit\";\n      result.webkit = t;\n\n      if (!result.version && versionIdentifier) {\n        result.version = versionIdentifier;\n      }\n    } else if (!result.opera && /gecko\\//i.test(ua)) {\n      result.name = result.name || \"Gecko\";\n      result.gecko = t;\n      result.version = result.version || getFirstMatch(/gecko\\/(\\d+(\\.\\d+)?)/i);\n    } // set OS flags for platforms that have multiple browsers\n\n\n    if (!result.msedge && (android || result.silk)) {\n      result.android = t;\n    } else if (iosdevice) {\n      result[iosdevice] = t;\n      result.ios = t;\n    } // OS version extraction\n\n\n    var osVersion = '';\n\n    if (result.windowsphone) {\n      osVersion = getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i);\n    } else if (iosdevice) {\n      osVersion = getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (android) {\n      osVersion = getFirstMatch(/android[ \\/-](\\d+(\\.\\d+)*)/i);\n    } else if (result.webos) {\n      osVersion = getFirstMatch(/(?:web|hpw)os\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.blackberry) {\n      osVersion = getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i);\n    } else if (result.bada) {\n      osVersion = getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.tizen) {\n      osVersion = getFirstMatch(/tizen[\\/\\s](\\d+(\\.\\d+)*)/i);\n    }\n\n    if (osVersion) {\n      result.osversion = osVersion;\n    } // device type extraction\n\n\n    var osMajorVersion = osVersion.split('.')[0];\n\n    if (tablet || iosdevice == 'ipad' || android && (osMajorVersion == 3 || osMajorVersion == 4 && !mobile) || result.silk) {\n      result.tablet = t;\n    } else if (mobile || iosdevice == 'iphone' || iosdevice == 'ipod' || android || result.blackberry || result.webos || result.bada) {\n      result.mobile = t;\n    } // Graded Browser Support\n    // http://developer.yahoo.com/yui/articles/gbs\n\n\n    if (result.msedge || result.msie && result.version >= 10 || result.chrome && result.version >= 20 || result.firefox && result.version >= 20.0 || result.safari && result.version >= 6 || result.opera && result.version >= 10.0 || result.ios && result.osversion && result.osversion.split(\".\")[0] >= 6 || result.blackberry && result.version >= 10.1) {\n      result.a = t;\n    } else if (result.msie && result.version < 10 || result.chrome && result.version < 20 || result.firefox && result.version < 20.0 || result.safari && result.version < 6 || result.opera && result.version < 10.0 || result.ios && result.osversion && result.osversion.split(\".\")[0] < 6) {\n      result.c = t;\n    } else result.x = t;\n\n    return result;\n  }\n\n  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent : '');\n\n  bowser.test = function (browserList) {\n    for (var i = 0; i < browserList.length; ++i) {\n      var browserItem = browserList[i];\n\n      if (typeof browserItem === 'string') {\n        if (browserItem in bowser) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n  /*\n   * Set our detect method to the main bowser object so we can\n   * reuse it to test other user agents.\n   * This is needed to implement future tests.\n   */\n\n\n  bowser._detect = detect;\n  return bowser;\n});","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/node_modules/bowser/bowser.js"],"names":["name","definition","module","exports","define","amd","t","detect","ua","getFirstMatch","regex","match","length","getSecondMatch","iosdevice","toLowerCase","likeAndroid","test","android","edgeVersion","versionIdentifier","tablet","mobile","result","opera","version","windowsphone","msedge","msie","chrome","sailfish","seamonkey","firefox","firefoxos","silk","phantom","blackberry","webos","touchpad","bada","tizen","safari","webkit","gecko","ios","osVersion","replace","osversion","osMajorVersion","split","a","c","x","bowser","navigator","userAgent","browserList","i","browserItem","_detect"],"mappings":"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","sourcesContent":["/*!\n  * Bowser - a browser detector\n  * https://github.com/ded/bowser\n  * MIT License | (c) Dustin Diaz 2014\n  */\n\n!function (name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports['browser'] = definition()\n  else if (typeof define == 'function' && define.amd) define(definition)\n  else this[name] = definition()\n}('bowser', function () {\n  /**\n    * See useragents.js for examples of navigator.userAgent\n    */\n\n  var t = true\n\n  function detect(ua) {\n\n    function getFirstMatch(regex) {\n      var match = ua.match(regex);\n      return (match && match.length > 1 && match[1]) || '';\n    }\n\n    function getSecondMatch(regex) {\n      var match = ua.match(regex);\n      return (match && match.length > 1 && match[2]) || '';\n    }\n\n    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase()\n      , likeAndroid = /like android/i.test(ua)\n      , android = !likeAndroid && /android/i.test(ua)\n      , edgeVersion = getFirstMatch(/edge\\/(\\d+(\\.\\d+)?)/i)\n      , versionIdentifier = getFirstMatch(/version\\/(\\d+(\\.\\d+)?)/i)\n      , tablet = /tablet/i.test(ua)\n      , mobile = !tablet && /[^-]mobi/i.test(ua)\n      , result\n\n    if (/opera|opr/i.test(ua)) {\n      result = {\n        name: 'Opera'\n      , opera: t\n      , version: versionIdentifier || getFirstMatch(/(?:opera|opr)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/windows phone/i.test(ua)) {\n      result = {\n        name: 'Windows Phone'\n      , windowsphone: t\n      }\n      if (edgeVersion) {\n        result.msedge = t\n        result.version = edgeVersion\n      }\n      else {\n        result.msie = t\n        result.version = getFirstMatch(/iemobile\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/msie|trident/i.test(ua)) {\n      result = {\n        name: 'Internet Explorer'\n      , msie: t\n      , version: getFirstMatch(/(?:msie |rv:)(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/chrome.+? edge/i.test(ua)) {\n      result = {\n        name: 'Microsoft Edge'\n      , msedge: t\n      , version: edgeVersion\n      }\n    }\n    else if (/chrome|crios|crmo/i.test(ua)) {\n      result = {\n        name: 'Chrome'\n      , chrome: t\n      , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (iosdevice) {\n      result = {\n        name : iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'\n      }\n      // WTF: version is not part of user agent in web apps\n      if (versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    }\n    else if (/sailfish/i.test(ua)) {\n      result = {\n        name: 'Sailfish'\n      , sailfish: t\n      , version: getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/seamonkey\\//i.test(ua)) {\n      result = {\n        name: 'SeaMonkey'\n      , seamonkey: t\n      , version: getFirstMatch(/seamonkey\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/firefox|iceweasel/i.test(ua)) {\n      result = {\n        name: 'Firefox'\n      , firefox: t\n      , version: getFirstMatch(/(?:firefox|iceweasel)[ \\/](\\d+(\\.\\d+)?)/i)\n      }\n      if (/\\((mobile|tablet);[^\\)]*rv:[\\d\\.]+\\)/i.test(ua)) {\n        result.firefoxos = t\n      }\n    }\n    else if (/silk/i.test(ua)) {\n      result =  {\n        name: 'Amazon Silk'\n      , silk: t\n      , version : getFirstMatch(/silk\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (android) {\n      result = {\n        name: 'Android'\n      , version: versionIdentifier\n      }\n    }\n    else if (/phantom/i.test(ua)) {\n      result = {\n        name: 'PhantomJS'\n      , phantom: t\n      , version: getFirstMatch(/phantomjs\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/blackberry|\\bbb\\d+/i.test(ua) || /rim\\stablet/i.test(ua)) {\n      result = {\n        name: 'BlackBerry'\n      , blackberry: t\n      , version: versionIdentifier || getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/(web|hpw)os/i.test(ua)) {\n      result = {\n        name: 'WebOS'\n      , webos: t\n      , version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\\/(\\d+(\\.\\d+)?)/i)\n      };\n      /touchpad\\//i.test(ua) && (result.touchpad = t)\n    }\n    else if (/bada/i.test(ua)) {\n      result = {\n        name: 'Bada'\n      , bada: t\n      , version: getFirstMatch(/dolfin\\/(\\d+(\\.\\d+)?)/i)\n      };\n    }\n    else if (/tizen/i.test(ua)) {\n      result = {\n        name: 'Tizen'\n      , tizen: t\n      , version: getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      };\n    }\n    else if (/safari/i.test(ua)) {\n      result = {\n        name: 'Safari'\n      , safari: t\n      , version: versionIdentifier\n      }\n    }\n    else {\n      result = {\n        name: getFirstMatch(/^(.*)\\/(.*) /),\n        version: getSecondMatch(/^(.*)\\/(.*) /)\n     };\n   }\n\n    // set webkit or gecko flag for browsers based on these engines\n    if (!result.msedge && /(apple)?webkit/i.test(ua)) {\n      result.name = result.name || \"Webkit\"\n      result.webkit = t\n      if (!result.version && versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    } else if (!result.opera && /gecko\\//i.test(ua)) {\n      result.name = result.name || \"Gecko\"\n      result.gecko = t\n      result.version = result.version || getFirstMatch(/gecko\\/(\\d+(\\.\\d+)?)/i)\n    }\n\n    // set OS flags for platforms that have multiple browsers\n    if (!result.msedge && (android || result.silk)) {\n      result.android = t\n    } else if (iosdevice) {\n      result[iosdevice] = t\n      result.ios = t\n    }\n\n    // OS version extraction\n    var osVersion = '';\n    if (result.windowsphone) {\n      osVersion = getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i);\n    } else if (iosdevice) {\n      osVersion = getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (android) {\n      osVersion = getFirstMatch(/android[ \\/-](\\d+(\\.\\d+)*)/i);\n    } else if (result.webos) {\n      osVersion = getFirstMatch(/(?:web|hpw)os\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.blackberry) {\n      osVersion = getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i);\n    } else if (result.bada) {\n      osVersion = getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.tizen) {\n      osVersion = getFirstMatch(/tizen[\\/\\s](\\d+(\\.\\d+)*)/i);\n    }\n    if (osVersion) {\n      result.osversion = osVersion;\n    }\n\n    // device type extraction\n    var osMajorVersion = osVersion.split('.')[0];\n    if (tablet || iosdevice == 'ipad' || (android && (osMajorVersion == 3 || (osMajorVersion == 4 && !mobile))) || result.silk) {\n      result.tablet = t\n    } else if (mobile || iosdevice == 'iphone' || iosdevice == 'ipod' || android || result.blackberry || result.webos || result.bada) {\n      result.mobile = t\n    }\n\n    // Graded Browser Support\n    // http://developer.yahoo.com/yui/articles/gbs\n    if (result.msedge ||\n        (result.msie && result.version >= 10) ||\n        (result.chrome && result.version >= 20) ||\n        (result.firefox && result.version >= 20.0) ||\n        (result.safari && result.version >= 6) ||\n        (result.opera && result.version >= 10.0) ||\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] >= 6) ||\n        (result.blackberry && result.version >= 10.1)\n        ) {\n      result.a = t;\n    }\n    else if ((result.msie && result.version < 10) ||\n        (result.chrome && result.version < 20) ||\n        (result.firefox && result.version < 20.0) ||\n        (result.safari && result.version < 6) ||\n        (result.opera && result.version < 10.0) ||\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] < 6)\n        ) {\n      result.c = t\n    } else result.x = t\n\n    return result\n  }\n\n  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent : '')\n\n  bowser.test = function (browserList) {\n    for (var i = 0; i < browserList.length; ++i) {\n      var browserItem = browserList[i];\n      if (typeof browserItem=== 'string') {\n        if (browserItem in bowser) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /*\n   * Set our detect method to the main bowser object so we can\n   * reuse it to test other user agents.\n   * This is needed to implement future tests.\n   */\n  bowser._detect = detect;\n\n  return bowser\n});\n"]},"metadata":{},"sourceType":"script"}