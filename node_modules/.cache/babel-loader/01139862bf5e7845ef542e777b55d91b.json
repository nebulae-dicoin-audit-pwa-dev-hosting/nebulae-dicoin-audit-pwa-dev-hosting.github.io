{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/@fuse/core/FuseNavigation/vertical/types/FuseNavVerticalItem.js\";\nimport NavLinkAdapter from '@fuse/core/NavLinkAdapter';\nimport { styled, alpha } from '@mui/material/styles';\nimport Icon from '@mui/material/Icon';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport FuseNavBadge from '../../FuseNavBadge';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Root = styled(ListItem)(_ref => {\n  let {\n    theme,\n    ...props\n  } = _ref;\n  return {\n    height: 40,\n    width: '100%',\n    borderRadius: '6px',\n    margin: '0 0 4px 0',\n    paddingRight: 12,\n    paddingLeft: props.itempadding,\n    color: alpha(theme.palette.text.primary, 0.7),\n    cursor: 'pointer',\n    textDecoration: 'none!important',\n    '&:hover': {\n      color: theme.palette.text.primary\n    },\n    '&.active': {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.mode === 'light' ? 'rgba(0, 0, 0, .05)!important' : 'rgba(255, 255, 255, .1)!important',\n      pointerEvents: 'none',\n      transition: 'border-radius .15s cubic-bezier(0.4,0.0,0.2,1)',\n      '& > .fuse-list-item-text-primary': {\n        color: 'inherit'\n      },\n      '& > .fuse-list-item-icon': {\n        color: 'inherit'\n      }\n    },\n    '& >.fuse-list-item-icon': {\n      marginRight: 12,\n      color: 'inherit'\n    },\n    '& > .fuse-list-item-text': {}\n  };\n});\n\nfunction FuseNavVerticalItem(props) {\n  const dispatch = useDispatch();\n  const {\n    item,\n    nestedLevel,\n    onItemClick\n  } = props;\n  const itempadding = nestedLevel > 0 ? 28 + nestedLevel * 16 : 12;\n  return useMemo(() => /*#__PURE__*/_jsxDEV(Root, {\n    button: true,\n    component: NavLinkAdapter,\n    to: item.url,\n    activeClassName: \"active\",\n    className: \"fuse-list-item\",\n    onClick: () => onItemClick && onItemClick(item),\n    exact: item.exact,\n    itempadding: itempadding,\n    role: \"button\",\n    children: [item.icon && /*#__PURE__*/_jsxDEV(Icon, {\n      className: clsx('fuse-list-item-icon text-20 flex-shrink-0', item.iconClass),\n      color: \"action\",\n      children: item.icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      className: \"fuse-list-item-text\",\n      primary: item.title,\n      classes: {\n        primary: 'text-13 font-medium fuse-list-item-text-primary'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), item.badge && /*#__PURE__*/_jsxDEV(FuseNavBadge, {\n      badge: item.badge\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this), [item, itempadding, onItemClick]);\n}\n\nFuseNavVerticalItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    icon: PropTypes.string,\n    url: PropTypes.string\n  })\n};\nFuseNavVerticalItem.defaultProps = {};\nconst NavVerticalItem = FuseNavVerticalItem;\nexport default NavVerticalItem;","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/@fuse/core/FuseNavigation/vertical/types/FuseNavVerticalItem.js"],"names":["NavLinkAdapter","styled","alpha","Icon","ListItem","ListItemText","clsx","PropTypes","useMemo","useDispatch","FuseNavBadge","Root","theme","props","height","width","borderRadius","margin","paddingRight","paddingLeft","itempadding","color","palette","text","primary","cursor","textDecoration","backgroundColor","mode","pointerEvents","transition","marginRight","FuseNavVerticalItem","dispatch","item","nestedLevel","onItemClick","url","exact","icon","iconClass","title","badge","propTypes","shape","id","string","isRequired","defaultProps","NavVerticalItem"],"mappings":"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","sourcesContent":["import NavLinkAdapter from '@fuse/core/NavLinkAdapter';\nimport { styled, alpha } from '@mui/material/styles';\nimport Icon from '@mui/material/Icon';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport FuseNavBadge from '../../FuseNavBadge';\n\nconst Root = styled(ListItem)(({ theme, ...props }) => ({\n  height: 40,\n  width: '100%',\n  borderRadius: '6px',\n  margin: '0 0 4px 0',\n  paddingRight: 12,\n  paddingLeft: props.itempadding,\n  color: alpha(theme.palette.text.primary, 0.7),\n  cursor: 'pointer',\n  textDecoration: 'none!important',\n  '&:hover': {\n    color: theme.palette.text.primary,\n  },\n  '&.active': {\n    color: theme.palette.text.primary,\n    backgroundColor:\n      theme.palette.mode === 'light'\n        ? 'rgba(0, 0, 0, .05)!important'\n        : 'rgba(255, 255, 255, .1)!important',\n    pointerEvents: 'none',\n    transition: 'border-radius .15s cubic-bezier(0.4,0.0,0.2,1)',\n    '& > .fuse-list-item-text-primary': {\n      color: 'inherit',\n    },\n    '& > .fuse-list-item-icon': {\n      color: 'inherit',\n    },\n  },\n  '& >.fuse-list-item-icon': {\n    marginRight: 12,\n    color: 'inherit',\n  },\n  '& > .fuse-list-item-text': {},\n}));\n\nfunction FuseNavVerticalItem(props) {\n  const dispatch = useDispatch();\n  const { item, nestedLevel, onItemClick } = props;\n\n  const itempadding = nestedLevel > 0 ? 28 + nestedLevel * 16 : 12;\n\n  return useMemo(\n    () => (\n      <Root\n        button\n        component={NavLinkAdapter}\n        to={item.url}\n        activeClassName=\"active\"\n        className=\"fuse-list-item\"\n        onClick={() => onItemClick && onItemClick(item)}\n        exact={item.exact}\n        itempadding={itempadding}\n        role=\"button\"\n      >\n        {item.icon && (\n          <Icon\n            className={clsx('fuse-list-item-icon text-20 flex-shrink-0', item.iconClass)}\n            color=\"action\"\n          >\n            {item.icon}\n          </Icon>\n        )}\n\n        <ListItemText\n          className=\"fuse-list-item-text\"\n          primary={item.title}\n          classes={{ primary: 'text-13 font-medium fuse-list-item-text-primary' }}\n        />\n        {item.badge && <FuseNavBadge badge={item.badge} />}\n      </Root>\n    ),\n    [item, itempadding, onItemClick]\n  );\n}\n\nFuseNavVerticalItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    icon: PropTypes.string,\n    url: PropTypes.string,\n  }),\n};\n\nFuseNavVerticalItem.defaultProps = {};\n\nconst NavVerticalItem = FuseNavVerticalItem;\n\nexport default NavVerticalItem;\n"]},"metadata":{},"sourceType":"module"}