{"ast":null,"code":"import _ from '@lodash';\nimport { useCallback, useState } from 'react';\n\nfunction useForm(initialState, onSubmit) {\n  const [form, setForm] = useState(initialState);\n  const handleChange = useCallback(event => {\n    event.persist();\n    setForm(_form => _.setIn({ ..._form\n    }, event.target.name, event.target.type === 'checkbox' ? event.target.checked : event.target.value));\n  }, []);\n  const resetForm = useCallback(() => {\n    if (!_.isEqual(initialState, form)) {\n      setForm(initialState);\n    }\n  }, [form, initialState]);\n  const setInForm = useCallback((name, value) => {\n    setForm(_form => _.setIn(_form, name, value));\n  }, []);\n  const handleSubmit = useCallback(event => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (onSubmit) {\n      onSubmit();\n    }\n  }, [onSubmit]);\n  return {\n    form,\n    handleChange,\n    handleSubmit,\n    resetForm,\n    setForm,\n    setInForm\n  };\n}\n\nexport default useForm;","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/@fuse/hooks/useForm.js"],"names":["_","useCallback","useState","useForm","initialState","onSubmit","form","setForm","handleChange","event","persist","_form","setIn","target","name","type","checked","value","resetForm","isEqual","setInForm","handleSubmit","preventDefault"],"mappings":"AAAA,OAAOA,CAAP,MAAc,SAAd;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;;AAEA,SAASC,OAAT,CAAiBC,YAAjB,EAA+BC,QAA/B,EAAyC;AACvC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAACE,YAAD,CAAhC;AAEA,QAAMI,YAAY,GAAGP,WAAW,CAAEQ,KAAD,IAAW;AAC1CA,IAAAA,KAAK,CAACC,OAAN;AACAH,IAAAA,OAAO,CAAEI,KAAD,IACNX,CAAC,CAACY,KAAF,CACE,EAAE,GAAGD;AAAL,KADF,EAEEF,KAAK,CAACI,MAAN,CAAaC,IAFf,EAGEL,KAAK,CAACI,MAAN,CAAaE,IAAb,KAAsB,UAAtB,GAAmCN,KAAK,CAACI,MAAN,CAAaG,OAAhD,GAA0DP,KAAK,CAACI,MAAN,CAAaI,KAHzE,CADK,CAAP;AAOD,GAT+B,EAS7B,EAT6B,CAAhC;AAWA,QAAMC,SAAS,GAAGjB,WAAW,CAAC,MAAM;AAClC,QAAI,CAACD,CAAC,CAACmB,OAAF,CAAUf,YAAV,EAAwBE,IAAxB,CAAL,EAAoC;AAClCC,MAAAA,OAAO,CAACH,YAAD,CAAP;AACD;AACF,GAJ4B,EAI1B,CAACE,IAAD,EAAOF,YAAP,CAJ0B,CAA7B;AAMA,QAAMgB,SAAS,GAAGnB,WAAW,CAAC,CAACa,IAAD,EAAOG,KAAP,KAAiB;AAC7CV,IAAAA,OAAO,CAAEI,KAAD,IAAWX,CAAC,CAACY,KAAF,CAAQD,KAAR,EAAeG,IAAf,EAAqBG,KAArB,CAAZ,CAAP;AACD,GAF4B,EAE1B,EAF0B,CAA7B;AAIA,QAAMI,YAAY,GAAGpB,WAAW,CAC7BQ,KAAD,IAAW;AACT,QAAIA,KAAJ,EAAW;AACTA,MAAAA,KAAK,CAACa,cAAN;AACD;;AACD,QAAIjB,QAAJ,EAAc;AACZA,MAAAA,QAAQ;AACT;AACF,GAR6B,EAS9B,CAACA,QAAD,CAT8B,CAAhC;AAYA,SAAO;AACLC,IAAAA,IADK;AAELE,IAAAA,YAFK;AAGLa,IAAAA,YAHK;AAILH,IAAAA,SAJK;AAKLX,IAAAA,OALK;AAMLa,IAAAA;AANK,GAAP;AAQD;;AAED,eAAejB,OAAf","sourcesContent":["import _ from '@lodash';\nimport { useCallback, useState } from 'react';\n\nfunction useForm(initialState, onSubmit) {\n  const [form, setForm] = useState(initialState);\n\n  const handleChange = useCallback((event) => {\n    event.persist();\n    setForm((_form) =>\n      _.setIn(\n        { ..._form },\n        event.target.name,\n        event.target.type === 'checkbox' ? event.target.checked : event.target.value\n      )\n    );\n  }, []);\n\n  const resetForm = useCallback(() => {\n    if (!_.isEqual(initialState, form)) {\n      setForm(initialState);\n    }\n  }, [form, initialState]);\n\n  const setInForm = useCallback((name, value) => {\n    setForm((_form) => _.setIn(_form, name, value));\n  }, []);\n\n  const handleSubmit = useCallback(\n    (event) => {\n      if (event) {\n        event.preventDefault();\n      }\n      if (onSubmit) {\n        onSubmit();\n      }\n    },\n    [onSubmit]\n  );\n\n  return {\n    form,\n    handleChange,\n    handleSubmit,\n    resetForm,\n    setForm,\n    setInForm,\n  };\n}\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}