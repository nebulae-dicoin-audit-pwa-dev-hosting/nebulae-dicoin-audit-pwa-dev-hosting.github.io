{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar PropTypes = require(\"prop-types\");\n\nvar classnames_1 = require(\"classnames\");\n\nvar compute_lines_1 = require(\"./compute-lines\");\n\nexports.DiffMethod = compute_lines_1.DiffMethod;\n\nvar styles_1 = require(\"./styles\"); // eslint-disable-next-line @typescript-eslint/no-var-requires\n\n\nvar m = require('memoize-one');\n\nvar memoize = m.default || m;\nvar LineNumberPrefix;\n\n(function (LineNumberPrefix) {\n  LineNumberPrefix[\"LEFT\"] = \"L\";\n  LineNumberPrefix[\"RIGHT\"] = \"R\";\n})(LineNumberPrefix = exports.LineNumberPrefix || (exports.LineNumberPrefix = {}));\n\nvar DiffViewer =\n/** @class */\nfunction (_super) {\n  __extends(DiffViewer, _super);\n\n  function DiffViewer(props) {\n    var _this = _super.call(this, props) || this;\n    /**\n     * Resets code block expand to the initial stage. Will be exposed to the parent component via\n     * refs.\n     */\n\n\n    _this.resetCodeBlocks = function () {\n      if (_this.state.expandedBlocks.length > 0) {\n        _this.setState({\n          expandedBlocks: []\n        });\n\n        return true;\n      }\n\n      return false;\n    };\n    /**\n     * Pushes the target expanded code block to the state. During the re-render,\n     * this value is used to expand/fold unmodified code.\n     */\n\n\n    _this.onBlockExpand = function (id) {\n      var prevState = _this.state.expandedBlocks.slice();\n\n      prevState.push(id);\n\n      _this.setState({\n        expandedBlocks: prevState\n      });\n    };\n    /**\n     * Computes final styles for the diff viewer. It combines the default styles with the user\n     * supplied overrides. The computed styles are cached with performance in mind.\n     *\n     * @param styles User supplied style overrides.\n     */\n\n\n    _this.computeStyles = memoize(styles_1.default);\n    /**\n     * Returns a function with clicked line number in the closure. Returns an no-op function when no\n     * onLineNumberClick handler is supplied.\n     *\n     * @param id Line id of a line.\n     */\n\n    _this.onLineNumberClickProxy = function (id) {\n      if (_this.props.onLineNumberClick) {\n        return function (e) {\n          return _this.props.onLineNumberClick(id, e);\n        };\n      }\n\n      return function () {};\n    };\n    /**\n     * Maps over the word diff and constructs the required React elements to show word diff.\n     *\n     * @param diffArray Word diff information derived from line information.\n     * @param renderer Optional renderer to format diff words. Useful for syntax highlighting.\n     */\n\n\n    _this.renderWordDiff = function (diffArray, renderer) {\n      return diffArray.map(function (wordDiff, i) {\n        var _a;\n\n        return React.createElement(\"span\", {\n          key: i,\n          className: classnames_1.default(_this.styles.wordDiff, (_a = {}, _a[_this.styles.wordAdded] = wordDiff.type === compute_lines_1.DiffType.ADDED, _a[_this.styles.wordRemoved] = wordDiff.type === compute_lines_1.DiffType.REMOVED, _a))\n        }, renderer ? renderer(wordDiff.value) : wordDiff.value);\n      });\n    };\n    /**\n     * Maps over the line diff and constructs the required react elements to show line diff. It calls\n     * renderWordDiff when encountering word diff. This takes care of both inline and split view line\n     * renders.\n     *\n     * @param lineNumber Line number of the current line.\n     * @param type Type of diff of the current line.\n     * @param prefix Unique id to prefix with the line numbers.\n     * @param value Content of the line. It can be a string or a word diff array.\n     * @param additionalLineNumber Additional line number to be shown. Useful for rendering inline\n     *  diff view. Right line number will be passed as additionalLineNumber.\n     * @param additionalPrefix Similar to prefix but for additional line number.\n     */\n\n\n    _this.renderLine = function (lineNumber, type, prefix, value, additionalLineNumber, additionalPrefix) {\n      var _a, _b, _c, _d;\n\n      var lineNumberTemplate = prefix + \"-\" + lineNumber;\n      var additionalLineNumberTemplate = additionalPrefix + \"-\" + additionalLineNumber;\n\n      var highlightLine = _this.props.highlightLines.includes(lineNumberTemplate) || _this.props.highlightLines.includes(additionalLineNumberTemplate);\n\n      var added = type === compute_lines_1.DiffType.ADDED;\n      var removed = type === compute_lines_1.DiffType.REMOVED;\n      var content;\n\n      if (Array.isArray(value)) {\n        content = _this.renderWordDiff(value, _this.props.renderContent);\n      } else if (_this.props.renderContent) {\n        content = _this.props.renderContent(value);\n      } else {\n        content = value;\n      }\n\n      return React.createElement(React.Fragment, null, !_this.props.hideLineNumbers && React.createElement(\"td\", {\n        onClick: lineNumber && _this.onLineNumberClickProxy(lineNumberTemplate),\n        className: classnames_1.default(_this.styles.gutter, (_a = {}, _a[_this.styles.emptyGutter] = !lineNumber, _a[_this.styles.diffAdded] = added, _a[_this.styles.diffRemoved] = removed, _a[_this.styles.highlightedGutter] = highlightLine, _a))\n      }, React.createElement(\"pre\", {\n        className: _this.styles.lineNumber\n      }, lineNumber)), !_this.props.splitView && !_this.props.hideLineNumbers && React.createElement(\"td\", {\n        onClick: additionalLineNumber && _this.onLineNumberClickProxy(additionalLineNumberTemplate),\n        className: classnames_1.default(_this.styles.gutter, (_b = {}, _b[_this.styles.emptyGutter] = !additionalLineNumber, _b[_this.styles.diffAdded] = added, _b[_this.styles.diffRemoved] = removed, _b[_this.styles.highlightedGutter] = highlightLine, _b))\n      }, React.createElement(\"pre\", {\n        className: _this.styles.lineNumber\n      }, additionalLineNumber)), React.createElement(\"td\", {\n        className: classnames_1.default(_this.styles.marker, (_c = {}, _c[_this.styles.emptyLine] = !content, _c[_this.styles.diffAdded] = added, _c[_this.styles.diffRemoved] = removed, _c[_this.styles.highlightedLine] = highlightLine, _c))\n      }, React.createElement(\"pre\", null, added && '+', removed && '-')), React.createElement(\"td\", {\n        className: classnames_1.default(_this.styles.content, (_d = {}, _d[_this.styles.emptyLine] = !content, _d[_this.styles.diffAdded] = added, _d[_this.styles.diffRemoved] = removed, _d[_this.styles.highlightedLine] = highlightLine, _d))\n      }, React.createElement(\"pre\", {\n        className: _this.styles.contentText\n      }, content)));\n    };\n    /**\n     * Generates lines for split view.\n     *\n     * @param obj Line diff information.\n     * @param obj.left Life diff information for the left pane of the split view.\n     * @param obj.right Life diff information for the right pane of the split view.\n     * @param index React key for the lines.\n     */\n\n\n    _this.renderSplitView = function (_a, index) {\n      var left = _a.left,\n          right = _a.right;\n      return React.createElement(\"tr\", {\n        key: index,\n        className: _this.styles.line\n      }, _this.renderLine(left.lineNumber, left.type, LineNumberPrefix.LEFT, left.value), _this.renderLine(right.lineNumber, right.type, LineNumberPrefix.RIGHT, right.value));\n    };\n    /**\n     * Generates lines for inline view.\n     *\n     * @param obj Line diff information.\n     * @param obj.left Life diff information for the added section of the inline view.\n     * @param obj.right Life diff information for the removed section of the inline view.\n     * @param index React key for the lines.\n     */\n\n\n    _this.renderInlineView = function (_a, index) {\n      var left = _a.left,\n          right = _a.right;\n      var content;\n\n      if (left.type === compute_lines_1.DiffType.REMOVED && right.type === compute_lines_1.DiffType.ADDED) {\n        return React.createElement(React.Fragment, {\n          key: index\n        }, React.createElement(\"tr\", {\n          className: _this.styles.line\n        }, _this.renderLine(left.lineNumber, left.type, LineNumberPrefix.LEFT, left.value, null)), React.createElement(\"tr\", {\n          className: _this.styles.line\n        }, _this.renderLine(null, right.type, LineNumberPrefix.RIGHT, right.value, right.lineNumber)));\n      }\n\n      if (left.type === compute_lines_1.DiffType.REMOVED) {\n        content = _this.renderLine(left.lineNumber, left.type, LineNumberPrefix.LEFT, left.value, null);\n      }\n\n      if (left.type === compute_lines_1.DiffType.DEFAULT) {\n        content = _this.renderLine(left.lineNumber, left.type, LineNumberPrefix.LEFT, left.value, right.lineNumber, LineNumberPrefix.RIGHT);\n      }\n\n      if (right.type === compute_lines_1.DiffType.ADDED) {\n        content = _this.renderLine(null, right.type, LineNumberPrefix.RIGHT, right.value, right.lineNumber);\n      }\n\n      return React.createElement(\"tr\", {\n        key: index,\n        className: _this.styles.line\n      }, content);\n    };\n    /**\n     * Returns a function with clicked block number in the closure.\n     *\n     * @param id Cold fold block id.\n     */\n\n\n    _this.onBlockClickProxy = function (id) {\n      return function () {\n        return _this.onBlockExpand(id);\n      };\n    };\n    /**\n     * Generates cold fold block. It also uses the custom message renderer when available to show\n     * cold fold messages.\n     *\n     * @param num Number of skipped lines between two blocks.\n     * @param blockNumber Code fold block id.\n     * @param leftBlockLineNumber First left line number after the current code fold block.\n     * @param rightBlockLineNumber First right line number after the current code fold block.\n     */\n\n\n    _this.renderSkippedLineIndicator = function (num, blockNumber, leftBlockLineNumber, rightBlockLineNumber) {\n      var _a;\n\n      var _b = _this.props,\n          hideLineNumbers = _b.hideLineNumbers,\n          splitView = _b.splitView;\n      var message = _this.props.codeFoldMessageRenderer ? _this.props.codeFoldMessageRenderer(num, leftBlockLineNumber, rightBlockLineNumber) : React.createElement(\"pre\", {\n        className: _this.styles.codeFoldContent\n      }, \"Expand \", num, \" lines ...\");\n      var content = React.createElement(\"td\", null, React.createElement(\"a\", {\n        onClick: _this.onBlockClickProxy(blockNumber),\n        tabIndex: 0\n      }, message));\n      var isUnifiedViewWithoutLineNumbers = !splitView && !hideLineNumbers;\n      return React.createElement(\"tr\", {\n        key: leftBlockLineNumber + \"-\" + rightBlockLineNumber,\n        className: _this.styles.codeFold\n      }, !hideLineNumbers && React.createElement(\"td\", {\n        className: _this.styles.codeFoldGutter\n      }), React.createElement(\"td\", {\n        className: classnames_1.default((_a = {}, _a[_this.styles.codeFoldGutter] = isUnifiedViewWithoutLineNumbers, _a))\n      }), isUnifiedViewWithoutLineNumbers ? React.createElement(React.Fragment, null, React.createElement(\"td\", null), content) : React.createElement(React.Fragment, null, content, React.createElement(\"td\", null)), React.createElement(\"td\", null), React.createElement(\"td\", null));\n    };\n    /**\n     * Generates the entire diff view.\n     */\n\n\n    _this.renderDiff = function () {\n      var _a = _this.props,\n          oldValue = _a.oldValue,\n          newValue = _a.newValue,\n          splitView = _a.splitView,\n          disableWordDiff = _a.disableWordDiff,\n          compareMethod = _a.compareMethod,\n          linesOffset = _a.linesOffset;\n\n      var _b = compute_lines_1.computeLineInformation(oldValue, newValue, disableWordDiff, compareMethod, linesOffset),\n          lineInformation = _b.lineInformation,\n          diffLines = _b.diffLines;\n\n      var extraLines = _this.props.extraLinesSurroundingDiff < 0 ? 0 : _this.props.extraLinesSurroundingDiff;\n      var skippedLines = [];\n      return lineInformation.map(function (line, i) {\n        var diffBlockStart = diffLines[0];\n        var currentPosition = diffBlockStart - i;\n\n        if (_this.props.showDiffOnly) {\n          if (currentPosition === -extraLines) {\n            skippedLines = [];\n            diffLines.shift();\n          }\n\n          if (line.left.type === compute_lines_1.DiffType.DEFAULT && (currentPosition > extraLines || typeof diffBlockStart === 'undefined') && !_this.state.expandedBlocks.includes(diffBlockStart)) {\n            skippedLines.push(i + 1);\n\n            if (i === lineInformation.length - 1 && skippedLines.length > 1) {\n              return _this.renderSkippedLineIndicator(skippedLines.length, diffBlockStart, line.left.lineNumber, line.right.lineNumber);\n            }\n\n            return null;\n          }\n        }\n\n        var diffNodes = splitView ? _this.renderSplitView(line, i) : _this.renderInlineView(line, i);\n\n        if (currentPosition === extraLines && skippedLines.length > 0) {\n          var length_1 = skippedLines.length;\n          skippedLines = [];\n          return React.createElement(React.Fragment, {\n            key: i\n          }, _this.renderSkippedLineIndicator(length_1, diffBlockStart, line.left.lineNumber, line.right.lineNumber), diffNodes);\n        }\n\n        return diffNodes;\n      });\n    };\n\n    _this.render = function () {\n      var _a;\n\n      var _b = _this.props,\n          oldValue = _b.oldValue,\n          newValue = _b.newValue,\n          useDarkTheme = _b.useDarkTheme,\n          leftTitle = _b.leftTitle,\n          rightTitle = _b.rightTitle,\n          splitView = _b.splitView,\n          hideLineNumbers = _b.hideLineNumbers;\n\n      if (typeof oldValue !== 'string' || typeof newValue !== 'string') {\n        throw Error('\"oldValue\" and \"newValue\" should be strings');\n      }\n\n      _this.styles = _this.computeStyles(_this.props.styles, useDarkTheme);\n\n      var nodes = _this.renderDiff();\n\n      var colSpanOnSplitView = hideLineNumbers ? 2 : 3;\n      var colSpanOnInlineView = hideLineNumbers ? 2 : 4;\n      var title = (leftTitle || rightTitle) && React.createElement(\"tr\", null, React.createElement(\"td\", {\n        colSpan: splitView ? colSpanOnSplitView : colSpanOnInlineView,\n        className: _this.styles.titleBlock\n      }, React.createElement(\"pre\", {\n        className: _this.styles.contentText\n      }, leftTitle)), splitView && React.createElement(\"td\", {\n        colSpan: colSpanOnSplitView,\n        className: _this.styles.titleBlock\n      }, React.createElement(\"pre\", {\n        className: _this.styles.contentText\n      }, rightTitle)));\n      return React.createElement(\"table\", {\n        className: classnames_1.default(_this.styles.diffContainer, (_a = {}, _a[_this.styles.splitView] = splitView, _a))\n      }, React.createElement(\"tbody\", null, title, nodes));\n    };\n\n    _this.state = {\n      expandedBlocks: []\n    };\n    return _this;\n  }\n\n  DiffViewer.defaultProps = {\n    oldValue: '',\n    newValue: '',\n    splitView: true,\n    highlightLines: [],\n    disableWordDiff: false,\n    compareMethod: compute_lines_1.DiffMethod.CHARS,\n    styles: {},\n    hideLineNumbers: false,\n    extraLinesSurroundingDiff: 3,\n    showDiffOnly: true,\n    useDarkTheme: false,\n    linesOffset: 0\n  };\n  DiffViewer.propTypes = {\n    oldValue: PropTypes.string.isRequired,\n    newValue: PropTypes.string.isRequired,\n    splitView: PropTypes.bool,\n    disableWordDiff: PropTypes.bool,\n    compareMethod: PropTypes.oneOf(Object.values(compute_lines_1.DiffMethod)),\n    renderContent: PropTypes.func,\n    onLineNumberClick: PropTypes.func,\n    extraLinesSurroundingDiff: PropTypes.number,\n    styles: PropTypes.object,\n    hideLineNumbers: PropTypes.bool,\n    showDiffOnly: PropTypes.bool,\n    highlightLines: PropTypes.arrayOf(PropTypes.string),\n    leftTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    rightTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    linesOffset: PropTypes.number\n  };\n  return DiffViewer;\n}(React.Component);\n\nexports.default = DiffViewer;","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/node_modules/react-diff-viewer/lib/index.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","React","require","PropTypes","classnames_1","compute_lines_1","DiffMethod","styles_1","m","memoize","default","LineNumberPrefix","DiffViewer","_super","props","_this","call","resetCodeBlocks","state","expandedBlocks","length","setState","onBlockExpand","id","prevState","slice","push","computeStyles","onLineNumberClickProxy","onLineNumberClick","e","renderWordDiff","diffArray","renderer","map","wordDiff","i","_a","createElement","key","className","styles","wordAdded","type","DiffType","ADDED","wordRemoved","REMOVED","renderLine","lineNumber","prefix","additionalLineNumber","additionalPrefix","_b","_c","_d","lineNumberTemplate","additionalLineNumberTemplate","highlightLine","highlightLines","includes","added","removed","content","isArray","renderContent","Fragment","hideLineNumbers","onClick","gutter","emptyGutter","diffAdded","diffRemoved","highlightedGutter","splitView","marker","emptyLine","highlightedLine","contentText","renderSplitView","index","left","right","line","LEFT","RIGHT","renderInlineView","DEFAULT","onBlockClickProxy","renderSkippedLineIndicator","num","blockNumber","leftBlockLineNumber","rightBlockLineNumber","message","codeFoldMessageRenderer","codeFoldContent","tabIndex","isUnifiedViewWithoutLineNumbers","codeFold","codeFoldGutter","renderDiff","oldValue","newValue","disableWordDiff","compareMethod","linesOffset","computeLineInformation","lineInformation","diffLines","extraLines","extraLinesSurroundingDiff","skippedLines","diffBlockStart","currentPosition","showDiffOnly","shift","diffNodes","length_1","render","useDarkTheme","leftTitle","rightTitle","Error","nodes","colSpanOnSplitView","colSpanOnInlineView","title","colSpan","titleBlock","diffContainer","defaultProps","CHARS","propTypes","string","isRequired","bool","oneOf","values","func","number","object","arrayOf","oneOfType","element","Component"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar PropTypes = require(\"prop-types\");\nvar classnames_1 = require(\"classnames\");\nvar compute_lines_1 = require(\"./compute-lines\");\nexports.DiffMethod = compute_lines_1.DiffMethod;\nvar styles_1 = require(\"./styles\");\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nvar m = require('memoize-one');\nvar memoize = m.default || m;\nvar LineNumberPrefix;\n(function (LineNumberPrefix) {\n    LineNumberPrefix[\"LEFT\"] = \"L\";\n    LineNumberPrefix[\"RIGHT\"] = \"R\";\n})(LineNumberPrefix = exports.LineNumberPrefix || (exports.LineNumberPrefix = {}));\nvar DiffViewer = /** @class */ (function (_super) {\n    __extends(DiffViewer, _super);\n    function DiffViewer(props) {\n        var _this = _super.call(this, props) || this;\n        /**\n         * Resets code block expand to the initial stage. Will be exposed to the parent component via\n         * refs.\n         */\n        _this.resetCodeBlocks = function () {\n            if (_this.state.expandedBlocks.length > 0) {\n                _this.setState({\n                    expandedBlocks: [],\n                });\n                return true;\n            }\n            return false;\n        };\n        /**\n         * Pushes the target expanded code block to the state. During the re-render,\n         * this value is used to expand/fold unmodified code.\n         */\n        _this.onBlockExpand = function (id) {\n            var prevState = _this.state.expandedBlocks.slice();\n            prevState.push(id);\n            _this.setState({\n                expandedBlocks: prevState,\n            });\n        };\n        /**\n         * Computes final styles for the diff viewer. It combines the default styles with the user\n         * supplied overrides. The computed styles are cached with performance in mind.\n         *\n         * @param styles User supplied style overrides.\n         */\n        _this.computeStyles = memoize(styles_1.default);\n        /**\n         * Returns a function with clicked line number in the closure. Returns an no-op function when no\n         * onLineNumberClick handler is supplied.\n         *\n         * @param id Line id of a line.\n         */\n        _this.onLineNumberClickProxy = function (id) {\n            if (_this.props.onLineNumberClick) {\n                return function (e) { return _this.props.onLineNumberClick(id, e); };\n            }\n            return function () { };\n        };\n        /**\n         * Maps over the word diff and constructs the required React elements to show word diff.\n         *\n         * @param diffArray Word diff information derived from line information.\n         * @param renderer Optional renderer to format diff words. Useful for syntax highlighting.\n         */\n        _this.renderWordDiff = function (diffArray, renderer) {\n            return diffArray.map(function (wordDiff, i) {\n                var _a;\n                return (React.createElement(\"span\", { key: i, className: classnames_1.default(_this.styles.wordDiff, (_a = {},\n                        _a[_this.styles.wordAdded] = wordDiff.type === compute_lines_1.DiffType.ADDED,\n                        _a[_this.styles.wordRemoved] = wordDiff.type === compute_lines_1.DiffType.REMOVED,\n                        _a)) }, renderer ? renderer(wordDiff.value) : wordDiff.value));\n            });\n        };\n        /**\n         * Maps over the line diff and constructs the required react elements to show line diff. It calls\n         * renderWordDiff when encountering word diff. This takes care of both inline and split view line\n         * renders.\n         *\n         * @param lineNumber Line number of the current line.\n         * @param type Type of diff of the current line.\n         * @param prefix Unique id to prefix with the line numbers.\n         * @param value Content of the line. It can be a string or a word diff array.\n         * @param additionalLineNumber Additional line number to be shown. Useful for rendering inline\n         *  diff view. Right line number will be passed as additionalLineNumber.\n         * @param additionalPrefix Similar to prefix but for additional line number.\n         */\n        _this.renderLine = function (lineNumber, type, prefix, value, additionalLineNumber, additionalPrefix) {\n            var _a, _b, _c, _d;\n            var lineNumberTemplate = prefix + \"-\" + lineNumber;\n            var additionalLineNumberTemplate = additionalPrefix + \"-\" + additionalLineNumber;\n            var highlightLine = _this.props.highlightLines.includes(lineNumberTemplate) ||\n                _this.props.highlightLines.includes(additionalLineNumberTemplate);\n            var added = type === compute_lines_1.DiffType.ADDED;\n            var removed = type === compute_lines_1.DiffType.REMOVED;\n            var content;\n            if (Array.isArray(value)) {\n                content = _this.renderWordDiff(value, _this.props.renderContent);\n            }\n            else if (_this.props.renderContent) {\n                content = _this.props.renderContent(value);\n            }\n            else {\n                content = value;\n            }\n            return (React.createElement(React.Fragment, null,\n                !_this.props.hideLineNumbers && (React.createElement(\"td\", { onClick: lineNumber && _this.onLineNumberClickProxy(lineNumberTemplate), className: classnames_1.default(_this.styles.gutter, (_a = {},\n                        _a[_this.styles.emptyGutter] = !lineNumber,\n                        _a[_this.styles.diffAdded] = added,\n                        _a[_this.styles.diffRemoved] = removed,\n                        _a[_this.styles.highlightedGutter] = highlightLine,\n                        _a)) },\n                    React.createElement(\"pre\", { className: _this.styles.lineNumber }, lineNumber))),\n                !_this.props.splitView && !_this.props.hideLineNumbers && (React.createElement(\"td\", { onClick: additionalLineNumber &&\n                        _this.onLineNumberClickProxy(additionalLineNumberTemplate), className: classnames_1.default(_this.styles.gutter, (_b = {},\n                        _b[_this.styles.emptyGutter] = !additionalLineNumber,\n                        _b[_this.styles.diffAdded] = added,\n                        _b[_this.styles.diffRemoved] = removed,\n                        _b[_this.styles.highlightedGutter] = highlightLine,\n                        _b)) },\n                    React.createElement(\"pre\", { className: _this.styles.lineNumber }, additionalLineNumber))),\n                React.createElement(\"td\", { className: classnames_1.default(_this.styles.marker, (_c = {},\n                        _c[_this.styles.emptyLine] = !content,\n                        _c[_this.styles.diffAdded] = added,\n                        _c[_this.styles.diffRemoved] = removed,\n                        _c[_this.styles.highlightedLine] = highlightLine,\n                        _c)) },\n                    React.createElement(\"pre\", null,\n                        added && '+',\n                        removed && '-')),\n                React.createElement(\"td\", { className: classnames_1.default(_this.styles.content, (_d = {},\n                        _d[_this.styles.emptyLine] = !content,\n                        _d[_this.styles.diffAdded] = added,\n                        _d[_this.styles.diffRemoved] = removed,\n                        _d[_this.styles.highlightedLine] = highlightLine,\n                        _d)) },\n                    React.createElement(\"pre\", { className: _this.styles.contentText }, content))));\n        };\n        /**\n         * Generates lines for split view.\n         *\n         * @param obj Line diff information.\n         * @param obj.left Life diff information for the left pane of the split view.\n         * @param obj.right Life diff information for the right pane of the split view.\n         * @param index React key for the lines.\n         */\n        _this.renderSplitView = function (_a, index) {\n            var left = _a.left, right = _a.right;\n            return (React.createElement(\"tr\", { key: index, className: _this.styles.line },\n                _this.renderLine(left.lineNumber, left.type, LineNumberPrefix.LEFT, left.value),\n                _this.renderLine(right.lineNumber, right.type, LineNumberPrefix.RIGHT, right.value)));\n        };\n        /**\n         * Generates lines for inline view.\n         *\n         * @param obj Line diff information.\n         * @param obj.left Life diff information for the added section of the inline view.\n         * @param obj.right Life diff information for the removed section of the inline view.\n         * @param index React key for the lines.\n         */\n        _this.renderInlineView = function (_a, index) {\n            var left = _a.left, right = _a.right;\n            var content;\n            if (left.type === compute_lines_1.DiffType.REMOVED && right.type === compute_lines_1.DiffType.ADDED) {\n                return (React.createElement(React.Fragment, { key: index },\n                    React.createElement(\"tr\", { className: _this.styles.line }, _this.renderLine(left.lineNumber, left.type, LineNumberPrefix.LEFT, left.value, null)),\n                    React.createElement(\"tr\", { className: _this.styles.line }, _this.renderLine(null, right.type, LineNumberPrefix.RIGHT, right.value, right.lineNumber))));\n            }\n            if (left.type === compute_lines_1.DiffType.REMOVED) {\n                content = _this.renderLine(left.lineNumber, left.type, LineNumberPrefix.LEFT, left.value, null);\n            }\n            if (left.type === compute_lines_1.DiffType.DEFAULT) {\n                content = _this.renderLine(left.lineNumber, left.type, LineNumberPrefix.LEFT, left.value, right.lineNumber, LineNumberPrefix.RIGHT);\n            }\n            if (right.type === compute_lines_1.DiffType.ADDED) {\n                content = _this.renderLine(null, right.type, LineNumberPrefix.RIGHT, right.value, right.lineNumber);\n            }\n            return (React.createElement(\"tr\", { key: index, className: _this.styles.line }, content));\n        };\n        /**\n         * Returns a function with clicked block number in the closure.\n         *\n         * @param id Cold fold block id.\n         */\n        _this.onBlockClickProxy = function (id) { return function () {\n            return _this.onBlockExpand(id);\n        }; };\n        /**\n         * Generates cold fold block. It also uses the custom message renderer when available to show\n         * cold fold messages.\n         *\n         * @param num Number of skipped lines between two blocks.\n         * @param blockNumber Code fold block id.\n         * @param leftBlockLineNumber First left line number after the current code fold block.\n         * @param rightBlockLineNumber First right line number after the current code fold block.\n         */\n        _this.renderSkippedLineIndicator = function (num, blockNumber, leftBlockLineNumber, rightBlockLineNumber) {\n            var _a;\n            var _b = _this.props, hideLineNumbers = _b.hideLineNumbers, splitView = _b.splitView;\n            var message = _this.props.codeFoldMessageRenderer ? (_this.props.codeFoldMessageRenderer(num, leftBlockLineNumber, rightBlockLineNumber)) : (React.createElement(\"pre\", { className: _this.styles.codeFoldContent },\n                \"Expand \",\n                num,\n                \" lines ...\"));\n            var content = (React.createElement(\"td\", null,\n                React.createElement(\"a\", { onClick: _this.onBlockClickProxy(blockNumber), tabIndex: 0 }, message)));\n            var isUnifiedViewWithoutLineNumbers = !splitView && !hideLineNumbers;\n            return (React.createElement(\"tr\", { key: leftBlockLineNumber + \"-\" + rightBlockLineNumber, className: _this.styles.codeFold },\n                !hideLineNumbers && React.createElement(\"td\", { className: _this.styles.codeFoldGutter }),\n                React.createElement(\"td\", { className: classnames_1.default((_a = {},\n                        _a[_this.styles.codeFoldGutter] = isUnifiedViewWithoutLineNumbers,\n                        _a)) }),\n                isUnifiedViewWithoutLineNumbers ? (React.createElement(React.Fragment, null,\n                    React.createElement(\"td\", null),\n                    content)) : (React.createElement(React.Fragment, null,\n                    content,\n                    React.createElement(\"td\", null))),\n                React.createElement(\"td\", null),\n                React.createElement(\"td\", null)));\n        };\n        /**\n         * Generates the entire diff view.\n         */\n        _this.renderDiff = function () {\n            var _a = _this.props, oldValue = _a.oldValue, newValue = _a.newValue, splitView = _a.splitView, disableWordDiff = _a.disableWordDiff, compareMethod = _a.compareMethod, linesOffset = _a.linesOffset;\n            var _b = compute_lines_1.computeLineInformation(oldValue, newValue, disableWordDiff, compareMethod, linesOffset), lineInformation = _b.lineInformation, diffLines = _b.diffLines;\n            var extraLines = _this.props.extraLinesSurroundingDiff < 0\n                ? 0\n                : _this.props.extraLinesSurroundingDiff;\n            var skippedLines = [];\n            return lineInformation.map(function (line, i) {\n                var diffBlockStart = diffLines[0];\n                var currentPosition = diffBlockStart - i;\n                if (_this.props.showDiffOnly) {\n                    if (currentPosition === -extraLines) {\n                        skippedLines = [];\n                        diffLines.shift();\n                    }\n                    if (line.left.type === compute_lines_1.DiffType.DEFAULT &&\n                        (currentPosition > extraLines ||\n                            typeof diffBlockStart === 'undefined') &&\n                        !_this.state.expandedBlocks.includes(diffBlockStart)) {\n                        skippedLines.push(i + 1);\n                        if (i === lineInformation.length - 1 && skippedLines.length > 1) {\n                            return _this.renderSkippedLineIndicator(skippedLines.length, diffBlockStart, line.left.lineNumber, line.right.lineNumber);\n                        }\n                        return null;\n                    }\n                }\n                var diffNodes = splitView\n                    ? _this.renderSplitView(line, i)\n                    : _this.renderInlineView(line, i);\n                if (currentPosition === extraLines && skippedLines.length > 0) {\n                    var length_1 = skippedLines.length;\n                    skippedLines = [];\n                    return (React.createElement(React.Fragment, { key: i },\n                        _this.renderSkippedLineIndicator(length_1, diffBlockStart, line.left.lineNumber, line.right.lineNumber),\n                        diffNodes));\n                }\n                return diffNodes;\n            });\n        };\n        _this.render = function () {\n            var _a;\n            var _b = _this.props, oldValue = _b.oldValue, newValue = _b.newValue, useDarkTheme = _b.useDarkTheme, leftTitle = _b.leftTitle, rightTitle = _b.rightTitle, splitView = _b.splitView, hideLineNumbers = _b.hideLineNumbers;\n            if (typeof oldValue !== 'string' || typeof newValue !== 'string') {\n                throw Error('\"oldValue\" and \"newValue\" should be strings');\n            }\n            _this.styles = _this.computeStyles(_this.props.styles, useDarkTheme);\n            var nodes = _this.renderDiff();\n            var colSpanOnSplitView = hideLineNumbers ? 2 : 3;\n            var colSpanOnInlineView = hideLineNumbers ? 2 : 4;\n            var title = (leftTitle || rightTitle) && (React.createElement(\"tr\", null,\n                React.createElement(\"td\", { colSpan: splitView ? colSpanOnSplitView : colSpanOnInlineView, className: _this.styles.titleBlock },\n                    React.createElement(\"pre\", { className: _this.styles.contentText }, leftTitle)),\n                splitView && (React.createElement(\"td\", { colSpan: colSpanOnSplitView, className: _this.styles.titleBlock },\n                    React.createElement(\"pre\", { className: _this.styles.contentText }, rightTitle)))));\n            return (React.createElement(\"table\", { className: classnames_1.default(_this.styles.diffContainer, (_a = {},\n                    _a[_this.styles.splitView] = splitView,\n                    _a)) },\n                React.createElement(\"tbody\", null,\n                    title,\n                    nodes)));\n        };\n        _this.state = {\n            expandedBlocks: [],\n        };\n        return _this;\n    }\n    DiffViewer.defaultProps = {\n        oldValue: '',\n        newValue: '',\n        splitView: true,\n        highlightLines: [],\n        disableWordDiff: false,\n        compareMethod: compute_lines_1.DiffMethod.CHARS,\n        styles: {},\n        hideLineNumbers: false,\n        extraLinesSurroundingDiff: 3,\n        showDiffOnly: true,\n        useDarkTheme: false,\n        linesOffset: 0,\n    };\n    DiffViewer.propTypes = {\n        oldValue: PropTypes.string.isRequired,\n        newValue: PropTypes.string.isRequired,\n        splitView: PropTypes.bool,\n        disableWordDiff: PropTypes.bool,\n        compareMethod: PropTypes.oneOf(Object.values(compute_lines_1.DiffMethod)),\n        renderContent: PropTypes.func,\n        onLineNumberClick: PropTypes.func,\n        extraLinesSurroundingDiff: PropTypes.number,\n        styles: PropTypes.object,\n        hideLineNumbers: PropTypes.bool,\n        showDiffOnly: PropTypes.bool,\n        highlightLines: PropTypes.arrayOf(PropTypes.string),\n        leftTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n        rightTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n        linesOffset: PropTypes.number,\n    };\n    return DiffViewer;\n}(React.Component));\nexports.default = DiffViewer;\n"]},"metadata":{},"sourceType":"script"}