{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/app/fuse-layouts/layout2/components/NavbarWrapperLayout2.js\";\nimport Hidden from '@mui/material/Hidden';\nimport { styled, ThemeProvider } from '@mui/material/styles';\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\nimport NavbarMobileLayout2 from 'app/fuse-layouts/layout2/components/NavbarMobileLayout2';\nimport NavbarToggleFab from 'app/fuse-layouts/shared-components/NavbarToggleFab';\nimport { navbarCloseMobile } from 'app/store/fuse/navbarSlice';\nimport { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectNavbarTheme } from 'app/store/fuse/settingsSlice';\nimport NavbarLayout2 from './NavbarLayout2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledSwipeableDrawer = styled(SwipeableDrawer)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    '& > .MuiDrawer-paper': {\n      height: '100%',\n      flexDirection: 'column',\n      flex: '1 1 auto',\n      width: 280,\n      minWidth: 280,\n      transition: theme.transitions.create(['width', 'min-width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.shorter\n      })\n    }\n  };\n});\n\nfunction NavbarWrapperLayout2(props) {\n  const dispatch = useDispatch();\n  const config = useSelector(_ref2 => {\n    let {\n      fuse\n    } = _ref2;\n    return fuse.settings.current.layout.config;\n  });\n  const navbarTheme = useSelector(selectNavbarTheme);\n  const navbar = useSelector(_ref3 => {\n    let {\n      fuse\n    } = _ref3;\n    return fuse.navbar;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: navbarTheme,\n      children: [/*#__PURE__*/_jsxDEV(Hidden, {\n        lgDown: true,\n        children: /*#__PURE__*/_jsxDEV(NavbarLayout2, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n        lgUp: true,\n        children: /*#__PURE__*/_jsxDEV(StyledSwipeableDrawer, {\n          anchor: \"left\",\n          variant: \"temporary\",\n          open: navbar.mobileOpen,\n          onClose: () => dispatch(navbarCloseMobile()),\n          onOpen: () => {},\n          disableSwipeToOpen: true,\n          ModalProps: {\n            keepMounted: true // Better open performance on mobile.\n\n          },\n          children: /*#__PURE__*/_jsxDEV(NavbarMobileLayout2, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), config.navbar.display && !config.toolbar.display && /*#__PURE__*/_jsxDEV(Hidden, {\n      lgUp: true,\n      children: /*#__PURE__*/_jsxDEV(NavbarToggleFab, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\nexport default /*#__PURE__*/memo(NavbarWrapperLayout2);","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/app/fuse-layouts/layout2/components/NavbarWrapperLayout2.js"],"names":["Hidden","styled","ThemeProvider","SwipeableDrawer","NavbarMobileLayout2","NavbarToggleFab","navbarCloseMobile","memo","useDispatch","useSelector","selectNavbarTheme","NavbarLayout2","StyledSwipeableDrawer","theme","height","flexDirection","flex","width","minWidth","transition","transitions","create","easing","sharp","duration","shorter","NavbarWrapperLayout2","props","dispatch","config","fuse","settings","current","layout","navbarTheme","navbar","mobileOpen","keepMounted","display","toolbar"],"mappings":"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","sourcesContent":["import Hidden from '@mui/material/Hidden';\nimport { styled, ThemeProvider } from '@mui/material/styles';\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\nimport NavbarMobileLayout2 from 'app/fuse-layouts/layout2/components/NavbarMobileLayout2';\nimport NavbarToggleFab from 'app/fuse-layouts/shared-components/NavbarToggleFab';\nimport { navbarCloseMobile } from 'app/store/fuse/navbarSlice';\nimport { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectNavbarTheme } from 'app/store/fuse/settingsSlice';\nimport NavbarLayout2 from './NavbarLayout2';\n\nconst StyledSwipeableDrawer = styled(SwipeableDrawer)(({ theme }) => ({\n  '& > .MuiDrawer-paper': {\n    height: '100%',\n    flexDirection: 'column',\n    flex: '1 1 auto',\n    width: 280,\n    minWidth: 280,\n    transition: theme.transitions.create(['width', 'min-width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.shorter,\n    }),\n  },\n}));\n\nfunction NavbarWrapperLayout2(props) {\n  const dispatch = useDispatch();\n  const config = useSelector(({ fuse }) => fuse.settings.current.layout.config);\n  const navbarTheme = useSelector(selectNavbarTheme);\n  const navbar = useSelector(({ fuse }) => fuse.navbar);\n\n  return (\n    <>\n      <ThemeProvider theme={navbarTheme}>\n        <Hidden lgDown>\n          <NavbarLayout2 />\n        </Hidden>\n\n        <Hidden lgUp>\n          <StyledSwipeableDrawer\n            anchor=\"left\"\n            variant=\"temporary\"\n            open={navbar.mobileOpen}\n            onClose={() => dispatch(navbarCloseMobile())}\n            onOpen={() => {}}\n            disableSwipeToOpen\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            <NavbarMobileLayout2 />\n          </StyledSwipeableDrawer>\n        </Hidden>\n      </ThemeProvider>\n      {config.navbar.display && !config.toolbar.display && (\n        <Hidden lgUp>\n          <NavbarToggleFab />\n        </Hidden>\n      )}\n    </>\n  );\n}\n\nexport default memo(NavbarWrapperLayout2);\n"]},"metadata":{},"sourceType":"module"}