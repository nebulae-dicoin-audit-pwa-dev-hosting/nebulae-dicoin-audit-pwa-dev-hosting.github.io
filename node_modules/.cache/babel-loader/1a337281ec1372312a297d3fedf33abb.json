{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/app/main/analysis/analysis/mapLog/Map.js\";\n\n/* REACT CORE */\nimport React, { useState, useEffect } from 'react';\n/* UI CORE - MATERIAL-UI */\n\n/* MAP UI core */\n\nimport GoogleMap from 'google-map-react';\n/* @FUSE COMPONENTS */\n\nimport { mapOptions } from './mapOptions';\nimport Marker from './Marker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Map(props) {\n  const {\n    pathAppFile,\n    pathAuthorityFile,\n    setMapChangedTimestamp,\n    authorityAppFileContent,\n    mappedTable\n  } = props;\n  const [appFilePolyline, setAppFilePolyline] = useState();\n  const [authorityFilePolyline, setAthorityFilePolyline] = useState();\n  const [authEvents, setAuthEvents] = useState([]);\n\n  const apiIsLoaded = (map, maps) => {\n    const appFilePolylineMap = new maps.Polyline({\n      path: pathAppFile,\n      geodesic: false,\n      strokeColor: '#7B2AD7',\n      strokeOpacity: 1,\n      strokeWeight: 3\n    });\n    const authorityPolyline = new maps.Polyline({\n      path: pathAuthorityFile,\n      geodesic: false,\n      strokeColor: '#2d7fe2',\n      strokeOpacity: 1,\n      strokeWeight: 3\n    });\n    appFilePolylineMap.setMap(map);\n    setAppFilePolyline(appFilePolylineMap);\n    authorityPolyline.setMap(map);\n    setAthorityFilePolyline(authorityPolyline);\n  };\n\n  useEffect(() => {\n    setMapChangedTimestamp(Date.now());\n  }, [appFilePolyline, authorityFilePolyline]);\n  useEffect(() => {\n    const currentAuthContent = [];\n\n    if (authorityAppFileContent) {\n      for (const authRow of authorityAppFileContent) {\n        for (const event of authRow.eventos) {\n          const formattedEvent = formatEventData(event);\n          currentAuthContent.push(formattedEvent);\n        }\n      }\n    }\n\n    currentAuthContent.sort((a, b) => b.timestamp - a.timestamp);\n    console.log('currentAuthContent', authorityAppFileContent);\n    setAuthEvents(currentAuthContent);\n  }, [authorityAppFileContent]);\n\n  const formatEventData = event => {\n    const eventFormatted = {};\n    const year = event.fecha.slice(0, 4);\n    const month = event.fecha.slice(4, 6);\n    const day = event.fecha.slice(6, 8);\n    const hour = event.hora.slice(0, 2);\n    const minute = event.hora.slice(2, 4);\n    const second = event.hora.slice(4, 6);\n    const timestamp = new Date(`${year}-${month}-${day}T${hour}:${minute}:${second}-05:00`).getTime();\n    const backDoor = event.puerta.find(_ref => {\n      let {\n        idPuerta\n      } = _ref;\n      return idPuerta === 1;\n    });\n    const frontDoor = event.puerta.find(_ref2 => {\n      let {\n        idPuerta\n      } = _ref2;\n      return idPuerta === 0;\n    });\n    eventFormatted.backDoor = backDoor;\n    eventFormatted.frontDoor = frontDoor;\n    eventFormatted.timestamp = timestamp;\n    eventFormatted.dop = parseFloat(event.dop.replace(',', '.'));\n    eventFormatted.longitude = parseFloat(event.longitud.replace(',', '.'));\n    eventFormatted.latitude = parseFloat(event.latitud.replace(',', '.'));\n    return eventFormatted;\n  };\n\n  const getRecordToDraw = (event, index, events) => {\n    const prevRecord = events[index - 1] || {};\n    const {\n      frontDoor: prevFrontDoor = {},\n      backDoor: prevBackDoor = {}\n    } = prevRecord;\n    const {\n      frontDoor,\n      backDoor\n    } = event;\n    const hasPassengerFlow = (frontDoor.ingresos || 0) !== 0 || (frontDoor.salidas || 0) !== 0 || (backDoor.ingresos || 0) !== 0 || (backDoor.salidas || 0) !== 0;\n    const hasDoorChange = prevRecord ? prevFrontDoor.estado !== frontDoor.estado || prevBackDoor.estado !== backDoor.estado : false;\n    return hasPassengerFlow || hasDoorChange;\n  };\n\n  const buildMarker = (type, eventData, index) => {\n    const {\n      frontDoor,\n      backDoor,\n      latitude,\n      longitude,\n      timestamp\n    } = eventData;\n    const {\n      ingresos: frontDoorInput,\n      salidas: frontDoorOutput,\n      estado: frontDoorOpen\n    } = frontDoor;\n    const {\n      ingresos: backDoorInput,\n      salidas: backDoorOutput,\n      estado: backDoorOpen\n    } = backDoor;\n    const contentText = `${type}: ${!frontDoorOpen ? 'DA' : 'DC'}+${frontDoorInput}-${frontDoorOutput}, ${!backDoorOpen ? 'TA' : 'TC'}+${backDoorInput}-${backDoorOutput}`;\n    return /*#__PURE__*/_jsxDEV(Marker, {\n      lat: latitude,\n      lng: longitude,\n      type,\n      text: contentText\n    }, `${index}-${type}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"listing_parent\",\n    className: \"w-full h-full\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      bootstrapURLKeys: {\n        key: process.env.REACT_APP_MAP_KEY\n      },\n      options: mapOptions,\n      defaultZoom: 12,\n      defaultCenter: [6.236118, -75.580598],\n      yesIWantToUseGoogleMapApiInternals: true,\n      onGoogleApiLoaded: _ref3 => {\n        let {\n          map,\n          maps\n        } = _ref3;\n        return apiIsLoaded(map, maps);\n      },\n      children: [mappedTable.map((m, index) => {\n        const {\n          coordinates: {\n            latitude,\n            longitude\n          },\n          dateTime,\n          bdpentr,\n          fdpentr,\n          bdpexit,\n          fdpexit,\n          doorState,\n          dop,\n          flag\n        } = m;\n        const contentText = `${index + 1}. ${dateTime}, Puerta:${doorState}, Ingresos:${fdpentr}/${bdpentr}, Salido:${fdpexit}/${bdpexit}, DOP:${dop}`;\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          lat: latitude,\n          lng: longitude,\n          type: 'APP',\n          flag,\n          text: contentText\n        }, `${index}-APP`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this);\n      }), authEvents.filter((event, index, events) => getRecordToDraw(event, index, events)).map((event, index) => buildMarker('AUTH', event, index))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n\nfunction mapPropsAreEqual(prevProps, nextProps) {\n  return prevProps.mapChangedTimestamp === nextProps.mapChangedTimestamp;\n}\n\nconst MemoizedMap = /*#__PURE__*/React.memo(Map, mapPropsAreEqual);\nexport default MemoizedMap;","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/app/main/analysis/analysis/mapLog/Map.js"],"names":["React","useState","useEffect","GoogleMap","mapOptions","Marker","Map","props","pathAppFile","pathAuthorityFile","setMapChangedTimestamp","authorityAppFileContent","mappedTable","appFilePolyline","setAppFilePolyline","authorityFilePolyline","setAthorityFilePolyline","authEvents","setAuthEvents","apiIsLoaded","map","maps","appFilePolylineMap","Polyline","path","geodesic","strokeColor","strokeOpacity","strokeWeight","authorityPolyline","setMap","Date","now","currentAuthContent","authRow","event","eventos","formattedEvent","formatEventData","push","sort","a","b","timestamp","console","log","eventFormatted","year","fecha","slice","month","day","hour","hora","minute","second","getTime","backDoor","puerta","find","idPuerta","frontDoor","dop","parseFloat","replace","longitude","longitud","latitude","latitud","getRecordToDraw","index","events","prevRecord","prevFrontDoor","prevBackDoor","hasPassengerFlow","ingresos","salidas","hasDoorChange","estado","buildMarker","type","eventData","frontDoorInput","frontDoorOutput","frontDoorOpen","backDoorInput","backDoorOutput","backDoorOpen","contentText","lat","lng","key","process","env","REACT_APP_MAP_KEY","m","coordinates","dateTime","bdpentr","fdpentr","bdpexit","fdpexit","doorState","flag","filter","mapPropsAreEqual","prevProps","nextProps","mapChangedTimestamp","MemoizedMap","memo"],"mappings":"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","sourcesContent":["/* REACT CORE */\nimport React, { useState, useEffect } from 'react';\n/* UI CORE - MATERIAL-UI */\n\n/* MAP UI core */\nimport GoogleMap from 'google-map-react';\n/* @FUSE COMPONENTS */\nimport { mapOptions } from './mapOptions';\nimport Marker from './Marker';\n\nexport function Map(props) {\n  const {\n    pathAppFile,\n    pathAuthorityFile,\n    setMapChangedTimestamp,\n    authorityAppFileContent,\n    mappedTable,\n  } = props;\n  const [appFilePolyline, setAppFilePolyline] = useState();\n  const [authorityFilePolyline, setAthorityFilePolyline] = useState();\n\n  const [authEvents, setAuthEvents] = useState([]);\n\n  const apiIsLoaded = (map, maps) => {\n    const appFilePolylineMap = new maps.Polyline({\n      path: pathAppFile,\n      geodesic: false,\n      strokeColor: '#7B2AD7',\n      strokeOpacity: 1,\n      strokeWeight: 3,\n    });\n    const authorityPolyline = new maps.Polyline({\n      path: pathAuthorityFile,\n      geodesic: false,\n      strokeColor: '#2d7fe2',\n      strokeOpacity: 1,\n      strokeWeight: 3,\n    });\n\n    appFilePolylineMap.setMap(map);\n    setAppFilePolyline(appFilePolylineMap);\n\n    authorityPolyline.setMap(map);\n    setAthorityFilePolyline(authorityPolyline);\n  };\n\n  useEffect(() => {\n    setMapChangedTimestamp(Date.now());\n  }, [appFilePolyline, authorityFilePolyline]);\n\n  useEffect(() => {\n    const currentAuthContent = [];\n    if (authorityAppFileContent) {\n      for (const authRow of authorityAppFileContent) {\n        for (const event of authRow.eventos) {\n          const formattedEvent = formatEventData(event);\n          currentAuthContent.push(formattedEvent);\n        }\n      }\n    }\n    currentAuthContent.sort((a, b) => b.timestamp - a.timestamp);\n    console.log('currentAuthContent', authorityAppFileContent);\n    setAuthEvents(currentAuthContent);\n  }, [authorityAppFileContent]);\n\n  const formatEventData = (event) => {\n    const eventFormatted = {};\n    const year = event.fecha.slice(0, 4);\n    const month = event.fecha.slice(4, 6);\n    const day = event.fecha.slice(6, 8);\n    const hour = event.hora.slice(0, 2);\n    const minute = event.hora.slice(2, 4);\n    const second = event.hora.slice(4, 6);\n    const timestamp = new Date(\n      `${year}-${month}-${day}T${hour}:${minute}:${second}-05:00`\n    ).getTime();\n\n    const backDoor = event.puerta.find(({ idPuerta }) => idPuerta === 1);\n    const frontDoor = event.puerta.find(({ idPuerta }) => idPuerta === 0);\n\n    eventFormatted.backDoor = backDoor;\n    eventFormatted.frontDoor = frontDoor;\n\n    eventFormatted.timestamp = timestamp;\n    eventFormatted.dop = parseFloat(event.dop.replace(',', '.'));\n    eventFormatted.longitude = parseFloat(event.longitud.replace(',', '.'));\n    eventFormatted.latitude = parseFloat(event.latitud.replace(',', '.'));\n\n    return eventFormatted;\n  };\n\n  const getRecordToDraw = (event, index, events) => {\n    const prevRecord = events[index - 1] || {};\n    const { frontDoor: prevFrontDoor = {}, backDoor: prevBackDoor = {} } = prevRecord;\n    const { frontDoor, backDoor } = event;\n    const hasPassengerFlow =\n      (frontDoor.ingresos || 0) !== 0 ||\n      (frontDoor.salidas || 0) !== 0 ||\n      (backDoor.ingresos || 0) !== 0 ||\n      (backDoor.salidas || 0) !== 0;\n    const hasDoorChange = prevRecord\n      ? prevFrontDoor.estado !== frontDoor.estado || prevBackDoor.estado !== backDoor.estado\n      : false;\n    return hasPassengerFlow || hasDoorChange;\n  };\n  const buildMarker = (type, eventData, index) => {\n    const { frontDoor, backDoor, latitude, longitude, timestamp } = eventData;\n    const { ingresos: frontDoorInput, salidas: frontDoorOutput, estado: frontDoorOpen } = frontDoor;\n    const { ingresos: backDoorInput, salidas: backDoorOutput, estado: backDoorOpen } = backDoor;\n    const contentText = `${type}: ${\n      !frontDoorOpen ? 'DA' : 'DC'\n    }+${frontDoorInput}-${frontDoorOutput}, ${\n      !backDoorOpen ? 'TA' : 'TC'\n    }+${backDoorInput}-${backDoorOutput}`;\n    return (\n      <Marker\n        key={`${index}-${type}`}\n        {...{ lat: latitude, lng: longitude, type }}\n        text={contentText}\n      />\n    );\n  };\n\n  return (\n    <div id=\"listing_parent\" className=\"w-full h-full\">\n      <GoogleMap\n        bootstrapURLKeys={{\n          key: process.env.REACT_APP_MAP_KEY,\n        }}\n        options={mapOptions}\n        defaultZoom={12}\n        defaultCenter={[6.236118, -75.580598]}\n        yesIWantToUseGoogleMapApiInternals\n        onGoogleApiLoaded={({ map, maps }) => apiIsLoaded(map, maps)}\n      >\n        {mappedTable.map((m, index) => {\n          const {\n            coordinates: { latitude, longitude },\n            dateTime,\n            bdpentr,\n            fdpentr,\n            bdpexit,\n            fdpexit,\n            doorState,\n            dop,\n            flag,\n          } = m;\n          const contentText = `${\n            index + 1\n          }. ${dateTime}, Puerta:${doorState}, Ingresos:${fdpentr}/${bdpentr}, Salido:${fdpexit}/${bdpexit}, DOP:${dop}`;\n          return (\n            <Marker\n              key={`${index}-APP`}\n              {...{ lat: latitude, lng: longitude, type: 'APP', flag }}\n              text={contentText}\n            />\n          );\n        })}\n        {authEvents\n          .filter((event, index, events) => getRecordToDraw(event, index, events))\n          .map((event, index) => buildMarker('AUTH', event, index))}\n      </GoogleMap>\n    </div>\n  );\n}\n\nfunction mapPropsAreEqual(prevProps, nextProps) {\n  return prevProps.mapChangedTimestamp === nextProps.mapChangedTimestamp;\n}\n\nconst MemoizedMap = React.memo(Map, mapPropsAreEqual);\nexport default MemoizedMap;\n"]},"metadata":{},"sourceType":"module"}