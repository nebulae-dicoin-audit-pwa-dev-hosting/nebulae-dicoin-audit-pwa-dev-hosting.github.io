{"ast":null,"code":"import _ from 'lodash';\nimport { getDistance } from 'geolib';\n\nconst findRadioPermissibleError = function (dop) {\n  let dopDistancePermissibleErrors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const permissibleError = dopDistancePermissibleErrors.find(_ref => {\n    let {\n      dopInitial,\n      dopFinal,\n      radio\n    } = _ref;\n    return dop >= dopInitial && dop <= dopFinal;\n  });\n  return permissibleError ? permissibleError.radio : 0;\n};\n\nconst formatEventData = event => {\n  if (event.__formatted) return;\n  const year = event.fecha.slice(0, 4);\n  const month = event.fecha.slice(4, 6);\n  const day = event.fecha.slice(6, 8);\n  const hour = event.hora.slice(0, 2);\n  const minute = event.hora.slice(2, 4);\n  const second = event.hora.slice(4, 6);\n  const timestamp = new Date(`${year}-${month}-${day}T${hour}:${minute}:${second}-05:00`).getTime();\n  event.timestamp = timestamp;\n  event.dop = parseFloat(event.dop.replace(',', '.'));\n  event.longitud = parseFloat(event.longitud.replace(',', '.'));\n  event.latitud = parseFloat(event.latitud.replace(',', '.'));\n  event.__formatted = true;\n};\n\nconst findCounterpartEvent = (authorityPayload, event, permissibleError, counterpartFileContent) => {\n  const {\n    distance,\n    backDoorEntrance,\n    backDoorExit,\n    frontDoorEntrance,\n    frontDoorExit,\n    times\n  } = permissibleError;\n  let result = {};\n\n  for (const counterpartPayload of counterpartFileContent) {\n    for (const counterpartEvent of counterpartPayload.eventos) {\n      if (counterpartEvent.__taken) continue;\n      formatEventData(counterpartEvent);\n      const backDoor = event.puerta.find(_ref2 => {\n        let {\n          idPuerta\n        } = _ref2;\n        return idPuerta === 1;\n      });\n      const frontDoor = event.puerta.find(_ref3 => {\n        let {\n          idPuerta\n        } = _ref3;\n        return idPuerta === 0;\n      });\n      const counterpartBackDoor = counterpartEvent.puerta.find(_ref4 => {\n        let {\n          idPuerta\n        } = _ref4;\n        return idPuerta === 1;\n      });\n      const counterpartFrontDoor = counterpartEvent.puerta.find(_ref5 => {\n        let {\n          idPuerta\n        } = _ref5;\n        return idPuerta === 0;\n      });\n      const timeDiff = parseInt(Math.abs(event.timestamp - counterpartEvent.timestamp) / 1000, 10);\n      const applyTime = timeDiff <= times;\n      if (!applyTime) continue;\n      const distanceDiff = getDistance({\n        latitude: event.latitud,\n        longitude: event.longitud\n      }, {\n        latitude: counterpartEvent.latitud,\n        longitude: counterpartEvent.longitud\n      });\n      const applyDistance = distanceDiff <= distance;\n      if (!applyDistance) continue;\n      const applyBackDoorEntrance = backDoor && counterpartBackDoor && Math.abs(backDoor.ingresos - counterpartBackDoor.ingresos) <= backDoorEntrance;\n      const applyBackDoorExit = backDoor && counterpartBackDoor && Math.abs(backDoor.salidas - counterpartBackDoor.salidas) <= backDoorExit;\n      const applyFrontDoorEntrance = frontDoor && counterpartFrontDoor && Math.abs(frontDoor.ingresos - counterpartFrontDoor.ingresos) <= frontDoorEntrance;\n      const applyFrontDoorExit = frontDoor && counterpartFrontDoor && Math.abs(frontDoor.salidas - counterpartFrontDoor.salidas) <= frontDoorExit;\n      const applyFrontDoorState = frontDoor && counterpartFrontDoor && frontDoor.estado === counterpartFrontDoor.estado;\n      const applyBackDoorState = backDoor && counterpartBackDoor && backDoor.estado === counterpartBackDoor.estado;\n      const {\n        dop\n      } = counterpartEvent;\n      const ranking = timeDiff + distanceDiff + applyBackDoorEntrance + applyBackDoorExit + applyFrontDoorEntrance + applyFrontDoorExit;\n\n      if (!result.counterpartEvent || ranking < result.match.ranking) {\n        result = {\n          counterpartEvent,\n          match: {\n            timeDiff,\n            distanceDiff,\n            ranking,\n            backDoor,\n            counterpartFrontDoor,\n            counterpartBackDoor,\n            frontDoor,\n            applyTime,\n            applyDistance,\n            applyBackDoorEntrance,\n            applyBackDoorExit,\n            applyFrontDoorEntrance,\n            applyFrontDoorExit,\n            applyFrontDoorState,\n            applyBackDoorState,\n            dop\n          }\n        };\n      }\n    }\n  }\n\n  if (result.counterpartEvent) result.counterpartEvent.__taken = true;\n  return result;\n};\n\nconst generateFlagCell = (event, counterpartEvent, match) => {\n  return !match ? 'ERROR' : match.applyBackDoorEntrance && match.applyBackDoorExit && match.applyFrontDoorEntrance && match.applyFrontDoorExit && match.applyFrontDoorState && match.applyBackDoorState ? 'OK' : 'WARNING';\n};\n\nconst generateDateTimeCell = (event, counterpartEvent, match) => {\n  const dateTime = new Date(event.timestamp).toLocaleString();\n\n  if (!match || match.timeDiff === 0) {\n    return dateTime;\n  }\n\n  return `${dateTime} dif:${match.timeDiff}s`;\n};\n\nconst generateLocationCell = (event, counterpartEvent, match) => {\n  if (!match || match.distanceDiff === 0) {\n    return `${event.latitud},${event.longitud}`;\n  }\n\n  return `${event.latitud},${event.longitud} dif:${match.distanceDiff}m`;\n};\n\nconst generateDoorStateCell = (event, counterpartEvent, match) => {\n  if (!match || match.applyFrontDoorState && match.applyBackDoorState) {\n    const backDoor = event.puerta.find(_ref6 => {\n      let {\n        idPuerta\n      } = _ref6;\n      return idPuerta === 1;\n    });\n    const frontDoor = event.puerta.find(_ref7 => {\n      let {\n        idPuerta\n      } = _ref7;\n      return idPuerta === 0;\n    });\n    return `D${frontDoor.estado ? 'C' : 'A'}T${backDoor.estado ? 'C' : 'A'}`;\n  }\n\n  return `D${match.frontDoor.estado ? 'C' : 'A'}T${match.backDoor.estado ? 'C' : 'A'} aut: D${match.counterpartFrontDoor.estado ? 'C' : 'A'}T${match.counterpartBackDoor.estado ? 'C' : 'A'} `;\n};\n\nconst generateDoorPassengerCell = (event, counterpartEvent, match, isFront, isEntrance) => {\n  if (!match || match[`apply${isFront ? 'Front' : 'Back'}Door${isEntrance ? 'Entrance' : 'Exit'}`]) {\n    const door = event.puerta.find(_ref8 => {\n      let {\n        idPuerta\n      } = _ref8;\n      return idPuerta === (isFront ? 0 : 1);\n    });\n    return `${door[isEntrance ? 'ingresos' : 'salidas']}`;\n  }\n\n  return `${match[isFront ? 'frontDoor' : 'backDoor'][isEntrance ? 'ingresos' : 'salidas']} aut:${match[isFront ? 'counterpartFrontDoor' : 'counterpartBackDoor'][isEntrance ? 'ingresos' : 'salidas']}`;\n};\n\nconst generateDopCell = (event, counterpartEvent, match) => {\n  if (!match || match.dop === 0 || event.dop === match.dop) {\n    return `${event.dop}`;\n  }\n\n  return `${event.dop} aut:${match.dop}`;\n};\n\nconst generateReportTableRow = (event, counterpartEvent, match) => {\n  const dateTime = new Date(event.timestamp).toLocaleString();\n  return {\n    flag: generateFlagCell(event, counterpartEvent, match),\n    dateTime: generateDateTimeCell(event, counterpartEvent, match),\n    location: generateLocationCell(event, counterpartEvent, match),\n    coordinates: {\n      latitude: event.latitud,\n      longitude: event.longitud\n    },\n    doorState: generateDoorStateCell(event, counterpartEvent, match),\n    // frontDoorPassengerEntrance\n    fdpentr: generateDoorPassengerCell(event, counterpartEvent, match, true, true),\n    // frontDoorPassengerExit\n    fdpexit: generateDoorPassengerCell(event, counterpartEvent, match, true, false),\n    // backDoorPassengerEntrance\n    bdpentr: generateDoorPassengerCell(event, counterpartEvent, match, false, true),\n    // backDoorPassengerExit\n    bdpexit: generateDoorPassengerCell(event, counterpartEvent, match, false, false),\n    dop: generateDopCell(event, counterpartEvent, match)\n  };\n};\n\nconst buildReportTable = (appFileContent, authorityVehicleFileContent, analysisParameter) => {\n  appFileContent = _.cloneDeep(appFileContent);\n  authorityVehicleFileContent = _.cloneDeep(authorityVehicleFileContent);\n  analysisParameter = _.cloneDeep(analysisParameter);\n  const reportTable = []; // final result => output\n\n  for (const appRow of appFileContent) {\n    const {\n      authorityPayload\n    } = appRow;\n    if (!authorityPayload) continue; // ignores text-notes\n\n    for (const event of authorityPayload.eventos) {\n      formatEventData(event);\n      const radioPermissibleError = findRadioPermissibleError(event.dop, analysisParameter.dopDistancePermissibleErrors);\n      const permissibleError = { ...analysisParameter.permissibleErrors,\n        distance: radioPermissibleError\n      };\n      const {\n        counterpartEvent,\n        match\n      } = findCounterpartEvent(authorityPayload, event, permissibleError, authorityVehicleFileContent);\n      reportTable.push(generateReportTableRow(event, counterpartEvent, match));\n    }\n  }\n\n  return reportTable;\n};\n\nexport default buildReportTable;","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/app/main/analysis/tools/dicoin_analysis.js"],"names":["_","getDistance","findRadioPermissibleError","dop","dopDistancePermissibleErrors","permissibleError","find","dopInitial","dopFinal","radio","formatEventData","event","__formatted","year","fecha","slice","month","day","hour","hora","minute","second","timestamp","Date","getTime","parseFloat","replace","longitud","latitud","findCounterpartEvent","authorityPayload","counterpartFileContent","distance","backDoorEntrance","backDoorExit","frontDoorEntrance","frontDoorExit","times","result","counterpartPayload","counterpartEvent","eventos","__taken","backDoor","puerta","idPuerta","frontDoor","counterpartBackDoor","counterpartFrontDoor","timeDiff","parseInt","Math","abs","applyTime","distanceDiff","latitude","longitude","applyDistance","applyBackDoorEntrance","ingresos","applyBackDoorExit","salidas","applyFrontDoorEntrance","applyFrontDoorExit","applyFrontDoorState","estado","applyBackDoorState","ranking","match","generateFlagCell","generateDateTimeCell","dateTime","toLocaleString","generateLocationCell","generateDoorStateCell","generateDoorPassengerCell","isFront","isEntrance","door","generateDopCell","generateReportTableRow","flag","location","coordinates","doorState","fdpentr","fdpexit","bdpentr","bdpexit","buildReportTable","appFileContent","authorityVehicleFileContent","analysisParameter","cloneDeep","reportTable","appRow","radioPermissibleError","permissibleErrors","push"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport { getDistance } from 'geolib';\n\nconst findRadioPermissibleError = (dop, dopDistancePermissibleErrors = []) => {\n  const permissibleError = dopDistancePermissibleErrors.find(\n    ({ dopInitial, dopFinal, radio }) => dop >= dopInitial && dop <= dopFinal\n  );\n  return permissibleError ? permissibleError.radio : 0;\n};\n\nconst formatEventData = (event) => {\n  if (event.__formatted) return;\n  const year = event.fecha.slice(0, 4);\n  const month = event.fecha.slice(4, 6);\n  const day = event.fecha.slice(6, 8);\n  const hour = event.hora.slice(0, 2);\n  const minute = event.hora.slice(2, 4);\n  const second = event.hora.slice(4, 6);\n  const timestamp = new Date(`${year}-${month}-${day}T${hour}:${minute}:${second}-05:00`).getTime();\n\n  event.timestamp = timestamp;\n  event.dop = parseFloat(event.dop.replace(',', '.'));\n  event.longitud = parseFloat(event.longitud.replace(',', '.'));\n  event.latitud = parseFloat(event.latitud.replace(',', '.'));\n  event.__formatted = true;\n};\n\nconst findCounterpartEvent = (\n  authorityPayload,\n  event,\n  permissibleError,\n  counterpartFileContent\n) => {\n  const { distance, backDoorEntrance, backDoorExit, frontDoorEntrance, frontDoorExit, times } =\n    permissibleError;\n  let result = {};\n  for (const counterpartPayload of counterpartFileContent) {\n    for (const counterpartEvent of counterpartPayload.eventos) {\n      if (counterpartEvent.__taken) continue;\n      formatEventData(counterpartEvent);\n      const backDoor = event.puerta.find(({ idPuerta }) => idPuerta === 1);\n      const frontDoor = event.puerta.find(({ idPuerta }) => idPuerta === 0);\n      const counterpartBackDoor = counterpartEvent.puerta.find(({ idPuerta }) => idPuerta === 1);\n      const counterpartFrontDoor = counterpartEvent.puerta.find(({ idPuerta }) => idPuerta === 0);\n\n      const timeDiff = parseInt(Math.abs(event.timestamp - counterpartEvent.timestamp) / 1000, 10);\n      const applyTime = timeDiff <= times;\n      if (!applyTime) continue;\n      const distanceDiff = getDistance(\n        { latitude: event.latitud, longitude: event.longitud },\n        { latitude: counterpartEvent.latitud, longitude: counterpartEvent.longitud }\n      );\n      const applyDistance = distanceDiff <= distance;\n      if (!applyDistance) continue;\n      const applyBackDoorEntrance =\n        backDoor &&\n        counterpartBackDoor &&\n        Math.abs(backDoor.ingresos - counterpartBackDoor.ingresos) <= backDoorEntrance;\n      const applyBackDoorExit =\n        backDoor &&\n        counterpartBackDoor &&\n        Math.abs(backDoor.salidas - counterpartBackDoor.salidas) <= backDoorExit;\n      const applyFrontDoorEntrance =\n        frontDoor &&\n        counterpartFrontDoor &&\n        Math.abs(frontDoor.ingresos - counterpartFrontDoor.ingresos) <= frontDoorEntrance;\n      const applyFrontDoorExit =\n        frontDoor &&\n        counterpartFrontDoor &&\n        Math.abs(frontDoor.salidas - counterpartFrontDoor.salidas) <= frontDoorExit;\n      const applyFrontDoorState =\n        frontDoor && counterpartFrontDoor && frontDoor.estado === counterpartFrontDoor.estado;\n      const applyBackDoorState =\n        backDoor && counterpartBackDoor && backDoor.estado === counterpartBackDoor.estado;\n      const { dop } = counterpartEvent;\n      const ranking =\n        timeDiff +\n        distanceDiff +\n        applyBackDoorEntrance +\n        applyBackDoorExit +\n        applyFrontDoorEntrance +\n        applyFrontDoorExit;\n\n      if (!result.counterpartEvent || ranking < result.match.ranking) {\n        result = {\n          counterpartEvent,\n          match: {\n            timeDiff,\n            distanceDiff,\n            ranking,\n            backDoor,\n            counterpartFrontDoor,\n            counterpartBackDoor,\n            frontDoor,\n            applyTime,\n            applyDistance,\n            applyBackDoorEntrance,\n            applyBackDoorExit,\n            applyFrontDoorEntrance,\n            applyFrontDoorExit,\n            applyFrontDoorState,\n            applyBackDoorState,\n            dop,\n          },\n        };\n      }\n    }\n  }\n  if (result.counterpartEvent) result.counterpartEvent.__taken = true;\n  return result;\n};\n\nconst generateFlagCell = (event, counterpartEvent, match) => {\n  return !match\n    ? 'ERROR'\n    : match.applyBackDoorEntrance &&\n      match.applyBackDoorExit &&\n      match.applyFrontDoorEntrance &&\n      match.applyFrontDoorExit &&\n      match.applyFrontDoorState &&\n      match.applyBackDoorState\n    ? 'OK'\n    : 'WARNING';\n};\n\nconst generateDateTimeCell = (event, counterpartEvent, match) => {\n  const dateTime = new Date(event.timestamp).toLocaleString();\n  if (!match || match.timeDiff === 0) {\n    return dateTime;\n  }\n  return `${dateTime} dif:${match.timeDiff}s`;\n};\n\nconst generateLocationCell = (event, counterpartEvent, match) => {\n  if (!match || match.distanceDiff === 0) {\n    return `${event.latitud},${event.longitud}`;\n  }\n  return `${event.latitud},${event.longitud} dif:${match.distanceDiff}m`;\n};\n\nconst generateDoorStateCell = (event, counterpartEvent, match) => {\n  if (!match || (match.applyFrontDoorState && match.applyBackDoorState)) {\n    const backDoor = event.puerta.find(({ idPuerta }) => idPuerta === 1);\n    const frontDoor = event.puerta.find(({ idPuerta }) => idPuerta === 0);\n    return `D${frontDoor.estado ? 'C' : 'A'}T${backDoor.estado ? 'C' : 'A'}`;\n  }\n  return `D${match.frontDoor.estado ? 'C' : 'A'}T${match.backDoor.estado ? 'C' : 'A'} aut: D${\n    match.counterpartFrontDoor.estado ? 'C' : 'A'\n  }T${match.counterpartBackDoor.estado ? 'C' : 'A'} `;\n};\n\nconst generateDoorPassengerCell = (event, counterpartEvent, match, isFront, isEntrance) => {\n  if (\n    !match ||\n    match[`apply${isFront ? 'Front' : 'Back'}Door${isEntrance ? 'Entrance' : 'Exit'}`]\n  ) {\n    const door = event.puerta.find(({ idPuerta }) => idPuerta === (isFront ? 0 : 1));\n    return `${door[isEntrance ? 'ingresos' : 'salidas']}`;\n  }\n  return `${match[isFront ? 'frontDoor' : 'backDoor'][isEntrance ? 'ingresos' : 'salidas']} aut:${\n    match[isFront ? 'counterpartFrontDoor' : 'counterpartBackDoor'][\n      isEntrance ? 'ingresos' : 'salidas'\n    ]\n  }`;\n};\n\nconst generateDopCell = (event, counterpartEvent, match) => {\n  if (!match || match.dop === 0 || event.dop ===match.dop) {\n    return `${event.dop}`;\n  }\n  return `${event.dop} aut:${match.dop}`;\n};\nconst generateReportTableRow = (event, counterpartEvent, match) => {\n  const dateTime = new Date(event.timestamp).toLocaleString();\n  return {\n    flag: generateFlagCell(event, counterpartEvent, match),\n    dateTime: generateDateTimeCell(event, counterpartEvent, match),\n    location: generateLocationCell(event, counterpartEvent, match),\n    coordinates: {\n      latitude: event.latitud,\n      longitude: event.longitud,\n    },\n    doorState: generateDoorStateCell(event, counterpartEvent, match),\n    // frontDoorPassengerEntrance\n    fdpentr: generateDoorPassengerCell(event, counterpartEvent, match, true, true),\n    // frontDoorPassengerExit\n    fdpexit: generateDoorPassengerCell(event, counterpartEvent, match, true, false),\n    // backDoorPassengerEntrance\n    bdpentr: generateDoorPassengerCell(event, counterpartEvent, match, false, true),\n    // backDoorPassengerExit\n    bdpexit: generateDoorPassengerCell(event, counterpartEvent, match, false, false),\n    dop: generateDopCell(event, counterpartEvent, match),\n  };\n};\n\nconst buildReportTable = (appFileContent, authorityVehicleFileContent, analysisParameter) => {\n  appFileContent = _.cloneDeep(appFileContent);\n  authorityVehicleFileContent = _.cloneDeep(authorityVehicleFileContent);\n  analysisParameter = _.cloneDeep(analysisParameter);\n\n  const reportTable = []; // final result => output\n  for (const appRow of appFileContent) {\n    const { authorityPayload } = appRow;\n    if (!authorityPayload) continue; // ignores text-notes\n    for (const event of authorityPayload.eventos) {\n      formatEventData(event);\n      const radioPermissibleError = findRadioPermissibleError(\n        event.dop,\n        analysisParameter.dopDistancePermissibleErrors\n      );\n      const permissibleError = {\n        ...analysisParameter.permissibleErrors,\n        distance: radioPermissibleError,\n      };\n      const { counterpartEvent, match } = findCounterpartEvent(\n        authorityPayload,\n        event,\n        permissibleError,\n        authorityVehicleFileContent\n      );\n      reportTable.push(generateReportTableRow(event, counterpartEvent, match));\n    }\n  }\n  return reportTable;\n};\n\nexport default buildReportTable;\n"]},"metadata":{},"sourceType":"module"}