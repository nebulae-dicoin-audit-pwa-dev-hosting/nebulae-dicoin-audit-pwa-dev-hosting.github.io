{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _objectSpread from\"/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{singleton}from'../MinimongoDB/MinimongoDB';var minimongoDB=singleton();var CollectionName='Trip';var TripDA=/*#__PURE__*/function(){function TripDA(){_classCallCheck(this,TripDA);}_createClass(TripDA,null,[{key:\"insertTrip\",value:function insertTrip(doc){var collection=minimongoDB.db[CollectionName];return new Promise(function(resolve,reject){collection.upsert(_objectSpread({},doc),function(r){resolve(r);return r;},function(e){return e;},function(f){return f;});});}},{key:\"updateTrip\",value:function updateTrip(_id,doc){var collection=minimongoDB.db[CollectionName];return collection.findOne({_id:_id},{},function(res){var documentToUpdate=doc;if(res){documentToUpdate=_objectSpread(_objectSpread({},res),doc);return collection.upsert(_objectSpread({},documentToUpdate),function(){return documentToUpdate;},function(){return null;});}return null;});}},{key:\"removeTrip\",value:function removeTrip(){var collection=minimongoDB.db[CollectionName];return collection.find({}).fetch(function(rows){var _iterator=_createForOfIteratorHelper(rows),_step;try{var _loop=function _loop(){var trip=_step.value;collection.remove(trip._id,function(r){collection.resolveRemove(trip._id,function(){});});};for(_iterator.s();!(_step=_iterator.n()).done;){_loop();}}catch(err){_iterator.e(err);}finally{_iterator.f();}});}},{key:\"finalizeTrip\",value:function finalizeTrip(_id,doc){var collection=minimongoDB.db[CollectionName];return collection.findOne({_id:_id},{},function(res){if(res){var documentToUpdate=_objectSpread(_objectSpread({},res),doc);return collection.upsert(_objectSpread({},documentToUpdate),function(r){return documentToUpdate;},function(){return null;});}return null;});}},{key:\"getPrevTrip\",value:function getPrevTrip(){var collection=minimongoDB.db[CollectionName];return new Promise(function(resolve,reject){if(collection){var query=collection.find({});query.fetch(function(rows){resolve(rows[0]);});}});}},{key:\"getTripById\",value:function getTripById(_id){return new Promise(function(resolve,reject){collection.findOne({_id:_id},{},function(trip){resolve(trip);return trip;});});}}]);return TripDA;}();/**\n * @returns {TripDA}\n */export default TripDA;","map":null,"metadata":{},"sourceType":"module"}