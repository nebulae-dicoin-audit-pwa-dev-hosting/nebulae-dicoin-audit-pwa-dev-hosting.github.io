{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/app/fuse-layouts/shared-components/FullScreenToggle.js\";\nimport Icon from '@mui/material/Icon';\nimport Tooltip from '@mui/material/Tooltip';\nimport clsx from 'clsx';\nimport { useLayoutEffect, useEffect, useState } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useEnhancedEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\nconst HeaderFullScreenToggle = props => {\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  useEnhancedEffect(() => {\n    document.onfullscreenchange = () => setIsFullScreen(document[getBrowserFullscreenElementProp()] != null);\n\n    return () => {\n      document.onfullscreenchange = undefined;\n    };\n  });\n\n  function getBrowserFullscreenElementProp() {\n    if (typeof document.fullscreenElement !== 'undefined') {\n      return 'fullscreenElement';\n    }\n\n    if (typeof document.mozFullScreenElement !== 'undefined') {\n      return 'mozFullScreenElement';\n    }\n\n    if (typeof document.msFullscreenElement !== 'undefined') {\n      return 'msFullscreenElement';\n    }\n\n    if (typeof document.webkitFullscreenElement !== 'undefined') {\n      return 'webkitFullscreenElement';\n    }\n\n    throw new Error('fullscreenElement is not supported by this browser');\n  }\n  /* View in fullscreen */\n\n\n  function openFullscreen() {\n    const elem = document.documentElement;\n\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.mozRequestFullScreen) {\n      /* Firefox */\n      elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) {\n      /* Chrome, Safari and Opera */\n      elem.webkitRequestFullscreen();\n    } else if (elem.msRequestFullscreen) {\n      /* IE/Edge */\n      elem.msRequestFullscreen();\n    }\n  }\n  /* Close fullscreen */\n\n\n  function closeFullscreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      /* Firefox */\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      /* Chrome, Safari and Opera */\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n      /* IE/Edge */\n      document.msExitFullscreen();\n    }\n  }\n\n  function toggleFullScreen() {\n    if (document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement) {\n      closeFullscreen();\n    } else {\n      openFullscreen();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    title: \"Fullscreen toggle\",\n    placement: \"bottom\",\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: toggleFullScreen,\n      className: clsx('w-40 h-40', props.className),\n      size: \"large\",\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        children: isFullScreen ? 'fullscreen_exit' : 'fullscreen'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\nexport default HeaderFullScreenToggle;","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/app/fuse-layouts/shared-components/FullScreenToggle.js"],"names":["Icon","Tooltip","clsx","useLayoutEffect","useEffect","useState","IconButton","useEnhancedEffect","window","HeaderFullScreenToggle","props","isFullScreen","setIsFullScreen","document","onfullscreenchange","getBrowserFullscreenElementProp","undefined","fullscreenElement","mozFullScreenElement","msFullscreenElement","webkitFullscreenElement","Error","openFullscreen","elem","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","closeFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","toggleFullScreen","className"],"mappings":"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","sourcesContent":["import Icon from '@mui/material/Icon';\nimport Tooltip from '@mui/material/Tooltip';\nimport clsx from 'clsx';\nimport { useLayoutEffect, useEffect, useState } from 'react';\nimport IconButton from '@mui/material/IconButton';\n\nconst useEnhancedEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\nconst HeaderFullScreenToggle = (props) => {\n  const [isFullScreen, setIsFullScreen] = useState(false);\n\n  useEnhancedEffect(() => {\n    document.onfullscreenchange = () =>\n      setIsFullScreen(document[getBrowserFullscreenElementProp()] != null);\n\n    return () => {\n      document.onfullscreenchange = undefined;\n    };\n  });\n\n  function getBrowserFullscreenElementProp() {\n    if (typeof document.fullscreenElement !== 'undefined') {\n      return 'fullscreenElement';\n    }\n    if (typeof document.mozFullScreenElement !== 'undefined') {\n      return 'mozFullScreenElement';\n    }\n    if (typeof document.msFullscreenElement !== 'undefined') {\n      return 'msFullscreenElement';\n    }\n    if (typeof document.webkitFullscreenElement !== 'undefined') {\n      return 'webkitFullscreenElement';\n    }\n    throw new Error('fullscreenElement is not supported by this browser');\n  }\n\n  /* View in fullscreen */\n  function openFullscreen() {\n    const elem = document.documentElement;\n\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.mozRequestFullScreen) {\n      /* Firefox */\n      elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) {\n      /* Chrome, Safari and Opera */\n      elem.webkitRequestFullscreen();\n    } else if (elem.msRequestFullscreen) {\n      /* IE/Edge */\n      elem.msRequestFullscreen();\n    }\n  }\n\n  /* Close fullscreen */\n  function closeFullscreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      /* Firefox */\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      /* Chrome, Safari and Opera */\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n      /* IE/Edge */\n      document.msExitFullscreen();\n    }\n  }\n\n  function toggleFullScreen() {\n    if (\n      document.fullscreenElement ||\n      document.webkitFullscreenElement ||\n      document.mozFullScreenElement\n    ) {\n      closeFullscreen();\n    } else {\n      openFullscreen();\n    }\n  }\n\n  return (\n    <Tooltip title=\"Fullscreen toggle\" placement=\"bottom\">\n      <IconButton\n        onClick={toggleFullScreen}\n        className={clsx('w-40 h-40', props.className)}\n        size=\"large\"\n      >\n        <Icon>{isFullScreen ? 'fullscreen_exit' : 'fullscreen'}</Icon>\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nexport default HeaderFullScreenToggle;\n"]},"metadata":{},"sourceType":"module"}