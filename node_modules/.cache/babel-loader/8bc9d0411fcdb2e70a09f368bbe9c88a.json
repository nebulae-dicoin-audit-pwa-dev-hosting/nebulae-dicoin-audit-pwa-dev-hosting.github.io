{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst lodash_1 = __importDefault(require(\"lodash\"));\n\nvar EJSON = {};\nvar customTypes = {}; // Add a custom type, using a method of your choice to get to and\n// from a basic JSON-able representation.  The factory argument\n// is a function of JSON-able --> your object\n// The type you add must have:\n// - A clone() method, so that Meteor can deep-copy it when necessary.\n// - A equals() method, so that Meteor can compare it\n// - A toJSONValue() method, so that Meteor can serialize it\n// - a typeName() method, to show how to look it up in our type table.\n// It is okay if these methods are monkey-patched on.\n\nEJSON.addType = function (name, factory) {\n  if (lodash_1.default.has(customTypes, name)) throw new Error(\"Type \" + name + \" already present\");\n  customTypes[name] = factory;\n};\n\nvar builtinConverters = [{\n  // Date\n  matchJSONValue: function (obj) {\n    return lodash_1.default.has(obj, \"$date\") && lodash_1.default.size(obj) === 1;\n  },\n  matchObject: function (obj) {\n    return obj instanceof Date;\n  },\n  toJSONValue: function (obj) {\n    return {\n      $date: obj.getTime()\n    };\n  },\n  fromJSONValue: function (obj) {\n    return new Date(obj.$date);\n  }\n}, {\n  // Binary\n  matchJSONValue: function (obj) {\n    return lodash_1.default.has(obj, \"$binary\") && lodash_1.default.size(obj) === 1;\n  },\n  matchObject: function (obj) {\n    return typeof Uint8Array !== \"undefined\" && obj instanceof Uint8Array || obj && lodash_1.default.has(obj, \"$Uint8ArrayPolyfill\");\n  },\n  toJSONValue: function (obj) {\n    return {\n      $binary: EJSON._base64Encode(obj)\n    };\n  },\n  fromJSONValue: function (obj) {\n    return EJSON._base64Decode(obj.$binary);\n  }\n}, {\n  // Escaping one level\n  matchJSONValue: function (obj) {\n    return lodash_1.default.has(obj, \"$escape\") && lodash_1.default.size(obj) === 1;\n  },\n  matchObject: function (obj) {\n    if (lodash_1.default.isEmpty(obj) || lodash_1.default.size(obj) > 2) {\n      return false;\n    }\n\n    return lodash_1.default.some(builtinConverters, function (converter) {\n      return converter.matchJSONValue(obj);\n    });\n  },\n  toJSONValue: function (obj) {\n    var newObj = {};\n    lodash_1.default.each(obj, function (value, key) {\n      newObj[key] = EJSON.toJSONValue(value);\n    });\n    return {\n      $escape: newObj\n    };\n  },\n  fromJSONValue: function (obj) {\n    var newObj = {};\n    lodash_1.default.each(obj.$escape, function (value, key) {\n      newObj[key] = EJSON.fromJSONValue(value);\n    });\n    return newObj;\n  }\n}, {\n  // Custom\n  matchJSONValue: function (obj) {\n    return lodash_1.default.has(obj, \"$type\") && lodash_1.default.has(obj, \"$value\") && lodash_1.default.size(obj) === 2;\n  },\n  matchObject: function (obj) {\n    return EJSON._isCustomType(obj);\n  },\n  toJSONValue: function (obj) {\n    return {\n      $type: obj.typeName(),\n      $value: obj.toJSONValue()\n    };\n  },\n  fromJSONValue: function (obj) {\n    var typeName = obj.$type;\n    var converter = customTypes[typeName];\n    return converter(obj.$value);\n  }\n}];\n\nEJSON._isCustomType = function (obj) {\n  return obj && typeof obj.toJSONValue === \"function\" && typeof obj.typeName === \"function\" && lodash_1.default.has(customTypes, obj.typeName());\n}; //for both arrays and objects, in-place modification.\n\n\nvar adjustTypesToJSONValue = EJSON._adjustTypesToJSONValue = function (obj) {\n  if (obj === null) return null;\n  var maybeChanged = toJSONValueHelper(obj);\n  if (maybeChanged !== undefined) return maybeChanged;\n  lodash_1.default.each(obj, function (value, key) {\n    if (typeof value !== \"object\" && value !== undefined) return; // continue\n\n    var changed = toJSONValueHelper(value);\n\n    if (changed) {\n      obj[key] = changed;\n      return; // on to the next key\n    } // if we get here, value is an object but not adjustable\n    // at this level.  recurse.\n\n\n    adjustTypesToJSONValue(value);\n  });\n  return obj;\n}; // Either return the JSON-compatible version of the argument, or undefined (if\n// the item isn't itself replaceable, but maybe some fields in it are)\n\n\nvar toJSONValueHelper = function (item) {\n  for (var i = 0; i < builtinConverters.length; i++) {\n    var converter = builtinConverters[i];\n\n    if (converter.matchObject(item)) {\n      return converter.toJSONValue(item);\n    }\n  }\n\n  return undefined;\n};\n\nEJSON.toJSONValue = function (item) {\n  var changed = toJSONValueHelper(item);\n  if (changed !== undefined) return changed;\n\n  if (typeof item === \"object\") {\n    item = EJSON.clone(item);\n    adjustTypesToJSONValue(item);\n  }\n\n  return item;\n}; //for both arrays and objects. Tries its best to just\n// use the object you hand it, but may return something\n// different if the object you hand it itself needs changing.\n\n\nvar adjustTypesFromJSONValue = EJSON._adjustTypesFromJSONValue = function (obj) {\n  if (obj === null) return null;\n  var maybeChanged = fromJSONValueHelper(obj);\n  if (maybeChanged !== obj) return maybeChanged;\n  lodash_1.default.each(obj, function (value, key) {\n    if (typeof value === \"object\") {\n      var changed = fromJSONValueHelper(value);\n\n      if (value !== changed) {\n        obj[key] = changed;\n        return;\n      } // if we get here, value is an object but not adjustable\n      // at this level.  recurse.\n\n\n      adjustTypesFromJSONValue(value);\n    }\n  });\n  return obj;\n}; // Either return the argument changed to have the non-json\n// rep of itself (the Object version) or the argument itself.\n// DOES NOT RECURSE.  For actually getting the fully-changed value, use\n// EJSON.fromJSONValue\n\n\nvar fromJSONValueHelper = function (value) {\n  if (typeof value === \"object\" && value !== null) {\n    if (lodash_1.default.size(value) <= 2 && lodash_1.default.every(value, function (v, k) {\n      return typeof k === \"string\" && k.substr(0, 1) === \"$\";\n    })) {\n      for (var i = 0; i < builtinConverters.length; i++) {\n        var converter = builtinConverters[i];\n\n        if (converter.matchJSONValue(value)) {\n          return converter.fromJSONValue(value);\n        }\n      }\n    }\n  }\n\n  return value;\n};\n\nEJSON.fromJSONValue = function (item) {\n  var changed = fromJSONValueHelper(item);\n\n  if (changed === item && typeof item === \"object\") {\n    item = EJSON.clone(item);\n    adjustTypesFromJSONValue(item);\n    return item;\n  } else {\n    return changed;\n  }\n};\n\nEJSON.stringify = function (item) {\n  return JSON.stringify(EJSON.toJSONValue(item));\n};\n\nEJSON.parse = function (item) {\n  return EJSON.fromJSONValue(JSON.parse(item));\n};\n\nEJSON.isBinary = function (obj) {\n  return typeof Uint8Array !== \"undefined\" && obj instanceof Uint8Array || obj && obj.$Uint8ArrayPolyfill;\n};\n\nEJSON.equals = function (a, b, options) {\n  var i;\n  var keyOrderSensitive = !!(options && options.keyOrderSensitive);\n  if (a === b) return true;\n  if (!a || !b) // if either one is falsy, they'd have to be === to be equal\n    return false;\n  if (!(typeof a === \"object\" && typeof b === \"object\")) return false;\n  if (a instanceof Date && b instanceof Date) return a.valueOf() === b.valueOf();\n\n  if (EJSON.isBinary(a) && EJSON.isBinary(b)) {\n    if (a.length !== b.length) return false;\n\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n\n    return true;\n  }\n\n  if (typeof a.equals === \"function\") return a.equals(b, options);\n\n  if (a instanceof Array) {\n    if (!(b instanceof Array)) return false;\n    if (a.length !== b.length) return false;\n\n    for (i = 0; i < a.length; i++) {\n      if (!EJSON.equals(a[i], b[i], options)) return false;\n    }\n\n    return true;\n  } // fall back to structural equality of objects\n\n\n  var ret;\n\n  if (keyOrderSensitive) {\n    var bKeys = [];\n    lodash_1.default.each(b, function (val, x) {\n      bKeys.push(x);\n    });\n    i = 0;\n    ret = lodash_1.default.every(a, function (val, x) {\n      if (i >= bKeys.length) {\n        return false;\n      }\n\n      if (x !== bKeys[i]) {\n        return false;\n      }\n\n      if (!EJSON.equals(val, b[bKeys[i]], options)) {\n        return false;\n      }\n\n      i++;\n      return true;\n    });\n    return ret && i === bKeys.length;\n  } else {\n    i = 0;\n    ret = lodash_1.default.every(a, function (val, key) {\n      if (!lodash_1.default.has(b, key)) {\n        return false;\n      }\n\n      if (!EJSON.equals(val, b[key], options)) {\n        return false;\n      }\n\n      i++;\n      return true;\n    });\n    return ret && lodash_1.default.size(b) === i;\n  }\n};\n\nEJSON.clone = function (v) {\n  var ret;\n  if (typeof v !== \"object\") return v;\n  if (v === null) return null; // null has typeof \"object\"\n\n  if (v instanceof Date) return new Date(v.getTime());\n\n  if (EJSON.isBinary(v)) {\n    ret = EJSON.newBinary(v.length);\n\n    for (var i = 0; i < v.length; i++) {\n      ret[i] = v[i];\n    }\n\n    return ret;\n  }\n\n  if (lodash_1.default.isArray(v) || lodash_1.default.isArguments(v)) {\n    // For some reason, _.map doesn't work in this context on Opera (weird test\n    // failures).\n    ret = [];\n\n    for (i = 0; i < v.length; i++) ret[i] = EJSON.clone(v[i]);\n\n    return ret;\n  } // handle general user-defined typed Objects if they have a clone method\n\n\n  if (typeof v.clone === \"function\") {\n    return v.clone();\n  } // handle other objects\n\n\n  ret = {};\n  lodash_1.default.each(v, function (value, key) {\n    ret[key] = EJSON.clone(value);\n  });\n  return ret;\n};\n\nexports.default = EJSON;","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/node_modules/minimongo/lib/EJSON.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","lodash_1","require","EJSON","customTypes","addType","name","factory","default","has","Error","builtinConverters","matchJSONValue","obj","size","matchObject","Date","toJSONValue","$date","getTime","fromJSONValue","Uint8Array","$binary","_base64Encode","_base64Decode","isEmpty","some","converter","newObj","each","key","$escape","_isCustomType","$type","typeName","$value","adjustTypesToJSONValue","_adjustTypesToJSONValue","maybeChanged","toJSONValueHelper","undefined","changed","item","i","length","clone","adjustTypesFromJSONValue","_adjustTypesFromJSONValue","fromJSONValueHelper","every","v","k","substr","stringify","JSON","parse","isBinary","$Uint8ArrayPolyfill","equals","a","b","options","keyOrderSensitive","valueOf","Array","ret","bKeys","val","x","push","newBinary","isArray","isArguments"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst lodash_1 = __importDefault(require(\"lodash\"));\nvar EJSON = {};\nvar customTypes = {};\n// Add a custom type, using a method of your choice to get to and\n// from a basic JSON-able representation.  The factory argument\n// is a function of JSON-able --> your object\n// The type you add must have:\n// - A clone() method, so that Meteor can deep-copy it when necessary.\n// - A equals() method, so that Meteor can compare it\n// - A toJSONValue() method, so that Meteor can serialize it\n// - a typeName() method, to show how to look it up in our type table.\n// It is okay if these methods are monkey-patched on.\nEJSON.addType = function (name, factory) {\n    if (lodash_1.default.has(customTypes, name))\n        throw new Error(\"Type \" + name + \" already present\");\n    customTypes[name] = factory;\n};\nvar builtinConverters = [\n    {\n        // Date\n        matchJSONValue: function (obj) {\n            return lodash_1.default.has(obj, \"$date\") && lodash_1.default.size(obj) === 1;\n        },\n        matchObject: function (obj) {\n            return obj instanceof Date;\n        },\n        toJSONValue: function (obj) {\n            return { $date: obj.getTime() };\n        },\n        fromJSONValue: function (obj) {\n            return new Date(obj.$date);\n        }\n    },\n    {\n        // Binary\n        matchJSONValue: function (obj) {\n            return lodash_1.default.has(obj, \"$binary\") && lodash_1.default.size(obj) === 1;\n        },\n        matchObject: function (obj) {\n            return ((typeof Uint8Array !== \"undefined\" && obj instanceof Uint8Array) || (obj && lodash_1.default.has(obj, \"$Uint8ArrayPolyfill\")));\n        },\n        toJSONValue: function (obj) {\n            return { $binary: EJSON._base64Encode(obj) };\n        },\n        fromJSONValue: function (obj) {\n            return EJSON._base64Decode(obj.$binary);\n        }\n    },\n    {\n        // Escaping one level\n        matchJSONValue: function (obj) {\n            return lodash_1.default.has(obj, \"$escape\") && lodash_1.default.size(obj) === 1;\n        },\n        matchObject: function (obj) {\n            if (lodash_1.default.isEmpty(obj) || lodash_1.default.size(obj) > 2) {\n                return false;\n            }\n            return lodash_1.default.some(builtinConverters, function (converter) {\n                return converter.matchJSONValue(obj);\n            });\n        },\n        toJSONValue: function (obj) {\n            var newObj = {};\n            lodash_1.default.each(obj, function (value, key) {\n                newObj[key] = EJSON.toJSONValue(value);\n            });\n            return { $escape: newObj };\n        },\n        fromJSONValue: function (obj) {\n            var newObj = {};\n            lodash_1.default.each(obj.$escape, function (value, key) {\n                newObj[key] = EJSON.fromJSONValue(value);\n            });\n            return newObj;\n        }\n    },\n    {\n        // Custom\n        matchJSONValue: function (obj) {\n            return lodash_1.default.has(obj, \"$type\") && lodash_1.default.has(obj, \"$value\") && lodash_1.default.size(obj) === 2;\n        },\n        matchObject: function (obj) {\n            return EJSON._isCustomType(obj);\n        },\n        toJSONValue: function (obj) {\n            return { $type: obj.typeName(), $value: obj.toJSONValue() };\n        },\n        fromJSONValue: function (obj) {\n            var typeName = obj.$type;\n            var converter = customTypes[typeName];\n            return converter(obj.$value);\n        }\n    }\n];\nEJSON._isCustomType = function (obj) {\n    return (obj &&\n        typeof obj.toJSONValue === \"function\" &&\n        typeof obj.typeName === \"function\" &&\n        lodash_1.default.has(customTypes, obj.typeName()));\n};\n//for both arrays and objects, in-place modification.\nvar adjustTypesToJSONValue = (EJSON._adjustTypesToJSONValue = function (obj) {\n    if (obj === null)\n        return null;\n    var maybeChanged = toJSONValueHelper(obj);\n    if (maybeChanged !== undefined)\n        return maybeChanged;\n    lodash_1.default.each(obj, function (value, key) {\n        if (typeof value !== \"object\" && value !== undefined)\n            return; // continue\n        var changed = toJSONValueHelper(value);\n        if (changed) {\n            obj[key] = changed;\n            return; // on to the next key\n        }\n        // if we get here, value is an object but not adjustable\n        // at this level.  recurse.\n        adjustTypesToJSONValue(value);\n    });\n    return obj;\n});\n// Either return the JSON-compatible version of the argument, or undefined (if\n// the item isn't itself replaceable, but maybe some fields in it are)\nvar toJSONValueHelper = function (item) {\n    for (var i = 0; i < builtinConverters.length; i++) {\n        var converter = builtinConverters[i];\n        if (converter.matchObject(item)) {\n            return converter.toJSONValue(item);\n        }\n    }\n    return undefined;\n};\nEJSON.toJSONValue = function (item) {\n    var changed = toJSONValueHelper(item);\n    if (changed !== undefined)\n        return changed;\n    if (typeof item === \"object\") {\n        item = EJSON.clone(item);\n        adjustTypesToJSONValue(item);\n    }\n    return item;\n};\n//for both arrays and objects. Tries its best to just\n// use the object you hand it, but may return something\n// different if the object you hand it itself needs changing.\nvar adjustTypesFromJSONValue = (EJSON._adjustTypesFromJSONValue = function (obj) {\n    if (obj === null)\n        return null;\n    var maybeChanged = fromJSONValueHelper(obj);\n    if (maybeChanged !== obj)\n        return maybeChanged;\n    lodash_1.default.each(obj, function (value, key) {\n        if (typeof value === \"object\") {\n            var changed = fromJSONValueHelper(value);\n            if (value !== changed) {\n                obj[key] = changed;\n                return;\n            }\n            // if we get here, value is an object but not adjustable\n            // at this level.  recurse.\n            adjustTypesFromJSONValue(value);\n        }\n    });\n    return obj;\n});\n// Either return the argument changed to have the non-json\n// rep of itself (the Object version) or the argument itself.\n// DOES NOT RECURSE.  For actually getting the fully-changed value, use\n// EJSON.fromJSONValue\nvar fromJSONValueHelper = function (value) {\n    if (typeof value === \"object\" && value !== null) {\n        if (lodash_1.default.size(value) <= 2 &&\n            lodash_1.default.every(value, function (v, k) {\n                return typeof k === \"string\" && k.substr(0, 1) === \"$\";\n            })) {\n            for (var i = 0; i < builtinConverters.length; i++) {\n                var converter = builtinConverters[i];\n                if (converter.matchJSONValue(value)) {\n                    return converter.fromJSONValue(value);\n                }\n            }\n        }\n    }\n    return value;\n};\nEJSON.fromJSONValue = function (item) {\n    var changed = fromJSONValueHelper(item);\n    if (changed === item && typeof item === \"object\") {\n        item = EJSON.clone(item);\n        adjustTypesFromJSONValue(item);\n        return item;\n    }\n    else {\n        return changed;\n    }\n};\nEJSON.stringify = function (item) {\n    return JSON.stringify(EJSON.toJSONValue(item));\n};\nEJSON.parse = function (item) {\n    return EJSON.fromJSONValue(JSON.parse(item));\n};\nEJSON.isBinary = function (obj) {\n    return (typeof Uint8Array !== \"undefined\" && obj instanceof Uint8Array) || (obj && obj.$Uint8ArrayPolyfill);\n};\nEJSON.equals = function (a, b, options) {\n    var i;\n    var keyOrderSensitive = !!(options && options.keyOrderSensitive);\n    if (a === b)\n        return true;\n    if (!a || !b)\n        // if either one is falsy, they'd have to be === to be equal\n        return false;\n    if (!(typeof a === \"object\" && typeof b === \"object\"))\n        return false;\n    if (a instanceof Date && b instanceof Date)\n        return a.valueOf() === b.valueOf();\n    if (EJSON.isBinary(a) && EJSON.isBinary(b)) {\n        if (a.length !== b.length)\n            return false;\n        for (i = 0; i < a.length; i++) {\n            if (a[i] !== b[i])\n                return false;\n        }\n        return true;\n    }\n    if (typeof a.equals === \"function\")\n        return a.equals(b, options);\n    if (a instanceof Array) {\n        if (!(b instanceof Array))\n            return false;\n        if (a.length !== b.length)\n            return false;\n        for (i = 0; i < a.length; i++) {\n            if (!EJSON.equals(a[i], b[i], options))\n                return false;\n        }\n        return true;\n    }\n    // fall back to structural equality of objects\n    var ret;\n    if (keyOrderSensitive) {\n        var bKeys = [];\n        lodash_1.default.each(b, function (val, x) {\n            bKeys.push(x);\n        });\n        i = 0;\n        ret = lodash_1.default.every(a, function (val, x) {\n            if (i >= bKeys.length) {\n                return false;\n            }\n            if (x !== bKeys[i]) {\n                return false;\n            }\n            if (!EJSON.equals(val, b[bKeys[i]], options)) {\n                return false;\n            }\n            i++;\n            return true;\n        });\n        return ret && i === bKeys.length;\n    }\n    else {\n        i = 0;\n        ret = lodash_1.default.every(a, function (val, key) {\n            if (!lodash_1.default.has(b, key)) {\n                return false;\n            }\n            if (!EJSON.equals(val, b[key], options)) {\n                return false;\n            }\n            i++;\n            return true;\n        });\n        return ret && lodash_1.default.size(b) === i;\n    }\n};\nEJSON.clone = function (v) {\n    var ret;\n    if (typeof v !== \"object\")\n        return v;\n    if (v === null)\n        return null; // null has typeof \"object\"\n    if (v instanceof Date)\n        return new Date(v.getTime());\n    if (EJSON.isBinary(v)) {\n        ret = EJSON.newBinary(v.length);\n        for (var i = 0; i < v.length; i++) {\n            ret[i] = v[i];\n        }\n        return ret;\n    }\n    if (lodash_1.default.isArray(v) || lodash_1.default.isArguments(v)) {\n        // For some reason, _.map doesn't work in this context on Opera (weird test\n        // failures).\n        ret = [];\n        for (i = 0; i < v.length; i++)\n            ret[i] = EJSON.clone(v[i]);\n        return ret;\n    }\n    // handle general user-defined typed Objects if they have a clone method\n    if (typeof v.clone === \"function\") {\n        return v.clone();\n    }\n    // handle other objects\n    ret = {};\n    lodash_1.default.each(v, function (value, key) {\n        ret[key] = EJSON.clone(value);\n    });\n    return ret;\n};\nexports.default = EJSON;\n"]},"metadata":{},"sourceType":"script"}