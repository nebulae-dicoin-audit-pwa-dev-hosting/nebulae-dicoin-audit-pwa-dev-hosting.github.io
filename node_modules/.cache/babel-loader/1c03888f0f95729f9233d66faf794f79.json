{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/@fuse/core/FuseLayout/FuseLayout.js\";\nimport { useDeepCompareEffect } from '@fuse/hooks';\nimport FuseLayouts from '@fuse/layouts/FuseLayouts';\nimport _ from '@lodash';\nimport AppContext from 'app/AppContext';\nimport { generateSettings, setSettings } from 'app/store/fuse/settingsSlice';\nimport { memo, useContext, useMemo, useCallback, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { matchRoutes } from 'react-router-config';\nimport { useLocation } from 'react-router-dom';\nimport GlobalStyles from '@mui/material/GlobalStyles';\nimport { alpha } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst inputGlobalStyles = /*#__PURE__*/_jsxDEV(GlobalStyles, {\n  styles: theme => ({\n    html: {\n      backgroundColor: `${theme.palette.background.default}!important`,\n      color: `${theme.palette.text.primary}!important`\n    },\n    body: {\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.text.primary\n    },\n    'code:not([class*=\"language-\"])': {\n      color: theme.palette.secondary.dark,\n      backgroundColor: theme.palette.mode === 'light' ? 'rgba(255, 255, 255, .9)' : 'rgba(0, 0, 0, .9)',\n      padding: '2px 3px',\n      borderRadius: 2,\n      lineHeight: 1.7\n    },\n    'table.simple tbody tr td': {\n      borderColor: theme.palette.divider\n    },\n    'table.simple thead tr th': {\n      borderColor: theme.palette.divider\n    },\n    'a:not([role=button]):not(.MuiButtonBase-root)': {\n      color: theme.palette.secondary.main,\n      textDecoration: 'underline',\n      '&:hover': {}\n    },\n    'a.link, a:not([role=button])[target=_blank]': {\n      background: alpha(theme.palette.secondary.main, 0.2),\n      color: 'inherit',\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      textDecoration: 'none',\n      '&:hover': {\n        background: alpha(theme.palette.secondary.main, 0.3),\n        textDecoration: 'none'\n      }\n    },\n    '[class^=\"border-\"]': {\n      borderColor: theme.palette.divider\n    },\n    '[class*=\"border-\"]': {\n      borderColor: theme.palette.divider\n    },\n    hr: {\n      borderColor: theme.palette.divider\n    },\n    '::-webkit-scrollbar-thumb': {\n      boxShadow: `inset 0 0 0 20px ${theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.24)' : 'rgba(255, 255, 255, 0.24)'}`\n    },\n    '::-webkit-scrollbar-thumb:active': {\n      boxShadow: `inset 0 0 0 20px ${theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.37)' : 'rgba(255, 255, 255, 0.37)'}`\n    }\n  })\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this);\n\nfunction FuseLayout(props) {\n  const dispatch = useDispatch();\n  const settings = useSelector(_ref => {\n    let {\n      fuse\n    } = _ref;\n    return fuse.settings.current;\n  });\n  const defaultSettings = useSelector(_ref2 => {\n    let {\n      fuse\n    } = _ref2;\n    return fuse.settings.defaults;\n  });\n  const appContext = useContext(AppContext);\n  const {\n    routes\n  } = appContext;\n  const location = useLocation();\n  const {\n    pathname\n  } = location;\n  const matched = matchRoutes(routes, pathname)[0];\n  const newSettings = useRef(null);\n  const shouldAwaitRender = useCallback(() => {\n    let _newSettings;\n    /**\n     * On Path changed\n     */\n    // if (prevPathname !== pathname) {\n\n\n    if (matched && matched.route.settings) {\n      /**\n       * if matched route has settings\n       */\n      const routeSettings = matched.route.settings;\n      _newSettings = generateSettings(defaultSettings, routeSettings);\n    } else if (!_.isEqual(newSettings.current, defaultSettings)) {\n      /**\n       * Reset to default settings on the new path\n       */\n      _newSettings = _.merge({}, defaultSettings);\n    } else {\n      _newSettings = newSettings.current;\n    }\n\n    if (!_.isEqual(newSettings.current, _newSettings)) {\n      newSettings.current = _newSettings;\n    }\n  }, [defaultSettings, matched]);\n  shouldAwaitRender();\n  useDeepCompareEffect(() => {\n    if (!_.isEqual(newSettings.current, settings)) {\n      dispatch(setSettings(newSettings.current));\n    }\n  }, [dispatch, newSettings.current, settings]); // console.warn('::FuseLayout:: rendered');\n\n  const Layout = useMemo(() => FuseLayouts[settings.layout.style], [settings.layout.style]);\n  return _.isEqual(newSettings.current, settings) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [inputGlobalStyles, /*#__PURE__*/_jsxDEV(Layout, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true) : null;\n}\n\nexport default /*#__PURE__*/memo(FuseLayout);","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/@fuse/core/FuseLayout/FuseLayout.js"],"names":["useDeepCompareEffect","FuseLayouts","_","AppContext","generateSettings","setSettings","memo","useContext","useMemo","useCallback","useRef","useDispatch","useSelector","matchRoutes","useLocation","GlobalStyles","alpha","inputGlobalStyles","theme","html","backgroundColor","palette","background","default","color","text","primary","body","secondary","dark","mode","padding","borderRadius","lineHeight","borderColor","divider","main","textDecoration","borderBottom","hr","boxShadow","FuseLayout","props","dispatch","settings","fuse","current","defaultSettings","defaults","appContext","routes","location","pathname","matched","newSettings","shouldAwaitRender","_newSettings","route","routeSettings","isEqual","merge","Layout","layout","style"],"mappings":";AAAA,SAASA,oBAAT,QAAqC,aAArC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,8BAA9C;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,OAA3B,EAAoCC,WAApC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,KAAT,QAAsB,sBAAtB;;;;AAEA,MAAMC,iBAAiB,gBACrB,QAAC,YAAD;AACE,EAAA,MAAM,EAAGC,KAAD,KAAY;AAClBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,eAAe,EAAG,GAAEF,KAAK,CAACG,OAAN,CAAcC,UAAd,CAAyBC,OAAQ,YADjD;AAEJC,MAAAA,KAAK,EAAG,GAAEN,KAAK,CAACG,OAAN,CAAcI,IAAd,CAAmBC,OAAQ;AAFjC,KADY;AAKlBC,IAAAA,IAAI,EAAE;AACJP,MAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,UAAd,CAAyBC,OADtC;AAEJC,MAAAA,KAAK,EAAEN,KAAK,CAACG,OAAN,CAAcI,IAAd,CAAmBC;AAFtB,KALY;AASlB,sCAAkC;AAChCF,MAAAA,KAAK,EAAEN,KAAK,CAACG,OAAN,CAAcO,SAAd,CAAwBC,IADC;AAEhCT,MAAAA,eAAe,EACbF,KAAK,CAACG,OAAN,CAAcS,IAAd,KAAuB,OAAvB,GAAiC,yBAAjC,GAA6D,mBAH/B;AAIhCC,MAAAA,OAAO,EAAE,SAJuB;AAKhCC,MAAAA,YAAY,EAAE,CALkB;AAMhCC,MAAAA,UAAU,EAAE;AANoB,KAThB;AAiBlB,gCAA4B;AAC1BC,MAAAA,WAAW,EAAEhB,KAAK,CAACG,OAAN,CAAcc;AADD,KAjBV;AAoBlB,gCAA4B;AAC1BD,MAAAA,WAAW,EAAEhB,KAAK,CAACG,OAAN,CAAcc;AADD,KApBV;AAuBlB,qDAAiD;AAC/CX,MAAAA,KAAK,EAAEN,KAAK,CAACG,OAAN,CAAcO,SAAd,CAAwBQ,IADgB;AAE/CC,MAAAA,cAAc,EAAE,WAF+B;AAG/C,iBAAW;AAHoC,KAvB/B;AA4BlB,mDAA+C;AAC7Cf,MAAAA,UAAU,EAAEN,KAAK,CAACE,KAAK,CAACG,OAAN,CAAcO,SAAd,CAAwBQ,IAAzB,EAA+B,GAA/B,CAD4B;AAE7CZ,MAAAA,KAAK,EAAE,SAFsC;AAG7Cc,MAAAA,YAAY,EAAG,aAAYpB,KAAK,CAACG,OAAN,CAAcc,OAAQ,EAHJ;AAI7CE,MAAAA,cAAc,EAAE,MAJ6B;AAK7C,iBAAW;AACTf,QAAAA,UAAU,EAAEN,KAAK,CAACE,KAAK,CAACG,OAAN,CAAcO,SAAd,CAAwBQ,IAAzB,EAA+B,GAA/B,CADR;AAETC,QAAAA,cAAc,EAAE;AAFP;AALkC,KA5B7B;AAsClB,0BAAsB;AACpBH,MAAAA,WAAW,EAAEhB,KAAK,CAACG,OAAN,CAAcc;AADP,KAtCJ;AAyClB,0BAAsB;AACpBD,MAAAA,WAAW,EAAEhB,KAAK,CAACG,OAAN,CAAcc;AADP,KAzCJ;AA4ClBI,IAAAA,EAAE,EAAE;AACFL,MAAAA,WAAW,EAAEhB,KAAK,CAACG,OAAN,CAAcc;AADzB,KA5Cc;AAgDlB,iCAA6B;AAC3BK,MAAAA,SAAS,EAAG,oBACVtB,KAAK,CAACG,OAAN,CAAcS,IAAd,KAAuB,OAAvB,GAAiC,qBAAjC,GAAyD,2BAC1D;AAH0B,KAhDX;AAqDlB,wCAAoC;AAClCU,MAAAA,SAAS,EAAG,oBACVtB,KAAK,CAACG,OAAN,CAAcS,IAAd,KAAuB,OAAvB,GAAiC,qBAAjC,GAAyD,2BAC1D;AAHiC;AArDlB,GAAZ;AADV;AAAA;AAAA;AAAA;AAAA,QADF;;AAgEA,SAASW,UAAT,CAAoBC,KAApB,EAA2B;AACzB,QAAMC,QAAQ,GAAGhC,WAAW,EAA5B;AACA,QAAMiC,QAAQ,GAAGhC,WAAW,CAAC;AAAA,QAAC;AAAEiC,MAAAA;AAAF,KAAD;AAAA,WAAcA,IAAI,CAACD,QAAL,CAAcE,OAA5B;AAAA,GAAD,CAA5B;AACA,QAAMC,eAAe,GAAGnC,WAAW,CAAC;AAAA,QAAC;AAAEiC,MAAAA;AAAF,KAAD;AAAA,WAAcA,IAAI,CAACD,QAAL,CAAcI,QAA5B;AAAA,GAAD,CAAnC;AAEA,QAAMC,UAAU,GAAG1C,UAAU,CAACJ,UAAD,CAA7B;AACA,QAAM;AAAE+C,IAAAA;AAAF,MAAaD,UAAnB;AAEA,QAAME,QAAQ,GAAGrC,WAAW,EAA5B;AACA,QAAM;AAAEsC,IAAAA;AAAF,MAAeD,QAArB;AACA,QAAME,OAAO,GAAGxC,WAAW,CAACqC,MAAD,EAASE,QAAT,CAAX,CAA8B,CAA9B,CAAhB;AACA,QAAME,WAAW,GAAG5C,MAAM,CAAC,IAAD,CAA1B;AAEA,QAAM6C,iBAAiB,GAAG9C,WAAW,CAAC,MAAM;AAC1C,QAAI+C,YAAJ;AACA;AACJ;AACA;AACI;;;AACA,QAAIH,OAAO,IAAIA,OAAO,CAACI,KAAR,CAAcb,QAA7B,EAAuC;AACrC;AACN;AACA;AAEM,YAAMc,aAAa,GAAGL,OAAO,CAACI,KAAR,CAAcb,QAApC;AAEAY,MAAAA,YAAY,GAAGpD,gBAAgB,CAAC2C,eAAD,EAAkBW,aAAlB,CAA/B;AACD,KARD,MAQO,IAAI,CAACxD,CAAC,CAACyD,OAAF,CAAUL,WAAW,CAACR,OAAtB,EAA+BC,eAA/B,CAAL,EAAsD;AAC3D;AACN;AACA;AACMS,MAAAA,YAAY,GAAGtD,CAAC,CAAC0D,KAAF,CAAQ,EAAR,EAAYb,eAAZ,CAAf;AACD,KALM,MAKA;AACLS,MAAAA,YAAY,GAAGF,WAAW,CAACR,OAA3B;AACD;;AAED,QAAI,CAAC5C,CAAC,CAACyD,OAAF,CAAUL,WAAW,CAACR,OAAtB,EAA+BU,YAA/B,CAAL,EAAmD;AACjDF,MAAAA,WAAW,CAACR,OAAZ,GAAsBU,YAAtB;AACD;AACF,GA1BoC,EA0BlC,CAACT,eAAD,EAAkBM,OAAlB,CA1BkC,CAArC;AA4BAE,EAAAA,iBAAiB;AAEjBvD,EAAAA,oBAAoB,CAAC,MAAM;AACzB,QAAI,CAACE,CAAC,CAACyD,OAAF,CAAUL,WAAW,CAACR,OAAtB,EAA+BF,QAA/B,CAAL,EAA+C;AAC7CD,MAAAA,QAAQ,CAACtC,WAAW,CAACiD,WAAW,CAACR,OAAb,CAAZ,CAAR;AACD;AACF,GAJmB,EAIjB,CAACH,QAAD,EAAWW,WAAW,CAACR,OAAvB,EAAgCF,QAAhC,CAJiB,CAApB,CA3CyB,CAiDzB;;AAEA,QAAMiB,MAAM,GAAGrD,OAAO,CAAC,MAAMP,WAAW,CAAC2C,QAAQ,CAACkB,MAAT,CAAgBC,KAAjB,CAAlB,EAA2C,CAACnB,QAAQ,CAACkB,MAAT,CAAgBC,KAAjB,CAA3C,CAAtB;AAEA,SAAO7D,CAAC,CAACyD,OAAF,CAAUL,WAAW,CAACR,OAAtB,EAA+BF,QAA/B,iBACL;AAAA,eACG3B,iBADH,eAEE,QAAC,MAAD,OAAYyB;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADK,GAKH,IALJ;AAMD;;AAED,4BAAepC,IAAI,CAACmC,UAAD,CAAnB","sourcesContent":["import { useDeepCompareEffect } from '@fuse/hooks';\nimport FuseLayouts from '@fuse/layouts/FuseLayouts';\nimport _ from '@lodash';\nimport AppContext from 'app/AppContext';\nimport { generateSettings, setSettings } from 'app/store/fuse/settingsSlice';\nimport { memo, useContext, useMemo, useCallback, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { matchRoutes } from 'react-router-config';\nimport { useLocation } from 'react-router-dom';\nimport GlobalStyles from '@mui/material/GlobalStyles';\nimport { alpha } from '@mui/material/styles';\n\nconst inputGlobalStyles = (\n  <GlobalStyles\n    styles={(theme) => ({\n      html: {\n        backgroundColor: `${theme.palette.background.default}!important`,\n        color: `${theme.palette.text.primary}!important`,\n      },\n      body: {\n        backgroundColor: theme.palette.background.default,\n        color: theme.palette.text.primary,\n      },\n      'code:not([class*=\"language-\"])': {\n        color: theme.palette.secondary.dark,\n        backgroundColor:\n          theme.palette.mode === 'light' ? 'rgba(255, 255, 255, .9)' : 'rgba(0, 0, 0, .9)',\n        padding: '2px 3px',\n        borderRadius: 2,\n        lineHeight: 1.7,\n      },\n      'table.simple tbody tr td': {\n        borderColor: theme.palette.divider,\n      },\n      'table.simple thead tr th': {\n        borderColor: theme.palette.divider,\n      },\n      'a:not([role=button]):not(.MuiButtonBase-root)': {\n        color: theme.palette.secondary.main,\n        textDecoration: 'underline',\n        '&:hover': {},\n      },\n      'a.link, a:not([role=button])[target=_blank]': {\n        background: alpha(theme.palette.secondary.main, 0.2),\n        color: 'inherit',\n        borderBottom: `1px solid ${theme.palette.divider}`,\n        textDecoration: 'none',\n        '&:hover': {\n          background: alpha(theme.palette.secondary.main, 0.3),\n          textDecoration: 'none',\n        },\n      },\n      '[class^=\"border-\"]': {\n        borderColor: theme.palette.divider,\n      },\n      '[class*=\"border-\"]': {\n        borderColor: theme.palette.divider,\n      },\n      hr: {\n        borderColor: theme.palette.divider,\n      },\n\n      '::-webkit-scrollbar-thumb': {\n        boxShadow: `inset 0 0 0 20px ${\n          theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.24)' : 'rgba(255, 255, 255, 0.24)'\n        }`,\n      },\n      '::-webkit-scrollbar-thumb:active': {\n        boxShadow: `inset 0 0 0 20px ${\n          theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.37)' : 'rgba(255, 255, 255, 0.37)'\n        }`,\n      },\n    })}\n  />\n);\n\nfunction FuseLayout(props) {\n  const dispatch = useDispatch();\n  const settings = useSelector(({ fuse }) => fuse.settings.current);\n  const defaultSettings = useSelector(({ fuse }) => fuse.settings.defaults);\n\n  const appContext = useContext(AppContext);\n  const { routes } = appContext;\n\n  const location = useLocation();\n  const { pathname } = location;\n  const matched = matchRoutes(routes, pathname)[0];\n  const newSettings = useRef(null);\n\n  const shouldAwaitRender = useCallback(() => {\n    let _newSettings;\n    /**\n     * On Path changed\n     */\n    // if (prevPathname !== pathname) {\n    if (matched && matched.route.settings) {\n      /**\n       * if matched route has settings\n       */\n\n      const routeSettings = matched.route.settings;\n\n      _newSettings = generateSettings(defaultSettings, routeSettings);\n    } else if (!_.isEqual(newSettings.current, defaultSettings)) {\n      /**\n       * Reset to default settings on the new path\n       */\n      _newSettings = _.merge({}, defaultSettings);\n    } else {\n      _newSettings = newSettings.current;\n    }\n\n    if (!_.isEqual(newSettings.current, _newSettings)) {\n      newSettings.current = _newSettings;\n    }\n  }, [defaultSettings, matched]);\n\n  shouldAwaitRender();\n\n  useDeepCompareEffect(() => {\n    if (!_.isEqual(newSettings.current, settings)) {\n      dispatch(setSettings(newSettings.current));\n    }\n  }, [dispatch, newSettings.current, settings]);\n\n  // console.warn('::FuseLayout:: rendered');\n\n  const Layout = useMemo(() => FuseLayouts[settings.layout.style], [settings.layout.style]);\n\n  return _.isEqual(newSettings.current, settings) ? (\n    <>\n      {inputGlobalStyles}\n      <Layout {...props} />\n    </>\n  ) : null;\n}\n\nexport default memo(FuseLayout);\n"]},"metadata":{},"sourceType":"module"}