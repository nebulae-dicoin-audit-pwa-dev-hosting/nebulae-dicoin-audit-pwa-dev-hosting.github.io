{"ast":null,"code":"import minimongo from 'minimongo';\nconst {\n  IndexedDb\n} = minimongo;\nlet instance = null;\n\nclass MinimongoDB {\n  constructor(collections, onInitCallback) {\n    this.db = new IndexedDb({\n      namespace: 'GTPC'\n    }, function () {\n      console.log(`MiniMongo/IndexedDb connected`);\n      if (onInitCallback) onInitCallback();\n      return true;\n    }, function (error) {\n      console.error(`MiniMongo/IndexedDb could not connect`);\n      return false;\n    });\n\n    for (const collection of collections) {\n      this.db.addCollection(collection, function () {\n        console.log(`Collection Created ${collection}`);\n      });\n    }\n  }\n\n}\n\nfunction singleton() {\n  if (!instance) {\n    instance = new MinimongoDB(['Trip', 'Record']);\n  }\n\n  return instance;\n}\n\nexport {\n/** @returns {MinimongoDB} */\nMinimongoDB,\n/** @returns {MinimongoDB} */\nsingleton };","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/app/main/travels/tools/dicoin-engine/MinimongoDB/MinimongoDB.js"],"names":["minimongo","IndexedDb","instance","MinimongoDB","constructor","collections","onInitCallback","db","namespace","console","log","error","collection","addCollection","singleton"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAgBD,SAAtB;AACA,IAAIE,QAAQ,GAAG,IAAf;;AACA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,WAAW,CAACC,WAAD,EAAcC,cAAd,EAA8B;AACvC,SAAKC,EAAL,GAAU,IAAIN,SAAJ,CACR;AAAEO,MAAAA,SAAS,EAAE;AAAb,KADQ,EAER,YAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAa,+BAAb;AACA,UAAIJ,cAAJ,EAAoBA,cAAc;AAClC,aAAO,IAAP;AACD,KANO,EAOR,UAAUK,KAAV,EAAiB;AACfF,MAAAA,OAAO,CAACE,KAAR,CAAe,uCAAf;AACA,aAAO,KAAP;AACD,KAVO,CAAV;;AAaA,SAAK,MAAMC,UAAX,IAAyBP,WAAzB,EAAsC;AACpC,WAAKE,EAAL,CAAQM,aAAR,CAAsBD,UAAtB,EAAkC,YAAY;AAC5CH,QAAAA,OAAO,CAACC,GAAR,CAAa,sBAAqBE,UAAW,EAA7C;AACD,OAFD;AAGD;AACF;;AApBe;;AAuBlB,SAASE,SAAT,GAAqB;AACnB,MAAI,CAACZ,QAAL,EAAe;AACbA,IAAAA,QAAQ,GAAG,IAAIC,WAAJ,CAAgB,CAAC,MAAD,EAAS,QAAT,CAAhB,CAAX;AACD;;AACD,SAAOD,QAAP;AACD;;AAED;AACE;AACAC,WAFF;AAGE;AACAW,SAJF","sourcesContent":["import minimongo from 'minimongo';\n\nconst { IndexedDb } = minimongo;\nlet instance = null;\nclass MinimongoDB {\n  constructor(collections, onInitCallback) {\n    this.db = new IndexedDb(\n      { namespace: 'GTPC' },\n      function () {\n        console.log(`MiniMongo/IndexedDb connected`);\n        if (onInitCallback) onInitCallback();\n        return true;\n      },\n      function (error) {\n        console.error(`MiniMongo/IndexedDb could not connect`);\n        return false;\n      }\n    );\n\n    for (const collection of collections) {\n      this.db.addCollection(collection, function () {\n        console.log(`Collection Created ${collection}`);\n      });\n    }\n  }\n}\n\nfunction singleton() {\n  if (!instance) {\n    instance = new MinimongoDB(['Trip', 'Record']);\n  }\n  return instance;\n}\n\nexport {\n  /** @returns {MinimongoDB} */\n  MinimongoDB,\n  /** @returns {MinimongoDB} */\n  singleton,\n};\n"]},"metadata":{},"sourceType":"module"}