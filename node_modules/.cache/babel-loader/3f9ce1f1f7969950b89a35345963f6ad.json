{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/app/main/travels/contentExecution/Deck.js\";\nimport { useState, useContext } from 'react';\nimport { useSprings, animated } from '@react-spring/web';\nimport { useDrag } from '@use-gesture/react';\nimport { makeStyles } from '@mui/styles';\nimport TravelContext from '../travel-context/TravelContext';\nimport BtnActionsExecution from './BtnActionsExecution';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  /**/\n  deck: {\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    right: '0',\n    willChange: 'transform',\n    background: 'white',\n    zIndex: '10',\n    '& > div': {\n      touchAction: 'none',\n      willChange: 'transform'\n    }\n  },\n  deckTwo: {\n    position: 'absolute',\n    bottom: '0',\n    left: '0',\n    right: '0',\n    willChange: 'transform',\n    background: 'white',\n    zIndex: '10',\n    '& > div': {\n      touchAction: 'none',\n      willChange: 'transform'\n    }\n  }\n});\n\nconst to = i => ({\n  x: 0,\n  y: i * -4,\n  scale: 1,\n  rot: -10 + Math.random() * 20,\n  delay: i * 100\n});\n\nconst from = _i => ({\n  x: 0,\n  rot: 0,\n  scale: 1.5,\n  y: _i === 0 ? -1000 : 1000\n});\n\nexport default function Deck(prop) {\n  const {\n    setIndexDragModified,\n    accumulatorTimeThreshold\n  } = prop;\n  const {\n    cards,\n    hadleCloseBtnDrag,\n    openCard,\n    displayBtnDisabled,\n    setDisplayBtnDisabled,\n    progressLoading,\n    setProgressLoading,\n    setAvailableHeight\n  } = useContext(TravelContext);\n  const classes = useStyles();\n  const [gone] = useState(() => new Set());\n  const [props, api] = useSprings(cards.length, i => ({ ...to(i),\n    from: from(i)\n  }));\n\n  if (gone.size >= 1 && !displayBtnDisabled) {\n    setDisplayBtnDisabled(true);\n  }\n\n  if (progressLoading) {\n    setProgressLoading(false);\n  }\n\n  const bind = useDrag(_ref => {\n    let {\n      args: [index],\n      active,\n      movement: [mx],\n      direction: [xDir],\n      velocity: [vx]\n    } = _ref;\n    const trigger = vx > 0.2; // If you flick hard enough it should trigger the card to fly out\n\n    if (!active && trigger) gone.add(index); // If button/finger's up and trigger velocity is reached, we flag the card ready to fly out\n\n    api.start(i => {\n      if (index !== i) return; // We're only interested in changing spring-data for the current spring\n\n      const isGone = gone.has(index);\n      const x = isGone ? (300 + window.innerWidth) * xDir : active ? mx : 0; // When a card is gone it flys out left or right, otherwise goes back to zero\n\n      const rot = mx / 100 + (isGone ? xDir * 10 * vx : 0); // How much the card tilts, flicking it harder makes it rotate faster\n\n      const scale = active ? 1.1 : 1; // Active cards lift up a bit\n\n      return {\n        x,\n        rot,\n        scale,\n        delay: undefined,\n        config: {\n          friction: 50,\n          tension: active ? 800 : isGone ? 200 : 500\n        }\n      };\n    });\n\n    if (!active && gone.size === cards.length && openCard) {\n      setTimeout(() => {\n        hadleCloseBtnDrag();\n        gone.clear();\n        api.start(i => to(i));\n      }, 600);\n    }\n\n    if (!active && gone.size === cards.length) {\n      setAvailableHeight(window.innerHeight - 210);\n      setIndexDragModified(0);\n    } else if (Array.from(gone).some(g => g === 1) && !active && index === 1) {\n      setAvailableHeight(window.innerHeight - 373);\n      setIndexDragModified(1);\n    } else if (Array.from(gone).some(g => g === 0) && !active && index === 0) {\n      setAvailableHeight(window.innerHeight - 373);\n      setIndexDragModified(0);\n    } else if (!Array.from(gone).some(g => g === 1) && !active && index === 1) {\n      setIndexDragModified(Array.from(gone).some(g => g === 0) ? 0 : 1);\n    } else if (!Array.from(gone).some(g => g === 0) && !active && index === 0) {\n      setIndexDragModified(1);\n    }\n  }); // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.map((_ref2, i) => {\n      let {\n        x,\n        y,\n        rot,\n        scale\n      } = _ref2;\n      const type = i === 0 ? 'top' : 'bot';\n      return /*#__PURE__*/_jsxDEV(animated.div, {\n        className: i === 0 ? classes.deck : classes.deckTwo,\n        style: {\n          x,\n          y\n        },\n        children: /*#__PURE__*/_jsxDEV(animated.div, { ...bind(i),\n          style: {\n            transform: to([rot, scale])\n          },\n          children: /*#__PURE__*/_jsxDEV(BtnActionsExecution, {\n            type,\n            accumulatorTimeThreshold\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n}","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/app/main/travels/contentExecution/Deck.js"],"names":["useState","useContext","useSprings","animated","useDrag","makeStyles","TravelContext","BtnActionsExecution","useStyles","deck","position","top","left","right","willChange","background","zIndex","touchAction","deckTwo","bottom","to","i","x","y","scale","rot","Math","random","delay","from","_i","Deck","prop","setIndexDragModified","accumulatorTimeThreshold","cards","hadleCloseBtnDrag","openCard","displayBtnDisabled","setDisplayBtnDisabled","progressLoading","setProgressLoading","setAvailableHeight","classes","gone","Set","props","api","length","size","bind","args","index","active","movement","mx","direction","xDir","velocity","vx","trigger","add","start","isGone","has","window","innerWidth","undefined","config","friction","tension","setTimeout","clear","innerHeight","Array","some","g","map","type","transform"],"mappings":"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","sourcesContent":["import { useState, useContext } from 'react';\nimport { useSprings, animated } from '@react-spring/web';\nimport { useDrag } from '@use-gesture/react';\n\nimport { makeStyles } from '@mui/styles';\nimport TravelContext from '../travel-context/TravelContext';\nimport BtnActionsExecution from './BtnActionsExecution';\n\nconst useStyles = makeStyles({\n  /**/\n  deck: {\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    right: '0',\n    willChange: 'transform',\n    background: 'white',\n    zIndex: '10',\n    '& > div': {\n      touchAction: 'none',\n      willChange: 'transform',\n    },\n  },\n\n  deckTwo: {\n    position: 'absolute',\n    bottom: '0',\n    left: '0',\n    right: '0',\n    willChange: 'transform',\n    background: 'white',\n    zIndex: '10',\n    '& > div': {\n      touchAction: 'none',\n      willChange: 'transform',\n    },\n  },\n});\n\nconst to = (i: number) => ({\n  x: 0,\n  y: i * -4,\n  scale: 1,\n  rot: -10 + Math.random() * 20,\n  delay: i * 100,\n});\n\nconst from = (_i: number) => ({\n  x: 0,\n  rot: 0,\n  scale: 1.5,\n  y: _i === 0 ? -1000 : 1000,\n});\n\nexport default function Deck(prop) {\n  const { setIndexDragModified, accumulatorTimeThreshold } = prop;\n  const {\n    cards,\n    hadleCloseBtnDrag,\n    openCard,\n    displayBtnDisabled,\n    setDisplayBtnDisabled,\n    progressLoading,\n    setProgressLoading,\n    setAvailableHeight    \n  } = useContext(TravelContext);\n  const classes = useStyles();\n\n  const [gone] = useState(() => new Set());\n  const [props, api] = useSprings(cards.length, (i) => ({\n    ...to(i),\n    from: from(i),\n  }));\n\n  if (gone.size >= 1 && !displayBtnDisabled) {\n    setDisplayBtnDisabled(true);\n  }\n\n  if (progressLoading) {\n    setProgressLoading(false);\n  }\n\n  const bind = useDrag(\n    ({ args: [index], active, movement: [mx], direction: [xDir], velocity: [vx] }) => {\n      const trigger = vx > 0.2; // If you flick hard enough it should trigger the card to fly out\n      if (!active && trigger) gone.add(index); // If button/finger's up and trigger velocity is reached, we flag the card ready to fly out\n      api.start((i) => {\n        if (index !== i) return; // We're only interested in changing spring-data for the current spring\n        const isGone = gone.has(index);\n        const x = isGone ? (300 + window.innerWidth) * xDir : active ? mx : 0; // When a card is gone it flys out left or right, otherwise goes back to zero\n        const rot = mx / 100 + (isGone ? xDir * 10 * vx : 0); // How much the card tilts, flicking it harder makes it rotate faster\n        const scale = active ? 1.1 : 1; // Active cards lift up a bit\n\n        return {\n          x,\n          rot,\n          scale,\n          delay: undefined,\n          config: { friction: 50, tension: active ? 800 : isGone ? 200 : 500 },\n        };\n      });\n      if (!active && gone.size === cards.length && openCard) {\n        setTimeout(() => {\n          hadleCloseBtnDrag();\n          gone.clear();\n          api.start((i) => to(i));\n        }, 600);\n      }\n\n      if (!active && gone.size === cards.length) {\n        setAvailableHeight(window.innerHeight - 210);\n        setIndexDragModified(0);\n      } else if (Array.from(gone).some((g) => g === 1) && !active && index === 1) {\n        setAvailableHeight(window.innerHeight - 373);\n        setIndexDragModified(1);\n      } else if (Array.from(gone).some((g) => g === 0) && !active && index === 0) {\n        setAvailableHeight(window.innerHeight - 373);\n        setIndexDragModified(0);\n      } else if (!Array.from(gone).some((g) => g === 1) && !active && index === 1) {\n        setIndexDragModified(Array.from(gone).some((g) => g === 0) ? 0 : 1);\n      } else if (!Array.from(gone).some((g) => g === 0) && !active && index === 0) {\n        setIndexDragModified(1);\n      }\n    }\n  );\n\n  // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\n  return (\n    <>\n      {props.map(({ x, y, rot, scale }, i) => {\n        const type = i === 0 ? 'top' : 'bot';\n\n        return (\n          <animated.div\n            className={i === 0 ? classes.deck : classes.deckTwo}\n            key={i}\n            style={{ x, y }}\n          >\n            <animated.div\n              {...bind(i)}\n              style={{\n                transform: to([rot, scale]),\n              }}\n            >\n              <BtnActionsExecution {...{ type, accumulatorTimeThreshold }} />\n            </animated.div>\n          </animated.div>\n        );\n      })}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}