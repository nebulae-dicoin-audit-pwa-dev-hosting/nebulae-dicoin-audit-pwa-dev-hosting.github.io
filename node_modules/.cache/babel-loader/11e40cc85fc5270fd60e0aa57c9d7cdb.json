{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CheckboxInput = function (_React$Component) {\n  _inherits(CheckboxInput, _React$Component);\n\n  function CheckboxInput() {\n    _classCallCheck(this, CheckboxInput);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  CheckboxInput.prototype.render = function render() {\n    var _props = this.props,\n        lockId = _props.lockId,\n        name = _props.name,\n        ariaLabel = _props.ariaLabel,\n        placeholder = _props.placeholder,\n        checked = _props.checked,\n        placeholderHTML = _props.placeholderHTML;\n    return _react2.default.createElement(\"div\", {\n      className: \"auth0-lock-input-checkbox\"\n    }, _react2.default.createElement(\"label\", null, _react2.default.createElement(\"input\", {\n      id: lockId + \"-\" + name,\n      type: \"checkbox\",\n      checked: checked === 'true',\n      onChange: this.handleOnChange.bind(this),\n      name: name,\n      \"aria-label\": ariaLabel || name\n    }), placeholderHTML ? // placeholderHTML allows raw HTML\n    // eslint-disable-next-line react/no-danger\n    _react2.default.createElement(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: placeholderHTML\n      }\n    }) : _react2.default.createElement(\"span\", null, placeholder)));\n  };\n\n  CheckboxInput.prototype.handleOnChange = function handleOnChange(e) {\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  };\n\n  return CheckboxInput;\n}(_react2.default.Component);\n\nexports.default = CheckboxInput;","map":null,"metadata":{},"sourceType":"script"}