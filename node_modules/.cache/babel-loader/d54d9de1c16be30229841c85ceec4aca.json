{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.compileSort = exports.compileDocumentSelector = void 0;\n/*\n========================================\nMeteor is licensed under the MIT License\n========================================\n\nCopyright (C) 2011--2012 Meteor Development Group\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n====================================================================\nThis license applies to all code in Meteor that is not an externally\nmaintained library. Externally maintained libraries have their own\nlicenses, included below:\n====================================================================\n\n*/\n\nconst EJSON_1 = __importDefault(require(\"./EJSON\"));\n\nconst lodash_1 = __importDefault(require(\"lodash\"));\n\nvar LocalCollection = {}; // Like _.isArray, but doesn't regard polyfilled Uint8Arrays on old browsers as\n// arrays.\n\nvar isArray = function (x) {\n  return lodash_1.default.isArray(x) && !EJSON_1.default.isBinary(x);\n};\n\nvar _anyIfArray = function (x, f) {\n  if (isArray(x)) return lodash_1.default.some(x, f);\n  return f(x);\n};\n\nvar _anyIfArrayPlus = function (x, f) {\n  if (f(x)) return true;\n  return isArray(x) && lodash_1.default.some(x, f);\n};\n\nvar hasOperators = function (valueSelector) {\n  var theseAreOperators = undefined;\n\n  for (var selKey in valueSelector) {\n    var thisIsOperator = selKey.substr(0, 1) === \"$\";\n\n    if (theseAreOperators === undefined) {\n      theseAreOperators = thisIsOperator;\n    } else if (theseAreOperators !== thisIsOperator) {\n      throw new Error(\"Inconsistent selector: \" + valueSelector);\n    }\n  }\n\n  return !!theseAreOperators; // {} has no operators\n};\n\nvar compileValueSelector = function (valueSelector) {\n  if (valueSelector == null) {\n    // undefined or null\n    return function (value) {\n      return _anyIfArray(value, function (x) {\n        return x == null; // undefined or null\n      });\n    };\n  } // Selector is a non-null primitive (and not an array or RegExp either).\n\n\n  if (!lodash_1.default.isObject(valueSelector)) {\n    return function (value) {\n      return _anyIfArray(value, function (x) {\n        return x === valueSelector;\n      });\n    };\n  }\n\n  if (valueSelector instanceof RegExp) {\n    return function (value) {\n      if (value === undefined) return false;\n      return _anyIfArray(value, function (x) {\n        return valueSelector.test(x);\n      });\n    };\n  } // Arrays match either identical arrays or arrays that contain it as a value.\n\n\n  if (isArray(valueSelector)) {\n    return function (value) {\n      if (!isArray(value)) return false;\n      return _anyIfArrayPlus(value, function (x) {\n        return LocalCollection._f._equal(valueSelector, x);\n      });\n    };\n  } // It's an object, but not an array or regexp.\n\n\n  if (hasOperators(valueSelector)) {\n    var operatorFunctions = [];\n    lodash_1.default.each(valueSelector, function (operand, operator) {\n      if (!lodash_1.default.has(VALUE_OPERATORS, operator)) throw new Error(\"Unrecognized operator: \" + operator);\n      operatorFunctions.push(VALUE_OPERATORS[operator](operand, valueSelector[\"$options\"]));\n    });\n    return function (value) {\n      return lodash_1.default.every(operatorFunctions, function (f) {\n        return f(value);\n      });\n    };\n  } // It's a literal; compare value (or element of value array) directly to the\n  // selector.\n\n\n  return function (value) {\n    return _anyIfArray(value, function (x) {\n      return LocalCollection._f._equal(valueSelector, x);\n    });\n  };\n}; // XXX can factor out common logic below\n\n\nvar LOGICAL_OPERATORS = {\n  $and: function (subSelector) {\n    if (!isArray(subSelector) || lodash_1.default.isEmpty(subSelector)) throw Error(\"$and/$or/$nor must be nonempty array\");\n    var subSelectorFunctions = lodash_1.default.map(subSelector, compileDocumentSelector);\n    return function (doc) {\n      return lodash_1.default.every(subSelectorFunctions, function (f) {\n        return f(doc);\n      });\n    };\n  },\n  $or: function (subSelector) {\n    if (!isArray(subSelector) || lodash_1.default.isEmpty(subSelector)) throw Error(\"$and/$or/$nor must be nonempty array\");\n    var subSelectorFunctions = lodash_1.default.map(subSelector, compileDocumentSelector);\n    return function (doc) {\n      return lodash_1.default.some(subSelectorFunctions, function (f) {\n        return f(doc);\n      });\n    };\n  },\n  $nor: function (subSelector) {\n    if (!isArray(subSelector) || lodash_1.default.isEmpty(subSelector)) throw Error(\"$and/$or/$nor must be nonempty array\");\n    var subSelectorFunctions = lodash_1.default.map(subSelector, compileDocumentSelector);\n    return function (doc) {\n      return lodash_1.default.every(subSelectorFunctions, function (f) {\n        return !f(doc);\n      });\n    };\n  },\n  $where: function (selectorValue) {\n    if (!(selectorValue instanceof Function)) {\n      selectorValue = Function(\"return \" + selectorValue);\n    }\n\n    return function (doc) {\n      return selectorValue.call(doc);\n    };\n  }\n};\nvar VALUE_OPERATORS = {\n  $in: function (operand) {\n    if (!isArray(operand)) throw new Error(\"Argument to $in must be array\"); // Create index if all strings\n\n    var index = null;\n    if (lodash_1.default.every(operand, lodash_1.default.isString)) index = lodash_1.default.keyBy(operand);\n    return function (value) {\n      return _anyIfArrayPlus(value, function (x) {\n        if (lodash_1.default.isString(x) && index !== null) return index[x] != undefined;\n        return lodash_1.default.some(operand, function (operandElt) {\n          return LocalCollection._f._equal(operandElt, x);\n        });\n      });\n    };\n  },\n  $all: function (operand) {\n    if (!isArray(operand)) throw new Error(\"Argument to $all must be array\");\n    return function (value) {\n      if (!isArray(value)) return false;\n      return lodash_1.default.every(operand, function (operandElt) {\n        return lodash_1.default.some(value, function (valueElt) {\n          return LocalCollection._f._equal(operandElt, valueElt);\n        });\n      });\n    };\n  },\n  $lt: function (operand) {\n    return function (value) {\n      return _anyIfArray(value, function (x) {\n        return LocalCollection._f._cmp(x, operand) < 0;\n      });\n    };\n  },\n  $lte: function (operand) {\n    return function (value) {\n      return _anyIfArray(value, function (x) {\n        return LocalCollection._f._cmp(x, operand) <= 0;\n      });\n    };\n  },\n  $gt: function (operand) {\n    return function (value) {\n      return _anyIfArray(value, function (x) {\n        return LocalCollection._f._cmp(x, operand) > 0;\n      });\n    };\n  },\n  $gte: function (operand) {\n    return function (value) {\n      return _anyIfArray(value, function (x) {\n        return LocalCollection._f._cmp(x, operand) >= 0;\n      });\n    };\n  },\n  $ne: function (operand) {\n    return function (value) {\n      return !_anyIfArrayPlus(value, function (x) {\n        return LocalCollection._f._equal(x, operand);\n      });\n    };\n  },\n  $nin: function (operand) {\n    if (!isArray(operand)) throw new Error(\"Argument to $nin must be array\");\n    var inFunction = VALUE_OPERATORS.$in(operand);\n    return function (value) {\n      // Field doesn't exist, so it's not-in operand\n      if (value === undefined) return true;\n      return !inFunction(value);\n    };\n  },\n  $exists: function (operand) {\n    return function (value) {\n      return operand === (value !== undefined);\n    };\n  },\n  $mod: function (operand) {\n    var divisor = operand[0],\n        remainder = operand[1];\n    return function (value) {\n      return _anyIfArray(value, function (x) {\n        return x % divisor === remainder;\n      });\n    };\n  },\n  $size: function (operand) {\n    return function (value) {\n      return isArray(value) && operand === value.length;\n    };\n  },\n  $type: function (operand) {\n    return function (value) {\n      // A nonexistent field is of no type.\n      if (value === undefined) return false; // Definitely not _anyIfArrayPlus: $type: 4 only matches arrays that have\n      // arrays as elements according to the Mongo docs.\n\n      return _anyIfArray(value, function (x) {\n        return LocalCollection._f._type(x) === operand;\n      });\n    };\n  },\n  $regex: function (operand, options) {\n    if (options !== undefined) {\n      // Options passed in $options (even the empty string) always overrides\n      // options in the RegExp object itself.\n      // Be clear that we only support the JS-supported options, not extended\n      // ones (eg, Mongo supports x and s). Ideally we would implement x and s\n      // by transforming the regexp, but not today...\n      if (/[^gim]/.test(options)) throw new Error(\"Only the i, m, and g regexp options are supported\");\n      var regexSource = operand instanceof RegExp ? operand.source : operand;\n      operand = new RegExp(regexSource, options);\n    } else if (!(operand instanceof RegExp)) {\n      operand = new RegExp(operand);\n    }\n\n    return function (value) {\n      if (value === undefined) return false;\n      return _anyIfArray(value, function (x) {\n        return operand.test(x);\n      });\n    };\n  },\n  $options: function (operand) {\n    // evaluation happens at the $regex function above\n    return function (value) {\n      return true;\n    };\n  },\n  $elemMatch: function (operand) {\n    var matcher = compileDocumentSelector(operand);\n    return function (value) {\n      if (!isArray(value)) return false;\n      return lodash_1.default.some(value, function (x) {\n        return matcher(x);\n      });\n    };\n  },\n  $not: function (operand) {\n    var matcher = compileValueSelector(operand);\n    return function (value) {\n      return !matcher(value);\n    };\n  },\n  $near: function (operand) {\n    // Always returns true. Must be handled in post-filter/sort/limit\n    return function (value) {\n      return true;\n    };\n  },\n  $geoIntersects: function (operand) {\n    // Always returns true. Must be handled in post-filter/sort/limit\n    return function (value) {\n      return true;\n    };\n  }\n}; // helpers used by compiled selector code\n\nLocalCollection._f = {\n  // XXX for _all and _in, consider building 'inquery' at compile time..\n  _type: function (v) {\n    if (typeof v === \"number\") return 1;\n    if (typeof v === \"string\") return 2;\n    if (typeof v === \"boolean\") return 8;\n    if (isArray(v)) return 4;\n    if (v === null) return 10;\n    if (v instanceof RegExp) return 11;\n    if (typeof v === \"function\") // note that typeof(/x/) === \"function\"\n      return 13;\n    if (v instanceof Date) return 9;\n    if (EJSON_1.default.isBinary(v)) return 5;\n    return 3; // object\n    // XXX support some/all of these:\n    // 14, symbol\n    // 15, javascript code with scope\n    // 16, 18: 32-bit/64-bit integer\n    // 17, timestamp\n    // 255, minkey\n    // 127, maxkey\n  },\n  // deep equality test: use for literal document and array matches\n  _equal: function (a, b) {\n    return EJSON_1.default.equals(a, b, {\n      keyOrderSensitive: true\n    });\n  },\n  // maps a type code to a value that can be used to sort values of\n  // different types\n  _typeorder: function (t) {\n    // http://www.mongodb.org/display/DOCS/What+is+the+Compare+Order+for+BSON+Types\n    // XXX what is the correct sort position for Javascript code?\n    // ('100' in the matrix below)\n    // XXX minkey/maxkey\n    return [-1, 1, 2, 3, 4, 5, -1, 6, 7, 8, 0, 9, -1, 100, 2, 100, 1, 8, 1 // 64-bit int\n    ][t];\n  },\n  // compare two values of unknown type according to BSON ordering\n  // semantics. (as an extension, consider 'undefined' to be less than\n  // any other value.) return negative if a is less, positive if b is\n  // less, or 0 if equal\n  _cmp: function (a, b) {\n    if (a === undefined) return b === undefined ? 0 : -1;\n    if (b === undefined) return 1;\n\n    var ta = LocalCollection._f._type(a);\n\n    var tb = LocalCollection._f._type(b);\n\n    var oa = LocalCollection._f._typeorder(ta);\n\n    var ob = LocalCollection._f._typeorder(tb);\n\n    if (oa !== ob) return oa < ob ? -1 : 1;\n    if (ta !== tb) // XXX need to implement this if we implement Symbol or integers, or\n      // Timestamp\n      throw Error(\"Missing type coercion logic in _cmp\");\n\n    if (ta === 7) {\n      // ObjectID\n      // Convert to string.\n      ta = tb = 2;\n      a = a.toHexString();\n      b = b.toHexString();\n    }\n\n    if (ta === 9) {\n      // Date\n      // Convert to millis.\n      ta = tb = 1;\n      a = a.getTime();\n      b = b.getTime();\n    }\n\n    if (ta === 1) // double\n      return a - b;\n    if (tb === 2) // string\n      return a < b ? -1 : a === b ? 0 : 1;\n\n    if (ta === 3) {\n      // Object\n      // this could be much more efficient in the expected case ...\n      var to_array = function (obj) {\n        var ret = [];\n\n        for (var key in obj) {\n          ret.push(key);\n          ret.push(obj[key]);\n        }\n\n        return ret;\n      };\n\n      return LocalCollection._f._cmp(to_array(a), to_array(b));\n    }\n\n    if (ta === 4) {\n      // Array\n      for (var i = 0;; i++) {\n        if (i === a.length) return i === b.length ? 0 : -1;\n        if (i === b.length) return 1;\n\n        var s = LocalCollection._f._cmp(a[i], b[i]);\n\n        if (s !== 0) return s;\n      }\n    }\n\n    if (ta === 5) {\n      // binary\n      // Surprisingly, a small binary blob is always less than a large one in\n      // Mongo.\n      if (a.length !== b.length) return a.length - b.length;\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] < b[i]) return -1;\n        if (a[i] > b[i]) return 1;\n      }\n\n      return 0;\n    }\n\n    if (ta === 8) {\n      // boolean\n      if (a) return b ? 0 : 1;\n      return b ? -1 : 0;\n    }\n\n    if (ta === 10) // null\n      return 0;\n    if (ta === 11) // regexp\n      throw Error(\"Sorting not supported on regular expression\"); // XXX\n    // 13: javascript code\n    // 14: symbol\n    // 15: javascript code with scope\n    // 16: 32-bit integer\n    // 17: timestamp\n    // 18: 64-bit integer\n    // 255: minkey\n    // 127: maxkey\n\n    if (ta === 13) // javascript code\n      throw Error(\"Sorting not supported on Javascript code\"); // XXX\n\n    throw Error(\"Unknown type to sort\");\n  }\n}; // For unit tests. True if the given document matches the given\n// selector.\n\nLocalCollection._matches = function (selector, doc) {\n  return LocalCollection._compileSelector(selector)(doc);\n}; // _makeLookupFunction(key) returns a lookup function.\n//\n// A lookup function takes in a document and returns an array of matching\n// values.  This array has more than one element if any segment of the key other\n// than the last one is an array.  ie, any arrays found when doing non-final\n// lookups result in this function \"branching\"; each element in the returned\n// array represents the value found at this branch. If any branch doesn't have a\n// final value for the full key, its element in the returned list will be\n// undefined. It always returns a non-empty array.\n//\n// _makeLookupFunction('a.x')({a: {x: 1}}) returns [1]\n// _makeLookupFunction('a.x')({a: {x: [1]}}) returns [[1]]\n// _makeLookupFunction('a.x')({a: 5})  returns [undefined]\n// _makeLookupFunction('a.x')({a: [{x: 1},\n//                                 {x: [2]},\n//                                 {y: 3}]})\n//   returns [1, [2], undefined]\n\n\nLocalCollection._makeLookupFunction = function (key) {\n  var dotLocation = key.indexOf(\".\");\n  var first, lookupRest, nextIsNumeric;\n\n  if (dotLocation === -1) {\n    first = key;\n  } else {\n    first = key.substr(0, dotLocation);\n    var rest = key.substr(dotLocation + 1);\n    lookupRest = LocalCollection._makeLookupFunction(rest); // Is the next (perhaps final) piece numeric (ie, an array lookup?)\n\n    nextIsNumeric = /^\\d+(\\.|$)/.test(rest);\n  }\n\n  return function (doc) {\n    if (doc == null) // null or undefined\n      return [undefined];\n    var firstLevel = doc[first]; // We don't \"branch\" at the final level.\n\n    if (!lookupRest) return [firstLevel]; // It's an empty array, and we're not done: we won't find anything.\n\n    if (isArray(firstLevel) && firstLevel.length === 0) return [undefined]; // For each result at this level, finish the lookup on the rest of the key,\n    // and return everything we find. Also, if the next result is a number,\n    // don't branch here.\n    //\n    // Technically, in MongoDB, we should be able to handle the case where\n    // objects have numeric keys, but Mongo doesn't actually handle this\n    // consistently yet itself, see eg\n    // https://jira.mongodb.org/browse/SERVER-2898\n    // https://github.com/mongodb/mongo/blob/master/jstests/array_match2.js\n\n    if (!isArray(firstLevel) || nextIsNumeric) firstLevel = [firstLevel];\n    return Array.prototype.concat.apply([], lodash_1.default.map(firstLevel, lookupRest));\n  };\n};\n/** Compile a document selector (query) to a lambda function */\n\n\nfunction compileDocumentSelector(docSelector) {\n  var perKeySelectors = [];\n  lodash_1.default.each(docSelector, function (subSelector, key) {\n    if (key.substr(0, 1) === \"$\") {\n      // Outer operators are either logical operators (they recurse back into\n      // this function), or $where.\n      if (!lodash_1.default.has(LOGICAL_OPERATORS, key)) throw new Error(\"Unrecognized logical operator: \" + key);\n      perKeySelectors.push(LOGICAL_OPERATORS[key](subSelector));\n    } else {\n      var lookUpByIndex = LocalCollection._makeLookupFunction(key);\n\n      var valueSelectorFunc = compileValueSelector(subSelector);\n      perKeySelectors.push(function (doc) {\n        var branchValues = lookUpByIndex(doc); // We apply the selector to each \"branched\" value and return true if any\n        // match. This isn't 100% consistent with MongoDB; eg, see:\n        // https://jira.mongodb.org/browse/SERVER-8585\n\n        return lodash_1.default.some(branchValues, valueSelectorFunc);\n      });\n    }\n  });\n  return function (doc) {\n    return lodash_1.default.every(perKeySelectors, function (f) {\n      return f(doc);\n    });\n  };\n}\n\nexports.compileDocumentSelector = compileDocumentSelector; // Given a selector, return a function that takes one argument, a\n// document, and returns true if the document matches the selector,\n// else false.\n\nLocalCollection._compileSelector = function (selector) {\n  // you can pass a literal function instead of a selector\n  if (selector instanceof Function) return function (doc) {\n    return selector.call(doc);\n  }; // shorthand -- scalars match _id\n\n  if (LocalCollection._selectorIsId(selector)) {\n    return function (doc) {\n      return EJSON_1.default.equals(doc._id, selector);\n    };\n  } // protect against dangerous selectors.  falsey and {_id: falsey} are both\n  // likely programmer error, and not what you want, particularly for\n  // destructive operations.\n\n\n  if (!selector || \"_id\" in selector && !selector._id) return function (doc) {\n    return false;\n  }; // Top level can't be an array or true or binary.\n\n  if (typeof selector === \"boolean\" || isArray(selector) || EJSON_1.default.isBinary(selector)) throw new Error(\"Invalid selector: \" + selector);\n  return compileDocumentSelector(selector);\n}; // Give a sort spec, which can be in any of these forms:\n//   {\"key1\": 1, \"key2\": -1}\n//   [[\"key1\", \"asc\"], [\"key2\", \"desc\"]]\n//   [\"key1\", [\"key2\", \"desc\"]]\n//\n// (.. with the first form being dependent on the key enumeration\n// behavior of your javascript VM, which usually does what you mean in\n// this case if the key names don't look like integers ..)\n//\n// return a function that takes two objects, and returns -1 if the\n// first object comes first in order, 1 if the second object comes\n// first, or 0 if neither object comes before the other.\n\n\nLocalCollection._compileSort = function (spec) {\n  var sortSpecParts = [];\n\n  if (spec instanceof Array) {\n    for (var i = 0; i < spec.length; i++) {\n      if (typeof spec[i] === \"string\") {\n        sortSpecParts.push({\n          lookup: LocalCollection._makeLookupFunction(spec[i]),\n          ascending: true\n        });\n      } else {\n        sortSpecParts.push({\n          lookup: LocalCollection._makeLookupFunction(spec[i][0]),\n          ascending: spec[i][1] !== \"desc\"\n        });\n      }\n    }\n  } else if (typeof spec === \"object\") {\n    for (var key in spec) {\n      sortSpecParts.push({\n        lookup: LocalCollection._makeLookupFunction(key),\n        ascending: spec[key] >= 0\n      });\n    }\n  } else {\n    throw Error(\"Bad sort specification: \" + JSON.stringify(spec));\n  }\n\n  if (sortSpecParts.length === 0) return function () {\n    return 0;\n  }; // reduceValue takes in all the possible values for the sort key along various\n  // branches, and returns the min or max value (according to the bool\n  // findMin). Each value can itself be an array, and we look at its values\n  // too. (ie, we do a single level of flattening on branchValues, then find the\n  // min/max.)\n\n  var reduceValue = function (branchValues, findMin) {\n    var reduced;\n    var first = true; // Iterate over all the values found in all the branches, and if a value is\n    // an array itself, iterate over the values in the array separately.\n\n    lodash_1.default.each(branchValues, function (branchValue) {\n      // Value not an array? Pretend it is.\n      if (!isArray(branchValue)) branchValue = [branchValue]; // Value is an empty array? Pretend it was missing, since that's where it\n      // should be sorted.\n\n      if (isArray(branchValue) && branchValue.length === 0) branchValue = [undefined];\n      lodash_1.default.each(branchValue, function (value) {\n        // We should get here at least once: lookup functions return non-empty\n        // arrays, so the outer loop runs at least once, and we prevented\n        // branchValue from being an empty array.\n        if (first) {\n          reduced = value;\n          first = false;\n        } else {\n          // Compare the value we found to the value we found so far, saving it\n          // if it's less (for an ascending sort) or more (for a descending\n          // sort).\n          var cmp = LocalCollection._f._cmp(reduced, value);\n\n          if (findMin && cmp > 0 || !findMin && cmp < 0) reduced = value;\n        }\n      });\n    });\n    return reduced;\n  };\n\n  return function (a, b) {\n    for (var i = 0; i < sortSpecParts.length; ++i) {\n      var specPart = sortSpecParts[i];\n      var aValue = reduceValue(specPart.lookup(a), specPart.ascending);\n      var bValue = reduceValue(specPart.lookup(b), specPart.ascending);\n\n      var compare = LocalCollection._f._cmp(aValue, bValue);\n\n      if (compare !== 0) return specPart.ascending ? compare : -compare;\n    }\n\n    return 0;\n  };\n};\n\nexports.compileSort = LocalCollection._compileSort;","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/node_modules/minimongo/lib/selector.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","compileSort","compileDocumentSelector","EJSON_1","require","lodash_1","LocalCollection","isArray","x","default","isBinary","_anyIfArray","f","some","_anyIfArrayPlus","hasOperators","valueSelector","theseAreOperators","undefined","selKey","thisIsOperator","substr","Error","compileValueSelector","isObject","RegExp","test","_f","_equal","operatorFunctions","each","operand","operator","has","VALUE_OPERATORS","push","every","LOGICAL_OPERATORS","$and","subSelector","isEmpty","subSelectorFunctions","map","doc","$or","$nor","$where","selectorValue","Function","call","$in","index","isString","keyBy","operandElt","$all","valueElt","$lt","_cmp","$lte","$gt","$gte","$ne","$nin","inFunction","$exists","$mod","divisor","remainder","$size","length","$type","_type","$regex","options","regexSource","source","$options","$elemMatch","matcher","$not","$near","$geoIntersects","v","Date","a","b","equals","keyOrderSensitive","_typeorder","t","ta","tb","oa","ob","toHexString","getTime","to_array","obj","ret","key","i","s","_matches","selector","_compileSelector","_makeLookupFunction","dotLocation","indexOf","first","lookupRest","nextIsNumeric","rest","firstLevel","Array","prototype","concat","apply","docSelector","perKeySelectors","lookUpByIndex","valueSelectorFunc","branchValues","_selectorIsId","_id","_compileSort","spec","sortSpecParts","lookup","ascending","JSON","stringify","reduceValue","findMin","reduced","branchValue","cmp","specPart","aValue","bValue","compare"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compileSort = exports.compileDocumentSelector = void 0;\n/*\n========================================\nMeteor is licensed under the MIT License\n========================================\n\nCopyright (C) 2011--2012 Meteor Development Group\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n====================================================================\nThis license applies to all code in Meteor that is not an externally\nmaintained library. Externally maintained libraries have their own\nlicenses, included below:\n====================================================================\n\n*/\nconst EJSON_1 = __importDefault(require(\"./EJSON\"));\nconst lodash_1 = __importDefault(require(\"lodash\"));\nvar LocalCollection = {};\n// Like _.isArray, but doesn't regard polyfilled Uint8Arrays on old browsers as\n// arrays.\nvar isArray = function (x) {\n    return lodash_1.default.isArray(x) && !EJSON_1.default.isBinary(x);\n};\nvar _anyIfArray = function (x, f) {\n    if (isArray(x))\n        return lodash_1.default.some(x, f);\n    return f(x);\n};\nvar _anyIfArrayPlus = function (x, f) {\n    if (f(x))\n        return true;\n    return isArray(x) && lodash_1.default.some(x, f);\n};\nvar hasOperators = function (valueSelector) {\n    var theseAreOperators = undefined;\n    for (var selKey in valueSelector) {\n        var thisIsOperator = selKey.substr(0, 1) === \"$\";\n        if (theseAreOperators === undefined) {\n            theseAreOperators = thisIsOperator;\n        }\n        else if (theseAreOperators !== thisIsOperator) {\n            throw new Error(\"Inconsistent selector: \" + valueSelector);\n        }\n    }\n    return !!theseAreOperators; // {} has no operators\n};\nvar compileValueSelector = function (valueSelector) {\n    if (valueSelector == null) {\n        // undefined or null\n        return function (value) {\n            return _anyIfArray(value, function (x) {\n                return x == null; // undefined or null\n            });\n        };\n    }\n    // Selector is a non-null primitive (and not an array or RegExp either).\n    if (!lodash_1.default.isObject(valueSelector)) {\n        return function (value) {\n            return _anyIfArray(value, function (x) {\n                return x === valueSelector;\n            });\n        };\n    }\n    if (valueSelector instanceof RegExp) {\n        return function (value) {\n            if (value === undefined)\n                return false;\n            return _anyIfArray(value, function (x) {\n                return valueSelector.test(x);\n            });\n        };\n    }\n    // Arrays match either identical arrays or arrays that contain it as a value.\n    if (isArray(valueSelector)) {\n        return function (value) {\n            if (!isArray(value))\n                return false;\n            return _anyIfArrayPlus(value, function (x) {\n                return LocalCollection._f._equal(valueSelector, x);\n            });\n        };\n    }\n    // It's an object, but not an array or regexp.\n    if (hasOperators(valueSelector)) {\n        var operatorFunctions = [];\n        lodash_1.default.each(valueSelector, function (operand, operator) {\n            if (!lodash_1.default.has(VALUE_OPERATORS, operator))\n                throw new Error(\"Unrecognized operator: \" + operator);\n            operatorFunctions.push(VALUE_OPERATORS[operator](operand, valueSelector[\"$options\"]));\n        });\n        return function (value) {\n            return lodash_1.default.every(operatorFunctions, function (f) {\n                return f(value);\n            });\n        };\n    }\n    // It's a literal; compare value (or element of value array) directly to the\n    // selector.\n    return function (value) {\n        return _anyIfArray(value, function (x) {\n            return LocalCollection._f._equal(valueSelector, x);\n        });\n    };\n};\n// XXX can factor out common logic below\nvar LOGICAL_OPERATORS = {\n    $and: function (subSelector) {\n        if (!isArray(subSelector) || lodash_1.default.isEmpty(subSelector))\n            throw Error(\"$and/$or/$nor must be nonempty array\");\n        var subSelectorFunctions = lodash_1.default.map(subSelector, compileDocumentSelector);\n        return function (doc) {\n            return lodash_1.default.every(subSelectorFunctions, function (f) {\n                return f(doc);\n            });\n        };\n    },\n    $or: function (subSelector) {\n        if (!isArray(subSelector) || lodash_1.default.isEmpty(subSelector))\n            throw Error(\"$and/$or/$nor must be nonempty array\");\n        var subSelectorFunctions = lodash_1.default.map(subSelector, compileDocumentSelector);\n        return function (doc) {\n            return lodash_1.default.some(subSelectorFunctions, function (f) {\n                return f(doc);\n            });\n        };\n    },\n    $nor: function (subSelector) {\n        if (!isArray(subSelector) || lodash_1.default.isEmpty(subSelector))\n            throw Error(\"$and/$or/$nor must be nonempty array\");\n        var subSelectorFunctions = lodash_1.default.map(subSelector, compileDocumentSelector);\n        return function (doc) {\n            return lodash_1.default.every(subSelectorFunctions, function (f) {\n                return !f(doc);\n            });\n        };\n    },\n    $where: function (selectorValue) {\n        if (!(selectorValue instanceof Function)) {\n            selectorValue = Function(\"return \" + selectorValue);\n        }\n        return function (doc) {\n            return selectorValue.call(doc);\n        };\n    }\n};\nvar VALUE_OPERATORS = {\n    $in: function (operand) {\n        if (!isArray(operand))\n            throw new Error(\"Argument to $in must be array\");\n        // Create index if all strings\n        var index = null;\n        if (lodash_1.default.every(operand, lodash_1.default.isString))\n            index = lodash_1.default.keyBy(operand);\n        return function (value) {\n            return _anyIfArrayPlus(value, function (x) {\n                if (lodash_1.default.isString(x) && index !== null)\n                    return index[x] != undefined;\n                return lodash_1.default.some(operand, function (operandElt) {\n                    return LocalCollection._f._equal(operandElt, x);\n                });\n            });\n        };\n    },\n    $all: function (operand) {\n        if (!isArray(operand))\n            throw new Error(\"Argument to $all must be array\");\n        return function (value) {\n            if (!isArray(value))\n                return false;\n            return lodash_1.default.every(operand, function (operandElt) {\n                return lodash_1.default.some(value, function (valueElt) {\n                    return LocalCollection._f._equal(operandElt, valueElt);\n                });\n            });\n        };\n    },\n    $lt: function (operand) {\n        return function (value) {\n            return _anyIfArray(value, function (x) {\n                return LocalCollection._f._cmp(x, operand) < 0;\n            });\n        };\n    },\n    $lte: function (operand) {\n        return function (value) {\n            return _anyIfArray(value, function (x) {\n                return LocalCollection._f._cmp(x, operand) <= 0;\n            });\n        };\n    },\n    $gt: function (operand) {\n        return function (value) {\n            return _anyIfArray(value, function (x) {\n                return LocalCollection._f._cmp(x, operand) > 0;\n            });\n        };\n    },\n    $gte: function (operand) {\n        return function (value) {\n            return _anyIfArray(value, function (x) {\n                return LocalCollection._f._cmp(x, operand) >= 0;\n            });\n        };\n    },\n    $ne: function (operand) {\n        return function (value) {\n            return !_anyIfArrayPlus(value, function (x) {\n                return LocalCollection._f._equal(x, operand);\n            });\n        };\n    },\n    $nin: function (operand) {\n        if (!isArray(operand))\n            throw new Error(\"Argument to $nin must be array\");\n        var inFunction = VALUE_OPERATORS.$in(operand);\n        return function (value) {\n            // Field doesn't exist, so it's not-in operand\n            if (value === undefined)\n                return true;\n            return !inFunction(value);\n        };\n    },\n    $exists: function (operand) {\n        return function (value) {\n            return operand === (value !== undefined);\n        };\n    },\n    $mod: function (operand) {\n        var divisor = operand[0], remainder = operand[1];\n        return function (value) {\n            return _anyIfArray(value, function (x) {\n                return x % divisor === remainder;\n            });\n        };\n    },\n    $size: function (operand) {\n        return function (value) {\n            return isArray(value) && operand === value.length;\n        };\n    },\n    $type: function (operand) {\n        return function (value) {\n            // A nonexistent field is of no type.\n            if (value === undefined)\n                return false;\n            // Definitely not _anyIfArrayPlus: $type: 4 only matches arrays that have\n            // arrays as elements according to the Mongo docs.\n            return _anyIfArray(value, function (x) {\n                return LocalCollection._f._type(x) === operand;\n            });\n        };\n    },\n    $regex: function (operand, options) {\n        if (options !== undefined) {\n            // Options passed in $options (even the empty string) always overrides\n            // options in the RegExp object itself.\n            // Be clear that we only support the JS-supported options, not extended\n            // ones (eg, Mongo supports x and s). Ideally we would implement x and s\n            // by transforming the regexp, but not today...\n            if (/[^gim]/.test(options))\n                throw new Error(\"Only the i, m, and g regexp options are supported\");\n            var regexSource = operand instanceof RegExp ? operand.source : operand;\n            operand = new RegExp(regexSource, options);\n        }\n        else if (!(operand instanceof RegExp)) {\n            operand = new RegExp(operand);\n        }\n        return function (value) {\n            if (value === undefined)\n                return false;\n            return _anyIfArray(value, function (x) {\n                return operand.test(x);\n            });\n        };\n    },\n    $options: function (operand) {\n        // evaluation happens at the $regex function above\n        return function (value) {\n            return true;\n        };\n    },\n    $elemMatch: function (operand) {\n        var matcher = compileDocumentSelector(operand);\n        return function (value) {\n            if (!isArray(value))\n                return false;\n            return lodash_1.default.some(value, function (x) {\n                return matcher(x);\n            });\n        };\n    },\n    $not: function (operand) {\n        var matcher = compileValueSelector(operand);\n        return function (value) {\n            return !matcher(value);\n        };\n    },\n    $near: function (operand) {\n        // Always returns true. Must be handled in post-filter/sort/limit\n        return function (value) {\n            return true;\n        };\n    },\n    $geoIntersects: function (operand) {\n        // Always returns true. Must be handled in post-filter/sort/limit\n        return function (value) {\n            return true;\n        };\n    }\n};\n// helpers used by compiled selector code\nLocalCollection._f = {\n    // XXX for _all and _in, consider building 'inquery' at compile time..\n    _type: function (v) {\n        if (typeof v === \"number\")\n            return 1;\n        if (typeof v === \"string\")\n            return 2;\n        if (typeof v === \"boolean\")\n            return 8;\n        if (isArray(v))\n            return 4;\n        if (v === null)\n            return 10;\n        if (v instanceof RegExp)\n            return 11;\n        if (typeof v === \"function\")\n            // note that typeof(/x/) === \"function\"\n            return 13;\n        if (v instanceof Date)\n            return 9;\n        if (EJSON_1.default.isBinary(v))\n            return 5;\n        return 3; // object\n        // XXX support some/all of these:\n        // 14, symbol\n        // 15, javascript code with scope\n        // 16, 18: 32-bit/64-bit integer\n        // 17, timestamp\n        // 255, minkey\n        // 127, maxkey\n    },\n    // deep equality test: use for literal document and array matches\n    _equal: function (a, b) {\n        return EJSON_1.default.equals(a, b, { keyOrderSensitive: true });\n    },\n    // maps a type code to a value that can be used to sort values of\n    // different types\n    _typeorder: function (t) {\n        // http://www.mongodb.org/display/DOCS/What+is+the+Compare+Order+for+BSON+Types\n        // XXX what is the correct sort position for Javascript code?\n        // ('100' in the matrix below)\n        // XXX minkey/maxkey\n        return [\n            -1,\n            1,\n            2,\n            3,\n            4,\n            5,\n            -1,\n            6,\n            7,\n            8,\n            0,\n            9,\n            -1,\n            100,\n            2,\n            100,\n            1,\n            8,\n            1 // 64-bit int\n        ][t];\n    },\n    // compare two values of unknown type according to BSON ordering\n    // semantics. (as an extension, consider 'undefined' to be less than\n    // any other value.) return negative if a is less, positive if b is\n    // less, or 0 if equal\n    _cmp: function (a, b) {\n        if (a === undefined)\n            return b === undefined ? 0 : -1;\n        if (b === undefined)\n            return 1;\n        var ta = LocalCollection._f._type(a);\n        var tb = LocalCollection._f._type(b);\n        var oa = LocalCollection._f._typeorder(ta);\n        var ob = LocalCollection._f._typeorder(tb);\n        if (oa !== ob)\n            return oa < ob ? -1 : 1;\n        if (ta !== tb)\n            // XXX need to implement this if we implement Symbol or integers, or\n            // Timestamp\n            throw Error(\"Missing type coercion logic in _cmp\");\n        if (ta === 7) {\n            // ObjectID\n            // Convert to string.\n            ta = tb = 2;\n            a = a.toHexString();\n            b = b.toHexString();\n        }\n        if (ta === 9) {\n            // Date\n            // Convert to millis.\n            ta = tb = 1;\n            a = a.getTime();\n            b = b.getTime();\n        }\n        if (ta === 1)\n            // double\n            return a - b;\n        if (tb === 2)\n            // string\n            return a < b ? -1 : a === b ? 0 : 1;\n        if (ta === 3) {\n            // Object\n            // this could be much more efficient in the expected case ...\n            var to_array = function (obj) {\n                var ret = [];\n                for (var key in obj) {\n                    ret.push(key);\n                    ret.push(obj[key]);\n                }\n                return ret;\n            };\n            return LocalCollection._f._cmp(to_array(a), to_array(b));\n        }\n        if (ta === 4) {\n            // Array\n            for (var i = 0;; i++) {\n                if (i === a.length)\n                    return i === b.length ? 0 : -1;\n                if (i === b.length)\n                    return 1;\n                var s = LocalCollection._f._cmp(a[i], b[i]);\n                if (s !== 0)\n                    return s;\n            }\n        }\n        if (ta === 5) {\n            // binary\n            // Surprisingly, a small binary blob is always less than a large one in\n            // Mongo.\n            if (a.length !== b.length)\n                return a.length - b.length;\n            for (i = 0; i < a.length; i++) {\n                if (a[i] < b[i])\n                    return -1;\n                if (a[i] > b[i])\n                    return 1;\n            }\n            return 0;\n        }\n        if (ta === 8) {\n            // boolean\n            if (a)\n                return b ? 0 : 1;\n            return b ? -1 : 0;\n        }\n        if (ta === 10)\n            // null\n            return 0;\n        if (ta === 11)\n            // regexp\n            throw Error(\"Sorting not supported on regular expression\"); // XXX\n        // 13: javascript code\n        // 14: symbol\n        // 15: javascript code with scope\n        // 16: 32-bit integer\n        // 17: timestamp\n        // 18: 64-bit integer\n        // 255: minkey\n        // 127: maxkey\n        if (ta === 13)\n            // javascript code\n            throw Error(\"Sorting not supported on Javascript code\"); // XXX\n        throw Error(\"Unknown type to sort\");\n    }\n};\n// For unit tests. True if the given document matches the given\n// selector.\nLocalCollection._matches = function (selector, doc) {\n    return LocalCollection._compileSelector(selector)(doc);\n};\n// _makeLookupFunction(key) returns a lookup function.\n//\n// A lookup function takes in a document and returns an array of matching\n// values.  This array has more than one element if any segment of the key other\n// than the last one is an array.  ie, any arrays found when doing non-final\n// lookups result in this function \"branching\"; each element in the returned\n// array represents the value found at this branch. If any branch doesn't have a\n// final value for the full key, its element in the returned list will be\n// undefined. It always returns a non-empty array.\n//\n// _makeLookupFunction('a.x')({a: {x: 1}}) returns [1]\n// _makeLookupFunction('a.x')({a: {x: [1]}}) returns [[1]]\n// _makeLookupFunction('a.x')({a: 5})  returns [undefined]\n// _makeLookupFunction('a.x')({a: [{x: 1},\n//                                 {x: [2]},\n//                                 {y: 3}]})\n//   returns [1, [2], undefined]\nLocalCollection._makeLookupFunction = function (key) {\n    var dotLocation = key.indexOf(\".\");\n    var first, lookupRest, nextIsNumeric;\n    if (dotLocation === -1) {\n        first = key;\n    }\n    else {\n        first = key.substr(0, dotLocation);\n        var rest = key.substr(dotLocation + 1);\n        lookupRest = LocalCollection._makeLookupFunction(rest);\n        // Is the next (perhaps final) piece numeric (ie, an array lookup?)\n        nextIsNumeric = /^\\d+(\\.|$)/.test(rest);\n    }\n    return function (doc) {\n        if (doc == null)\n            // null or undefined\n            return [undefined];\n        var firstLevel = doc[first];\n        // We don't \"branch\" at the final level.\n        if (!lookupRest)\n            return [firstLevel];\n        // It's an empty array, and we're not done: we won't find anything.\n        if (isArray(firstLevel) && firstLevel.length === 0)\n            return [undefined];\n        // For each result at this level, finish the lookup on the rest of the key,\n        // and return everything we find. Also, if the next result is a number,\n        // don't branch here.\n        //\n        // Technically, in MongoDB, we should be able to handle the case where\n        // objects have numeric keys, but Mongo doesn't actually handle this\n        // consistently yet itself, see eg\n        // https://jira.mongodb.org/browse/SERVER-2898\n        // https://github.com/mongodb/mongo/blob/master/jstests/array_match2.js\n        if (!isArray(firstLevel) || nextIsNumeric)\n            firstLevel = [firstLevel];\n        return Array.prototype.concat.apply([], lodash_1.default.map(firstLevel, lookupRest));\n    };\n};\n/** Compile a document selector (query) to a lambda function */\nfunction compileDocumentSelector(docSelector) {\n    var perKeySelectors = [];\n    lodash_1.default.each(docSelector, function (subSelector, key) {\n        if (key.substr(0, 1) === \"$\") {\n            // Outer operators are either logical operators (they recurse back into\n            // this function), or $where.\n            if (!lodash_1.default.has(LOGICAL_OPERATORS, key))\n                throw new Error(\"Unrecognized logical operator: \" + key);\n            perKeySelectors.push(LOGICAL_OPERATORS[key](subSelector));\n        }\n        else {\n            var lookUpByIndex = LocalCollection._makeLookupFunction(key);\n            var valueSelectorFunc = compileValueSelector(subSelector);\n            perKeySelectors.push(function (doc) {\n                var branchValues = lookUpByIndex(doc);\n                // We apply the selector to each \"branched\" value and return true if any\n                // match. This isn't 100% consistent with MongoDB; eg, see:\n                // https://jira.mongodb.org/browse/SERVER-8585\n                return lodash_1.default.some(branchValues, valueSelectorFunc);\n            });\n        }\n    });\n    return function (doc) {\n        return lodash_1.default.every(perKeySelectors, function (f) {\n            return f(doc);\n        });\n    };\n}\nexports.compileDocumentSelector = compileDocumentSelector;\n// Given a selector, return a function that takes one argument, a\n// document, and returns true if the document matches the selector,\n// else false.\nLocalCollection._compileSelector = function (selector) {\n    // you can pass a literal function instead of a selector\n    if (selector instanceof Function)\n        return function (doc) {\n            return selector.call(doc);\n        };\n    // shorthand -- scalars match _id\n    if (LocalCollection._selectorIsId(selector)) {\n        return function (doc) {\n            return EJSON_1.default.equals(doc._id, selector);\n        };\n    }\n    // protect against dangerous selectors.  falsey and {_id: falsey} are both\n    // likely programmer error, and not what you want, particularly for\n    // destructive operations.\n    if (!selector || (\"_id\" in selector && !selector._id))\n        return function (doc) {\n            return false;\n        };\n    // Top level can't be an array or true or binary.\n    if (typeof selector === \"boolean\" || isArray(selector) || EJSON_1.default.isBinary(selector))\n        throw new Error(\"Invalid selector: \" + selector);\n    return compileDocumentSelector(selector);\n};\n// Give a sort spec, which can be in any of these forms:\n//   {\"key1\": 1, \"key2\": -1}\n//   [[\"key1\", \"asc\"], [\"key2\", \"desc\"]]\n//   [\"key1\", [\"key2\", \"desc\"]]\n//\n// (.. with the first form being dependent on the key enumeration\n// behavior of your javascript VM, which usually does what you mean in\n// this case if the key names don't look like integers ..)\n//\n// return a function that takes two objects, and returns -1 if the\n// first object comes first in order, 1 if the second object comes\n// first, or 0 if neither object comes before the other.\nLocalCollection._compileSort = function (spec) {\n    var sortSpecParts = [];\n    if (spec instanceof Array) {\n        for (var i = 0; i < spec.length; i++) {\n            if (typeof spec[i] === \"string\") {\n                sortSpecParts.push({\n                    lookup: LocalCollection._makeLookupFunction(spec[i]),\n                    ascending: true\n                });\n            }\n            else {\n                sortSpecParts.push({\n                    lookup: LocalCollection._makeLookupFunction(spec[i][0]),\n                    ascending: spec[i][1] !== \"desc\"\n                });\n            }\n        }\n    }\n    else if (typeof spec === \"object\") {\n        for (var key in spec) {\n            sortSpecParts.push({\n                lookup: LocalCollection._makeLookupFunction(key),\n                ascending: spec[key] >= 0\n            });\n        }\n    }\n    else {\n        throw Error(\"Bad sort specification: \" + JSON.stringify(spec));\n    }\n    if (sortSpecParts.length === 0)\n        return function () {\n            return 0;\n        };\n    // reduceValue takes in all the possible values for the sort key along various\n    // branches, and returns the min or max value (according to the bool\n    // findMin). Each value can itself be an array, and we look at its values\n    // too. (ie, we do a single level of flattening on branchValues, then find the\n    // min/max.)\n    var reduceValue = function (branchValues, findMin) {\n        var reduced;\n        var first = true;\n        // Iterate over all the values found in all the branches, and if a value is\n        // an array itself, iterate over the values in the array separately.\n        lodash_1.default.each(branchValues, function (branchValue) {\n            // Value not an array? Pretend it is.\n            if (!isArray(branchValue))\n                branchValue = [branchValue];\n            // Value is an empty array? Pretend it was missing, since that's where it\n            // should be sorted.\n            if (isArray(branchValue) && branchValue.length === 0)\n                branchValue = [undefined];\n            lodash_1.default.each(branchValue, function (value) {\n                // We should get here at least once: lookup functions return non-empty\n                // arrays, so the outer loop runs at least once, and we prevented\n                // branchValue from being an empty array.\n                if (first) {\n                    reduced = value;\n                    first = false;\n                }\n                else {\n                    // Compare the value we found to the value we found so far, saving it\n                    // if it's less (for an ascending sort) or more (for a descending\n                    // sort).\n                    var cmp = LocalCollection._f._cmp(reduced, value);\n                    if ((findMin && cmp > 0) || (!findMin && cmp < 0))\n                        reduced = value;\n                }\n            });\n        });\n        return reduced;\n    };\n    return function (a, b) {\n        for (var i = 0; i < sortSpecParts.length; ++i) {\n            var specPart = sortSpecParts[i];\n            var aValue = reduceValue(specPart.lookup(a), specPart.ascending);\n            var bValue = reduceValue(specPart.lookup(b), specPart.ascending);\n            var compare = LocalCollection._f._cmp(aValue, bValue);\n            if (compare !== 0)\n                return specPart.ascending ? compare : -compare;\n        }\n        return 0;\n    };\n};\nexports.compileSort = LocalCollection._compileSort;\n"]},"metadata":{},"sourceType":"script"}