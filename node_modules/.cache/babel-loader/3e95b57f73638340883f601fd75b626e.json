{"ast":null,"code":"import FuseUtils from '@fuse/utils/FuseUtils';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\n/* eslint-disable camelcase */\n\nclass JwtService extends FuseUtils.EventEmitter {\n  constructor() {\n    super(...arguments);\n\n    this.setInterceptors = () => {\n      axios.interceptors.response.use(response => {\n        return response;\n      }, err => {\n        return new Promise((resolve, reject) => {\n          if (err.response.status === 401 && err.config && !err.config.__isRetryRequest) {\n            // if you ever get an unauthorized response, logout the user\n            this.emit('onAutoLogout', 'Invalid access_token');\n            this.setSession(null);\n          }\n\n          throw err;\n        });\n      });\n    };\n\n    this.handleAuthentication = () => {\n      const access_token = this.getAccessToken();\n\n      if (!access_token) {\n        this.emit('onNoAccessToken');\n        return;\n      }\n\n      if (this.isAuthTokenValid(access_token)) {\n        this.setSession(access_token);\n        this.emit('onAutoLogin', true);\n      } else {\n        this.setSession(null);\n        this.emit('onAutoLogout', 'access_token expired');\n      }\n    };\n\n    this.createUser = data => {\n      return new Promise((resolve, reject) => {\n        axios.post('/api/auth/register', data).then(response => {\n          if (response.data.user) {\n            this.setSession(response.data.access_token);\n            resolve(response.data.user);\n          } else {\n            reject(response.data.error);\n          }\n        });\n      });\n    };\n\n    this.signInWithEmailAndPassword = (email, password) => {\n      return new Promise((resolve, reject) => {\n        axios.get('/api/auth', {\n          data: {\n            email,\n            password\n          }\n        }).then(response => {\n          if (response.data.user) {\n            this.setSession(response.data.access_token);\n            resolve(response.data.user);\n          } else {\n            reject(response.data.error);\n          }\n        });\n      });\n    };\n\n    this.signInWithToken = () => {\n      return new Promise((resolve, reject) => {\n        axios.get('/api/auth/access-token', {\n          data: {\n            access_token: this.getAccessToken()\n          }\n        }).then(response => {\n          if (response.data.user) {\n            this.setSession(response.data.access_token);\n            resolve(response.data.user);\n          } else {\n            this.logout();\n            reject(new Error('Failed to login with token.'));\n          }\n        }).catch(error => {\n          this.logout();\n          reject(new Error('Failed to login with token.'));\n        });\n      });\n    };\n\n    this.updateUserData = user => {\n      return axios.post('/api/auth/user/update', {\n        user\n      });\n    };\n\n    this.setSession = access_token => {\n      if (access_token) {\n        localStorage.setItem('jwt_access_token', access_token);\n        axios.defaults.headers.common.Authorization = `Bearer ${access_token}`;\n      } else {\n        localStorage.removeItem('jwt_access_token');\n        delete axios.defaults.headers.common.Authorization;\n      }\n    };\n\n    this.logout = () => {\n      this.setSession(null);\n    };\n\n    this.isAuthTokenValid = access_token => {\n      if (!access_token) {\n        return false;\n      }\n\n      const decoded = jwtDecode(access_token);\n      const currentTime = Date.now() / 1000;\n\n      if (decoded.exp < currentTime) {\n        console.warn('access token expired');\n        return false;\n      }\n\n      return true;\n    };\n\n    this.getAccessToken = () => {\n      return window.localStorage.getItem('jwt_access_token');\n    };\n  }\n\n  init() {\n    this.setInterceptors();\n    this.handleAuthentication();\n  }\n\n}\n\nconst instance = new JwtService();\nexport default instance;","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/app/services/jwtService/jwtService.js"],"names":["FuseUtils","axios","jwtDecode","JwtService","EventEmitter","setInterceptors","interceptors","response","use","err","Promise","resolve","reject","status","config","__isRetryRequest","emit","setSession","handleAuthentication","access_token","getAccessToken","isAuthTokenValid","createUser","data","post","then","user","error","signInWithEmailAndPassword","email","password","get","signInWithToken","logout","Error","catch","updateUserData","localStorage","setItem","defaults","headers","common","Authorization","removeItem","decoded","currentTime","Date","now","exp","console","warn","window","getItem","init","instance"],"mappings":"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","sourcesContent":["import FuseUtils from '@fuse/utils/FuseUtils';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\n/* eslint-disable camelcase */\n\nclass JwtService extends FuseUtils.EventEmitter {\n  init() {\n    this.setInterceptors();\n    this.handleAuthentication();\n  }\n\n  setInterceptors = () => {\n    axios.interceptors.response.use(\n      (response) => {\n        return response;\n      },\n      (err) => {\n        return new Promise((resolve, reject) => {\n          if (err.response.status === 401 && err.config && !err.config.__isRetryRequest) {\n            // if you ever get an unauthorized response, logout the user\n            this.emit('onAutoLogout', 'Invalid access_token');\n            this.setSession(null);\n          }\n          throw err;\n        });\n      }\n    );\n  };\n\n  handleAuthentication = () => {\n    const access_token = this.getAccessToken();\n\n    if (!access_token) {\n      this.emit('onNoAccessToken');\n\n      return;\n    }\n\n    if (this.isAuthTokenValid(access_token)) {\n      this.setSession(access_token);\n      this.emit('onAutoLogin', true);\n    } else {\n      this.setSession(null);\n      this.emit('onAutoLogout', 'access_token expired');\n    }\n  };\n\n  createUser = (data) => {\n    return new Promise((resolve, reject) => {\n      axios.post('/api/auth/register', data).then((response) => {\n        if (response.data.user) {\n          this.setSession(response.data.access_token);\n          resolve(response.data.user);\n        } else {\n          reject(response.data.error);\n        }\n      });\n    });\n  };\n\n  signInWithEmailAndPassword = (email, password) => {\n    return new Promise((resolve, reject) => {\n      axios\n        .get('/api/auth', {\n          data: {\n            email,\n            password,\n          },\n        })\n        .then((response) => {\n          if (response.data.user) {\n            this.setSession(response.data.access_token);\n            resolve(response.data.user);\n          } else {\n            reject(response.data.error);\n          }\n        });\n    });\n  };\n\n  signInWithToken = () => {\n    return new Promise((resolve, reject) => {\n      axios\n        .get('/api/auth/access-token', {\n          data: {\n            access_token: this.getAccessToken(),\n          },\n        })\n        .then((response) => {\n          if (response.data.user) {\n            this.setSession(response.data.access_token);\n            resolve(response.data.user);\n          } else {\n            this.logout();\n            reject(new Error('Failed to login with token.'));\n          }\n        })\n        .catch((error) => {\n          this.logout();\n          reject(new Error('Failed to login with token.'));\n        });\n    });\n  };\n\n  updateUserData = (user) => {\n    return axios.post('/api/auth/user/update', {\n      user,\n    });\n  };\n\n  setSession = (access_token) => {\n    if (access_token) {\n      localStorage.setItem('jwt_access_token', access_token);\n      axios.defaults.headers.common.Authorization = `Bearer ${access_token}`;\n    } else {\n      localStorage.removeItem('jwt_access_token');\n      delete axios.defaults.headers.common.Authorization;\n    }\n  };\n\n  logout = () => {\n    this.setSession(null);\n  };\n\n  isAuthTokenValid = (access_token) => {\n    if (!access_token) {\n      return false;\n    }\n    const decoded = jwtDecode(access_token);\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n      console.warn('access token expired');\n      return false;\n    }\n\n    return true;\n  };\n\n  getAccessToken = () => {\n    return window.localStorage.getItem('jwt_access_token');\n  };\n}\n\nconst instance = new JwtService();\n\nexport default instance;\n"]},"metadata":{},"sourceType":"module"}