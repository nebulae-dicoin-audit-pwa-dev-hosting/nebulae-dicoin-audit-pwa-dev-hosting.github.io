{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/app/fuse-layouts/shared-components/LanguageSwitcher.js\";\nimport Button from '@mui/material/Button';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport MenuItem from '@mui/material/MenuItem';\nimport Popover from '@mui/material/Popover';\nimport Typography from '@mui/material/Typography';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { changeLanguage } from 'app/store/i18nSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst languages = [{\n  id: 'en',\n  title: 'English',\n  flag: 'us'\n}, {\n  id: 'tr',\n  title: 'Turkish',\n  flag: 'tr'\n}, {\n  id: 'ar',\n  title: 'Arabic',\n  flag: 'sa'\n}];\n\nfunction LanguageSwitcher(props) {\n  const dispatch = useDispatch();\n  const currentLanguageId = useSelector(_ref => {\n    let {\n      i18n\n    } = _ref;\n    return i18n.language;\n  });\n  const currentLanguage = languages.find(lng => lng.id === currentLanguageId);\n  const [menu, setMenu] = useState(null);\n\n  const langMenuClick = event => {\n    setMenu(event.currentTarget);\n  };\n\n  const langMenuClose = () => {\n    setMenu(null);\n  };\n\n  function handleLanguageChange(lng) {\n    dispatch(changeLanguage(lng.id));\n    langMenuClose();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"h-40 w-64\",\n      onClick: langMenuClick,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"mx-4 min-w-20\",\n        src: `assets/images/flags/${currentLanguage.flag}.png`,\n        alt: currentLanguage.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: \"mx-4 font-semibold uppercase\",\n        color: \"textSecondary\",\n        children: currentLanguage.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      open: Boolean(menu),\n      anchorEl: menu,\n      onClose: langMenuClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      classes: {\n        paper: 'py-8'\n      },\n      children: [languages.map(lng => /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleLanguageChange(lng),\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          className: \"min-w-40\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"min-w-20\",\n            src: `assets/images/flags/${lng.flag}.png`,\n            alt: lng.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: lng.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, lng.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(MenuItem, {\n        component: Link,\n        to: \"/documentation/configuration/multi-language\",\n        onClick: langMenuClose,\n        role: \"button\",\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Learn More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport default LanguageSwitcher;","map":{"version":3,"sources":["/Users/sebastianmolano/NebulaE/Projects/GTPC/dicon-audit-pwa/frontend/dicon-audit-pwa/src/app/fuse-layouts/shared-components/LanguageSwitcher.js"],"names":["Button","ListItemIcon","ListItemText","MenuItem","Popover","Typography","useState","useSelector","useDispatch","Link","changeLanguage","languages","id","title","flag","LanguageSwitcher","props","dispatch","currentLanguageId","i18n","language","currentLanguage","find","lng","menu","setMenu","langMenuClick","event","currentTarget","langMenuClose","handleLanguageChange","Boolean","vertical","horizontal","paper","map"],"mappings":"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","sourcesContent":["import Button from '@mui/material/Button';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport MenuItem from '@mui/material/MenuItem';\nimport Popover from '@mui/material/Popover';\nimport Typography from '@mui/material/Typography';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { changeLanguage } from 'app/store/i18nSlice';\n\nconst languages = [\n  { id: 'en', title: 'English', flag: 'us' },\n  { id: 'tr', title: 'Turkish', flag: 'tr' },\n  { id: 'ar', title: 'Arabic', flag: 'sa' },\n];\n\nfunction LanguageSwitcher(props) {\n  const dispatch = useDispatch();\n\n  const currentLanguageId = useSelector(({ i18n }) => i18n.language);\n  const currentLanguage = languages.find((lng) => lng.id === currentLanguageId);\n\n  const [menu, setMenu] = useState(null);\n\n  const langMenuClick = (event) => {\n    setMenu(event.currentTarget);\n  };\n\n  const langMenuClose = () => {\n    setMenu(null);\n  };\n\n  function handleLanguageChange(lng) {\n    dispatch(changeLanguage(lng.id));\n\n    langMenuClose();\n  }\n\n  return (\n    <>\n      <Button className=\"h-40 w-64\" onClick={langMenuClick}>\n        <img\n          className=\"mx-4 min-w-20\"\n          src={`assets/images/flags/${currentLanguage.flag}.png`}\n          alt={currentLanguage.title}\n        />\n\n        <Typography className=\"mx-4 font-semibold uppercase\" color=\"textSecondary\">\n          {currentLanguage.id}\n        </Typography>\n      </Button>\n\n      <Popover\n        open={Boolean(menu)}\n        anchorEl={menu}\n        onClose={langMenuClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        classes={{\n          paper: 'py-8',\n        }}\n      >\n        {languages.map((lng) => (\n          <MenuItem key={lng.id} onClick={() => handleLanguageChange(lng)}>\n            <ListItemIcon className=\"min-w-40\">\n              <img\n                className=\"min-w-20\"\n                src={`assets/images/flags/${lng.flag}.png`}\n                alt={lng.title}\n              />\n            </ListItemIcon>\n            <ListItemText primary={lng.title} />\n          </MenuItem>\n        ))}\n\n        <MenuItem\n          component={Link}\n          to=\"/documentation/configuration/multi-language\"\n          onClick={langMenuClose}\n          role=\"button\"\n        >\n          <ListItemText primary=\"Learn More\" />\n        </MenuItem>\n      </Popover>\n    </>\n  );\n}\n\nexport default LanguageSwitcher;\n"]},"metadata":{},"sourceType":"module"}